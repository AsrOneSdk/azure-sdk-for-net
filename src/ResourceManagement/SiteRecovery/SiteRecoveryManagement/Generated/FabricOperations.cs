// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Hyak.Common;
using Hyak.Common.Internals;
using Microsoft.Azure;
using Microsoft.Azure.Management.SiteRecovery;
using Microsoft.Azure.Management.SiteRecovery.Models;
using Newtonsoft.Json.Linq;

namespace Microsoft.Azure.Management.SiteRecovery
{
    /// <summary>
    /// Definition of fabric operations for the Site Recovery extension.
    /// </summary>
    internal partial class FabricOperations : IServiceOperations<SiteRecoveryManagementClient>, IFabricOperations
    {
        /// <summary>
        /// Initializes a new instance of the FabricOperations class.
        /// </summary>
        /// <param name='client'>
        /// Reference to the service client.
        /// </param>
        internal FabricOperations(SiteRecoveryManagementClient client)
        {
            this._client = client;
        }
        
        private SiteRecoveryManagementClient _client;
        
        /// <summary>
        /// Gets a reference to the
        /// Microsoft.Azure.Management.SiteRecovery.SiteRecoveryManagementClient.
        /// </summary>
        public SiteRecoveryManagementClient Client
        {
            get { return this._client; }
        }
        
        /// <summary>
        /// Checks consistency of a fabric.
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> BeginCheckConsistencyAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            // Validate
            if (fabricName == null)
            {
                throw new ArgumentNullException("fabricName");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "BeginCheckConsistencyAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/Subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourceGroups/";
            url = url + Uri.EscapeDataString(this.Client.ResourceGroupName);
            url = url + "/providers/";
            url = url + Uri.EscapeDataString(this.Client.ResourceNamespace);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceType);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceName);
            url = url + "/replicationFabrics/";
            url = url + Uri.EscapeDataString(fabricName);
            url = url + "/checkConsistency";
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2018-07-10");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Post;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("Accept-Language", customRequestHeaders.Culture);
                httpRequest.Headers.Add("Agent-Authentication", customRequestHeaders.AgentAuthenticationHeader);
                httpRequest.Headers.Add("x-ms-client-request-id", customRequestHeaders.ClientRequestId);
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    result = new LongRunningOperationResponse();
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Creates a Fabric
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='input'>
        /// Required. Input to create fabric
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> BeginCreatingAsync(string fabricName, FabricCreationInput input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            // Validate
            if (fabricName == null)
            {
                throw new ArgumentNullException("fabricName");
            }
            if (input == null)
            {
                throw new ArgumentNullException("input");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("input", input);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "BeginCreatingAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/Subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourceGroups/";
            url = url + Uri.EscapeDataString(this.Client.ResourceGroupName);
            url = url + "/providers/";
            url = url + Uri.EscapeDataString(this.Client.ResourceNamespace);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceType);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceName);
            url = url + "/replicationFabrics/";
            url = url + Uri.EscapeDataString(fabricName);
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2018-07-10");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Put;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("Accept-Language", customRequestHeaders.Culture);
                httpRequest.Headers.Add("Agent-Authentication", customRequestHeaders.AgentAuthenticationHeader);
                httpRequest.Headers.Add("x-ms-client-request-id", customRequestHeaders.ClientRequestId);
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Serialize Request
                string requestContent = null;
                JToken requestDoc = null;
                
                JObject fabricCreationInputValue = new JObject();
                requestDoc = fabricCreationInputValue;
                
                if (input.Properties != null)
                {
                    JObject propertiesValue = new JObject();
                    fabricCreationInputValue["properties"] = propertiesValue;
                    
                    if (input.Properties.CustomDetails != null)
                    {
                        JObject customDetailsValue = new JObject();
                        propertiesValue["customDetails"] = customDetailsValue;
                        if (input.Properties.CustomDetails is AzureFabricCreationInput)
                        {
                            customDetailsValue["instanceType"] = "Azure";
                            AzureFabricCreationInput derived = ((AzureFabricCreationInput)input.Properties.CustomDetails);
                            
                            if (derived.Location != null)
                            {
                                customDetailsValue["location"] = derived.Location;
                            }
                            
                            if (derived.InstanceType != null)
                            {
                                customDetailsValue["instanceType"] = derived.InstanceType;
                            }
                        }
                        if (input.Properties.CustomDetails is VMwareV2FabricCreationInput)
                        {
                            customDetailsValue["instanceType"] = "VMwareV2";
                            VMwareV2FabricCreationInput derived2 = ((VMwareV2FabricCreationInput)input.Properties.CustomDetails);
                            
                            if (derived2.VMwareSiteId != null)
                            {
                                customDetailsValue["vmwareSiteId"] = derived2.VMwareSiteId;
                            }
                            
                            if (derived2.MigrationSolutionId != null)
                            {
                                customDetailsValue["migrationSolutionId"] = derived2.MigrationSolutionId;
                            }
                            
                            if (derived2.InstanceType != null)
                            {
                                customDetailsValue["instanceType"] = derived2.InstanceType;
                            }
                        }
                    }
                }
                
                requestContent = requestDoc.ToString(Newtonsoft.Json.Formatting.Indented);
                httpRequest.Content = new StringContent(requestContent, Encoding.UTF8);
                httpRequest.Content.Headers.ContentType = MediaTypeHeaderValue.Parse("application/json");
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, requestContent, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    result = new LongRunningOperationResponse();
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deletes a Fabric
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> BeginDeletingAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            // Validate
            if (fabricName == null)
            {
                throw new ArgumentNullException("fabricName");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "BeginDeletingAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/Subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourceGroups/";
            url = url + Uri.EscapeDataString(this.Client.ResourceGroupName);
            url = url + "/providers/";
            url = url + Uri.EscapeDataString(this.Client.ResourceNamespace);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceType);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceName);
            url = url + "/replicationFabrics/";
            url = url + Uri.EscapeDataString(fabricName);
            url = url + "/remove";
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2018-07-10");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Post;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("Accept-Language", customRequestHeaders.Culture);
                httpRequest.Headers.Add("Agent-Authentication", customRequestHeaders.AgentAuthenticationHeader);
                httpRequest.Headers.Add("x-ms-client-request-id", customRequestHeaders.ClientRequestId);
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.Accepted && statusCode != HttpStatusCode.NoContent)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    result = new LongRunningOperationResponse();
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deploy a Process Server.
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='input'>
        /// Required. Input to deploy a Process Server.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> BeginDeployProcessServerAsync(string fabricName, DeployProcessServerRequest input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            // Validate
            if (fabricName == null)
            {
                throw new ArgumentNullException("fabricName");
            }
            if (input == null)
            {
                throw new ArgumentNullException("input");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("input", input);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "BeginDeployProcessServerAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/Subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourceGroups/";
            url = url + Uri.EscapeDataString(this.Client.ResourceGroupName);
            url = url + "/providers/";
            url = url + Uri.EscapeDataString(this.Client.ResourceNamespace);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceType);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceName);
            url = url + "/replicationFabrics/";
            url = url + Uri.EscapeDataString(fabricName);
            url = url + "/deployProcessServer";
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2018-07-10");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Post;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("Accept-Language", customRequestHeaders.Culture);
                httpRequest.Headers.Add("Agent-Authentication", customRequestHeaders.AgentAuthenticationHeader);
                httpRequest.Headers.Add("x-ms-client-request-id", customRequestHeaders.ClientRequestId);
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Serialize Request
                string requestContent = null;
                JToken requestDoc = null;
                
                JObject deployProcessServerRequestValue = new JObject();
                requestDoc = deployProcessServerRequestValue;
                
                if (input.Properties != null)
                {
                    JObject propertiesValue = new JObject();
                    deployProcessServerRequestValue["properties"] = propertiesValue;
                    
                    if (input.Properties.SubscriptionId != null)
                    {
                        propertiesValue["subscriptionId"] = input.Properties.SubscriptionId;
                    }
                    
                    if (input.Properties.VaultLocation != null)
                    {
                        propertiesValue["vaultLocation"] = input.Properties.VaultLocation;
                    }
                    
                    if (input.Properties.ProcessServerName != null)
                    {
                        propertiesValue["friendlyName"] = input.Properties.ProcessServerName;
                    }
                    
                    if (input.Properties.Username != null)
                    {
                        propertiesValue["userName"] = input.Properties.Username;
                    }
                    
                    if (input.Properties.Password != null)
                    {
                        propertiesValue["password"] = input.Properties.Password;
                    }
                    
                    if (input.Properties.IpAddress != null)
                    {
                        propertiesValue["ipAddress"] = input.Properties.IpAddress;
                    }
                    
                    if (input.Properties.AzureNetworkName != null)
                    {
                        propertiesValue["azureNetworkName"] = input.Properties.AzureNetworkName;
                    }
                    
                    if (input.Properties.AzureNetworkSubnet != null)
                    {
                        propertiesValue["azureNetworkSubnet"] = input.Properties.AzureNetworkSubnet;
                    }
                }
                
                requestContent = requestDoc.ToString(Newtonsoft.Json.Formatting.Indented);
                httpRequest.Content = new StringContent(requestContent, Encoding.UTF8);
                httpRequest.Content.Headers.ContentType = MediaTypeHeaderValue.Parse("application/json");
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, requestContent, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    result = new LongRunningOperationResponse();
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Migrates Fabric to AAD.
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> BeginMigrateToAadAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            // Validate
            if (fabricName == null)
            {
                throw new ArgumentNullException("fabricName");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "BeginMigrateToAadAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/Subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourceGroups/";
            url = url + Uri.EscapeDataString(this.Client.ResourceGroupName);
            url = url + "/providers/";
            url = url + Uri.EscapeDataString(this.Client.ResourceNamespace);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceType);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceName);
            url = url + "/replicationFabrics/";
            url = url + Uri.EscapeDataString(fabricName);
            url = url + "/migratetoaad";
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2018-07-10");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Post;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("Accept-Language", customRequestHeaders.Culture);
                httpRequest.Headers.Add("Agent-Authentication", customRequestHeaders.AgentAuthenticationHeader);
                httpRequest.Headers.Add("x-ms-client-request-id", customRequestHeaders.ClientRequestId);
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.Accepted && statusCode != HttpStatusCode.NoContent)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    result = new LongRunningOperationResponse();
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Purges a Fabric
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> BeginPurgingAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            // Validate
            if (fabricName == null)
            {
                throw new ArgumentNullException("fabricName");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "BeginPurgingAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/Subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourceGroups/";
            url = url + Uri.EscapeDataString(this.Client.ResourceGroupName);
            url = url + "/providers/";
            url = url + Uri.EscapeDataString(this.Client.ResourceNamespace);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceType);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceName);
            url = url + "/replicationFabrics/";
            url = url + Uri.EscapeDataString(fabricName);
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2018-07-10");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Delete;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("Accept-Language", customRequestHeaders.Culture);
                httpRequest.Headers.Add("Agent-Authentication", customRequestHeaders.AgentAuthenticationHeader);
                httpRequest.Headers.Add("x-ms-client-request-id", customRequestHeaders.ClientRequestId);
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.Accepted && statusCode != HttpStatusCode.NoContent)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    result = new LongRunningOperationResponse();
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Performs reassociate gateway operation on a fabric.
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='input'>
        /// Required. Input to reassociate a gateway.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> BeginReassociateGatewayAsync(string fabricName, FailoverProcessServerRequest input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            // Validate
            if (fabricName == null)
            {
                throw new ArgumentNullException("fabricName");
            }
            if (input == null)
            {
                throw new ArgumentNullException("input");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("input", input);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "BeginReassociateGatewayAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/Subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourceGroups/";
            url = url + Uri.EscapeDataString(this.Client.ResourceGroupName);
            url = url + "/providers/";
            url = url + Uri.EscapeDataString(this.Client.ResourceNamespace);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceType);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceName);
            url = url + "/replicationFabrics/";
            url = url + Uri.EscapeDataString(fabricName);
            url = url + "/reassociateGateway";
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2018-07-10");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Post;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("Accept-Language", customRequestHeaders.Culture);
                httpRequest.Headers.Add("Agent-Authentication", customRequestHeaders.AgentAuthenticationHeader);
                httpRequest.Headers.Add("x-ms-client-request-id", customRequestHeaders.ClientRequestId);
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Serialize Request
                string requestContent = null;
                JToken requestDoc = null;
                
                JObject failoverProcessServerRequestValue = new JObject();
                requestDoc = failoverProcessServerRequestValue;
                
                if (input.Properties != null)
                {
                    JObject propertiesValue = new JObject();
                    failoverProcessServerRequestValue["properties"] = propertiesValue;
                    
                    if (input.Properties.ContainerId != null)
                    {
                        propertiesValue["containerName"] = input.Properties.ContainerId;
                    }
                    
                    if (input.Properties.SourceProcessServerId != null)
                    {
                        propertiesValue["sourceProcessServerId"] = input.Properties.SourceProcessServerId;
                    }
                    
                    if (input.Properties.TargetProcessServerId != null)
                    {
                        propertiesValue["targetProcessServerId"] = input.Properties.TargetProcessServerId;
                    }
                    
                    if (input.Properties.VmsToMigrate != null)
                    {
                        if (input.Properties.VmsToMigrate is ILazyCollection == false || ((ILazyCollection)input.Properties.VmsToMigrate).IsInitialized)
                        {
                            JArray vmsToMigrateArray = new JArray();
                            foreach (string vmsToMigrateItem in input.Properties.VmsToMigrate)
                            {
                                vmsToMigrateArray.Add(vmsToMigrateItem);
                            }
                            propertiesValue["vmsToMigrate"] = vmsToMigrateArray;
                        }
                    }
                    
                    if (input.Properties.FailoverType != null)
                    {
                        propertiesValue["updateType"] = input.Properties.FailoverType;
                    }
                }
                
                requestContent = requestDoc.ToString(Newtonsoft.Json.Formatting.Indented);
                httpRequest.Content = new StringContent(requestContent, Encoding.UTF8);
                httpRequest.Content.Headers.ContentType = MediaTypeHeaderValue.Parse("application/json");
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, requestContent, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    result = new LongRunningOperationResponse();
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Renews certificates of a Fabric
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='input'>
        /// Required. Renew certificate type.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> BeginRenewCertificateAsync(string fabricName, RenewCertificateInput input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            // Validate
            if (fabricName == null)
            {
                throw new ArgumentNullException("fabricName");
            }
            if (input == null)
            {
                throw new ArgumentNullException("input");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("input", input);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "BeginRenewCertificateAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/Subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourceGroups/";
            url = url + Uri.EscapeDataString(this.Client.ResourceGroupName);
            url = url + "/providers/";
            url = url + Uri.EscapeDataString(this.Client.ResourceNamespace);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceType);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceName);
            url = url + "/replicationFabrics/";
            url = url + Uri.EscapeDataString(fabricName);
            url = url + "/renewCertificate";
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2018-07-10");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Post;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("Accept-Language", customRequestHeaders.Culture);
                httpRequest.Headers.Add("Agent-Authentication", customRequestHeaders.AgentAuthenticationHeader);
                httpRequest.Headers.Add("x-ms-client-request-id", customRequestHeaders.ClientRequestId);
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Serialize Request
                string requestContent = null;
                JToken requestDoc = null;
                
                JObject renewCertificateInputValue = new JObject();
                requestDoc = renewCertificateInputValue;
                
                if (input.Properties != null)
                {
                    JObject propertiesValue = new JObject();
                    renewCertificateInputValue["properties"] = propertiesValue;
                    
                    if (input.Properties.RenewCertificateType != null)
                    {
                        propertiesValue["renewCertificateType"] = input.Properties.RenewCertificateType;
                    }
                }
                
                requestContent = requestDoc.ToString(Newtonsoft.Json.Formatting.Indented);
                httpRequest.Content = new StringContent(requestContent, Encoding.UTF8);
                httpRequest.Content.Headers.ContentType = MediaTypeHeaderValue.Parse("application/json");
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.Accepted && statusCode != HttpStatusCode.NoContent)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, requestContent, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    result = new LongRunningOperationResponse();
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Checks consistency of a fabric.
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> CheckConsistencyAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            SiteRecoveryManagementClient client = this.Client;
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "CheckConsistencyAsync", tracingParameters);
            }
            
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse response = await client.Fabrics.BeginCheckConsistencyAsync(fabricName, customRequestHeaders, cancellationToken).ConfigureAwait(false);
            if (response.Status == OperationStatus.Succeeded)
            {
                return response;
            }
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse result = await client.Fabrics.GetCheckConsistencyStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
            int delayInSeconds = 30;
            if (client.LongRunningOperationInitialTimeout >= 0)
            {
                delayInSeconds = client.LongRunningOperationInitialTimeout;
            }
            while (result.Status == OperationStatus.InProgress)
            {
                cancellationToken.ThrowIfCancellationRequested();
                await TaskEx.Delay(delayInSeconds * 1000, cancellationToken).ConfigureAwait(false);
                cancellationToken.ThrowIfCancellationRequested();
                result = await client.Fabrics.GetCheckConsistencyStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
                delayInSeconds = 30;
                if (client.LongRunningOperationRetryTimeout >= 0)
                {
                    delayInSeconds = client.LongRunningOperationRetryTimeout;
                }
            }
            
            if (shouldTrace)
            {
                TracingAdapter.Exit(invocationId, result);
            }
            
            return result;
        }
        
        /// <summary>
        /// Creates a fabric
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='input'>
        /// Required. Input to create fabric
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> CreateAsync(string fabricName, FabricCreationInput input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            SiteRecoveryManagementClient client = this.Client;
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("input", input);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "CreateAsync", tracingParameters);
            }
            
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse response = await client.Fabrics.BeginCreatingAsync(fabricName, input, customRequestHeaders, cancellationToken).ConfigureAwait(false);
            if (response.Status == OperationStatus.Succeeded)
            {
                return response;
            }
            cancellationToken.ThrowIfCancellationRequested();
            FabricOperationResponse result = await client.Fabrics.GetCreateStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
            int delayInSeconds = 30;
            if (client.LongRunningOperationInitialTimeout >= 0)
            {
                delayInSeconds = client.LongRunningOperationInitialTimeout;
            }
            while (result.Status == OperationStatus.InProgress)
            {
                cancellationToken.ThrowIfCancellationRequested();
                await TaskEx.Delay(delayInSeconds * 1000, cancellationToken).ConfigureAwait(false);
                cancellationToken.ThrowIfCancellationRequested();
                result = await client.Fabrics.GetCreateStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
                delayInSeconds = 30;
                if (client.LongRunningOperationRetryTimeout >= 0)
                {
                    delayInSeconds = client.LongRunningOperationRetryTimeout;
                }
            }
            
            if (shouldTrace)
            {
                TracingAdapter.Exit(invocationId, result);
            }
            
            return result;
        }
        
        /// <summary>
        /// Deletes a fabric
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> DeleteAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            SiteRecoveryManagementClient client = this.Client;
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "DeleteAsync", tracingParameters);
            }
            
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse response = await client.Fabrics.BeginDeletingAsync(fabricName, customRequestHeaders, cancellationToken).ConfigureAwait(false);
            if (response.Status == OperationStatus.Succeeded)
            {
                return response;
            }
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse result = await client.Fabrics.GetDeleteStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
            int delayInSeconds = 30;
            if (client.LongRunningOperationInitialTimeout >= 0)
            {
                delayInSeconds = client.LongRunningOperationInitialTimeout;
            }
            while (result.Status == OperationStatus.InProgress)
            {
                cancellationToken.ThrowIfCancellationRequested();
                await TaskEx.Delay(delayInSeconds * 1000, cancellationToken).ConfigureAwait(false);
                cancellationToken.ThrowIfCancellationRequested();
                result = await client.Fabrics.GetDeleteStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
                delayInSeconds = 30;
                if (client.LongRunningOperationRetryTimeout >= 0)
                {
                    delayInSeconds = client.LongRunningOperationRetryTimeout;
                }
            }
            
            if (shouldTrace)
            {
                TracingAdapter.Exit(invocationId, result);
            }
            
            return result;
        }
        
        /// <summary>
        /// Deploy a Process Server.
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='input'>
        /// Required. Input to deploy a Process Server.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> DeployProcessServerAsync(string fabricName, DeployProcessServerRequest input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            SiteRecoveryManagementClient client = this.Client;
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("input", input);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "DeployProcessServerAsync", tracingParameters);
            }
            
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse response = await client.Fabrics.BeginDeployProcessServerAsync(fabricName, input, customRequestHeaders, cancellationToken).ConfigureAwait(false);
            if (response.Status == OperationStatus.Succeeded)
            {
                return response;
            }
            cancellationToken.ThrowIfCancellationRequested();
            DeployProcessServerOperationResponse result = await client.Fabrics.GetDeployProcessServerStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
            int delayInSeconds = 30;
            if (client.LongRunningOperationInitialTimeout >= 0)
            {
                delayInSeconds = client.LongRunningOperationInitialTimeout;
            }
            while (result.Status == OperationStatus.InProgress)
            {
                cancellationToken.ThrowIfCancellationRequested();
                await TaskEx.Delay(delayInSeconds * 1000, cancellationToken).ConfigureAwait(false);
                cancellationToken.ThrowIfCancellationRequested();
                result = await client.Fabrics.GetDeployProcessServerStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
                delayInSeconds = 30;
                if (client.LongRunningOperationRetryTimeout >= 0)
                {
                    delayInSeconds = client.LongRunningOperationRetryTimeout;
                }
            }
            
            if (shouldTrace)
            {
                TracingAdapter.Exit(invocationId, result);
            }
            
            return result;
        }
        
        /// <summary>
        /// Get the server object by Id.
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the fabric object
        /// </returns>
        public async Task<FabricResponse> GetAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            // Validate
            if (fabricName == null)
            {
                throw new ArgumentNullException("fabricName");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "GetAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/Subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourceGroups/";
            url = url + Uri.EscapeDataString(this.Client.ResourceGroupName);
            url = url + "/providers/";
            url = url + Uri.EscapeDataString(this.Client.ResourceNamespace);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceType);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceName);
            url = url + "/replicationFabrics/";
            url = url + Uri.EscapeDataString(fabricName);
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2018-07-10");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("Accept-Language", customRequestHeaders.Culture);
                httpRequest.Headers.Add("x-ms-client-request-id", customRequestHeaders.ClientRequestId);
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    FabricResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new FabricResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            Fabric fabricInstance = new Fabric();
                            result.Fabric = fabricInstance;
                            
                            JToken propertiesValue = responseDoc["properties"];
                            if (propertiesValue != null && propertiesValue.Type != JTokenType.Null)
                            {
                                FabricProperties propertiesInstance = new FabricProperties();
                                fabricInstance.Properties = propertiesInstance;
                                
                                JToken friendlyNameValue = propertiesValue["friendlyName"];
                                if (friendlyNameValue != null && friendlyNameValue.Type != JTokenType.Null)
                                {
                                    string friendlyNameInstance = ((string)friendlyNameValue);
                                    propertiesInstance.FriendlyName = friendlyNameInstance;
                                }
                                
                                JToken internalIdentifierValue = propertiesValue["internalIdentifier"];
                                if (internalIdentifierValue != null && internalIdentifierValue.Type != JTokenType.Null)
                                {
                                    string internalIdentifierInstance = ((string)internalIdentifierValue);
                                    propertiesInstance.InternalIdentifier = internalIdentifierInstance;
                                }
                                
                                JToken bcdrStateValue = propertiesValue["bcdrState"];
                                if (bcdrStateValue != null && bcdrStateValue.Type != JTokenType.Null)
                                {
                                    string bcdrStateInstance = ((string)bcdrStateValue);
                                    propertiesInstance.BcdrState = bcdrStateInstance;
                                }
                                
                                JToken encryptionDetailsValue = propertiesValue["encryptionDetails"];
                                if (encryptionDetailsValue != null && encryptionDetailsValue.Type != JTokenType.Null)
                                {
                                    EncryptionDetails encryptionDetailsInstance = new EncryptionDetails();
                                    propertiesInstance.EncryptionDetails = encryptionDetailsInstance;
                                    
                                    JToken kekStateValue = encryptionDetailsValue["kekState"];
                                    if (kekStateValue != null && kekStateValue.Type != JTokenType.Null)
                                    {
                                        string kekStateInstance = ((string)kekStateValue);
                                        encryptionDetailsInstance.KekState = kekStateInstance;
                                    }
                                    
                                    JToken kekCertThumbprintValue = encryptionDetailsValue["kekCertThumbprint"];
                                    if (kekCertThumbprintValue != null && kekCertThumbprintValue.Type != JTokenType.Null)
                                    {
                                        string kekCertThumbprintInstance = ((string)kekCertThumbprintValue);
                                        encryptionDetailsInstance.KekCertThumbprint = kekCertThumbprintInstance;
                                    }
                                    
                                    JToken kekCertExpiryDateValue = encryptionDetailsValue["kekCertExpiryDate"];
                                    if (kekCertExpiryDateValue != null && kekCertExpiryDateValue.Type != JTokenType.Null)
                                    {
                                        DateTime kekCertExpiryDateInstance = ((DateTime)kekCertExpiryDateValue);
                                        encryptionDetailsInstance.KekCertExpiryDate = kekCertExpiryDateInstance;
                                    }
                                }
                                
                                JToken rolloverEncryptionDetailsValue = propertiesValue["rolloverEncryptionDetails"];
                                if (rolloverEncryptionDetailsValue != null && rolloverEncryptionDetailsValue.Type != JTokenType.Null)
                                {
                                    EncryptionDetails rolloverEncryptionDetailsInstance = new EncryptionDetails();
                                    propertiesInstance.RolloverEncryptionDetails = rolloverEncryptionDetailsInstance;
                                    
                                    JToken kekStateValue2 = rolloverEncryptionDetailsValue["kekState"];
                                    if (kekStateValue2 != null && kekStateValue2.Type != JTokenType.Null)
                                    {
                                        string kekStateInstance2 = ((string)kekStateValue2);
                                        rolloverEncryptionDetailsInstance.KekState = kekStateInstance2;
                                    }
                                    
                                    JToken kekCertThumbprintValue2 = rolloverEncryptionDetailsValue["kekCertThumbprint"];
                                    if (kekCertThumbprintValue2 != null && kekCertThumbprintValue2.Type != JTokenType.Null)
                                    {
                                        string kekCertThumbprintInstance2 = ((string)kekCertThumbprintValue2);
                                        rolloverEncryptionDetailsInstance.KekCertThumbprint = kekCertThumbprintInstance2;
                                    }
                                    
                                    JToken kekCertExpiryDateValue2 = rolloverEncryptionDetailsValue["kekCertExpiryDate"];
                                    if (kekCertExpiryDateValue2 != null && kekCertExpiryDateValue2.Type != JTokenType.Null)
                                    {
                                        DateTime kekCertExpiryDateInstance2 = ((DateTime)kekCertExpiryDateValue2);
                                        rolloverEncryptionDetailsInstance.KekCertExpiryDate = kekCertExpiryDateInstance2;
                                    }
                                }
                                
                                JToken customDetailsValue = propertiesValue["customDetails"];
                                if (customDetailsValue != null && customDetailsValue.Type != JTokenType.Null)
                                {
                                    string typeName = ((string)customDetailsValue["instanceType"]);
                                    if (typeName == "VMM")
                                    {
                                        VmmDetails vmmDetailsInstance = new VmmDetails();
                                        
                                        JToken instanceTypeValue = customDetailsValue["instanceType"];
                                        if (instanceTypeValue != null && instanceTypeValue.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance = ((string)instanceTypeValue);
                                            vmmDetailsInstance.InstanceType = instanceTypeInstance;
                                        }
                                        propertiesInstance.CustomDetails = vmmDetailsInstance;
                                    }
                                    if (typeName == "HyperVSite")
                                    {
                                        HyperVSiteDetails hyperVSiteDetailsInstance = new HyperVSiteDetails();
                                        
                                        JToken instanceTypeValue2 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue2 != null && instanceTypeValue2.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance2 = ((string)instanceTypeValue2);
                                            hyperVSiteDetailsInstance.InstanceType = instanceTypeInstance2;
                                        }
                                        propertiesInstance.CustomDetails = hyperVSiteDetailsInstance;
                                    }
                                    if (typeName == "Azure")
                                    {
                                        AzureFabricSpecificDetails azureFabricSpecificDetailsInstance = new AzureFabricSpecificDetails();
                                        
                                        JToken locationValue = customDetailsValue["location"];
                                        if (locationValue != null && locationValue.Type != JTokenType.Null)
                                        {
                                            string locationInstance = ((string)locationValue);
                                            azureFabricSpecificDetailsInstance.Location = locationInstance;
                                        }
                                        
                                        JToken containerIdsArray = customDetailsValue["containerIds"];
                                        if (containerIdsArray != null && containerIdsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken containerIdsValue in ((JArray)containerIdsArray))
                                            {
                                                azureFabricSpecificDetailsInstance.ContainerIds.Add(((string)containerIdsValue));
                                            }
                                        }
                                        
                                        JToken instanceTypeValue3 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue3 != null && instanceTypeValue3.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance3 = ((string)instanceTypeValue3);
                                            azureFabricSpecificDetailsInstance.InstanceType = instanceTypeInstance3;
                                        }
                                        propertiesInstance.CustomDetails = azureFabricSpecificDetailsInstance;
                                    }
                                    if (typeName == "VMware")
                                    {
                                        VMwareFabricDetails vMwareFabricDetailsInstance = new VMwareFabricDetails();
                                        
                                        JToken processServersArray = customDetailsValue["processServers"];
                                        if (processServersArray != null && processServersArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken processServersValue in ((JArray)processServersArray))
                                            {
                                                ProcessServer processServerInstance = new ProcessServer();
                                                vMwareFabricDetailsInstance.ProcessServers.Add(processServerInstance);
                                                
                                                JToken friendlyNameValue2 = processServersValue["friendlyName"];
                                                if (friendlyNameValue2 != null && friendlyNameValue2.Type != JTokenType.Null)
                                                {
                                                    string friendlyNameInstance2 = ((string)friendlyNameValue2);
                                                    processServerInstance.FriendlyName = friendlyNameInstance2;
                                                }
                                                
                                                JToken idValue = processServersValue["id"];
                                                if (idValue != null && idValue.Type != JTokenType.Null)
                                                {
                                                    string idInstance = ((string)idValue);
                                                    processServerInstance.Id = idInstance;
                                                }
                                                
                                                JToken ipAddressValue = processServersValue["ipAddress"];
                                                if (ipAddressValue != null && ipAddressValue.Type != JTokenType.Null)
                                                {
                                                    string ipAddressInstance = ((string)ipAddressValue);
                                                    processServerInstance.IpAddress = ipAddressInstance;
                                                }
                                                
                                                JToken osTypeValue = processServersValue["osType"];
                                                if (osTypeValue != null && osTypeValue.Type != JTokenType.Null)
                                                {
                                                    string osTypeInstance = ((string)osTypeValue);
                                                    processServerInstance.OsType = osTypeInstance;
                                                }
                                                
                                                JToken agentVersionValue = processServersValue["agentVersion"];
                                                if (agentVersionValue != null && agentVersionValue.Type != JTokenType.Null)
                                                {
                                                    string agentVersionInstance = ((string)agentVersionValue);
                                                    processServerInstance.AgentVersion = agentVersionInstance;
                                                }
                                                
                                                JToken lastHeartbeatValue = processServersValue["lastHeartbeat"];
                                                if (lastHeartbeatValue != null && lastHeartbeatValue.Type != JTokenType.Null)
                                                {
                                                    DateTime lastHeartbeatInstance = ((DateTime)lastHeartbeatValue);
                                                    processServerInstance.LastHeartbeat = lastHeartbeatInstance;
                                                }
                                                
                                                JToken versionStatusValue = processServersValue["versionStatus"];
                                                if (versionStatusValue != null && versionStatusValue.Type != JTokenType.Null)
                                                {
                                                    string versionStatusInstance = ((string)versionStatusValue);
                                                    processServerInstance.VersionStatus = versionStatusInstance;
                                                }
                                                
                                                JToken mobilityServiceUpdatesArray = processServersValue["mobilityServiceUpdates"];
                                                if (mobilityServiceUpdatesArray != null && mobilityServiceUpdatesArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken mobilityServiceUpdatesValue in ((JArray)mobilityServiceUpdatesArray))
                                                    {
                                                        MobilityServiceUpdate mobilityServiceUpdateInstance = new MobilityServiceUpdate();
                                                        processServerInstance.Updates.Add(mobilityServiceUpdateInstance);
                                                        
                                                        JToken versionValue = mobilityServiceUpdatesValue["version"];
                                                        if (versionValue != null && versionValue.Type != JTokenType.Null)
                                                        {
                                                            string versionInstance = ((string)versionValue);
                                                            mobilityServiceUpdateInstance.Version = versionInstance;
                                                        }
                                                        
                                                        JToken rebootStatusValue = mobilityServiceUpdatesValue["rebootStatus"];
                                                        if (rebootStatusValue != null && rebootStatusValue.Type != JTokenType.Null)
                                                        {
                                                            string rebootStatusInstance = ((string)rebootStatusValue);
                                                            mobilityServiceUpdateInstance.RebootStatus = rebootStatusInstance;
                                                        }
                                                        
                                                        JToken osTypeValue2 = mobilityServiceUpdatesValue["osType"];
                                                        if (osTypeValue2 != null && osTypeValue2.Type != JTokenType.Null)
                                                        {
                                                            string osTypeInstance2 = ((string)osTypeValue2);
                                                            mobilityServiceUpdateInstance.OsType = osTypeInstance2;
                                                        }
                                                    }
                                                }
                                                
                                                JToken hostIdValue = processServersValue["hostId"];
                                                if (hostIdValue != null && hostIdValue.Type != JTokenType.Null)
                                                {
                                                    string hostIdInstance = ((string)hostIdValue);
                                                    processServerInstance.HostId = hostIdInstance;
                                                }
                                                
                                                JToken machineCountValue = processServersValue["machineCount"];
                                                if (machineCountValue != null && machineCountValue.Type != JTokenType.Null)
                                                {
                                                    string machineCountInstance = ((string)machineCountValue);
                                                    processServerInstance.ServerCount = machineCountInstance;
                                                }
                                                
                                                JToken replicationPairCountValue = processServersValue["replicationPairCount"];
                                                if (replicationPairCountValue != null && replicationPairCountValue.Type != JTokenType.Null)
                                                {
                                                    string replicationPairCountInstance = ((string)replicationPairCountValue);
                                                    processServerInstance.ReplicationPairCount = replicationPairCountInstance;
                                                }
                                                
                                                JToken systemLoadValue = processServersValue["systemLoad"];
                                                if (systemLoadValue != null && systemLoadValue.Type != JTokenType.Null)
                                                {
                                                    string systemLoadInstance = ((string)systemLoadValue);
                                                    processServerInstance.SystemLoad = systemLoadInstance;
                                                }
                                                
                                                JToken systemLoadStatusValue = processServersValue["systemLoadStatus"];
                                                if (systemLoadStatusValue != null && systemLoadStatusValue.Type != JTokenType.Null)
                                                {
                                                    string systemLoadStatusInstance = ((string)systemLoadStatusValue);
                                                    processServerInstance.SystemLoadStatus = systemLoadStatusInstance;
                                                }
                                                
                                                JToken cpuLoadValue = processServersValue["cpuLoad"];
                                                if (cpuLoadValue != null && cpuLoadValue.Type != JTokenType.Null)
                                                {
                                                    string cpuLoadInstance = ((string)cpuLoadValue);
                                                    processServerInstance.CpuLoad = cpuLoadInstance;
                                                }
                                                
                                                JToken cpuLoadStatusValue = processServersValue["cpuLoadStatus"];
                                                if (cpuLoadStatusValue != null && cpuLoadStatusValue.Type != JTokenType.Null)
                                                {
                                                    string cpuLoadStatusInstance = ((string)cpuLoadStatusValue);
                                                    processServerInstance.CpuLoadStatus = cpuLoadStatusInstance;
                                                }
                                                
                                                JToken totalMemoryInBytesValue = processServersValue["totalMemoryInBytes"];
                                                if (totalMemoryInBytesValue != null && totalMemoryInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long totalMemoryInBytesInstance = ((long)totalMemoryInBytesValue);
                                                    processServerInstance.TotalMemoryInBytes = totalMemoryInBytesInstance;
                                                }
                                                
                                                JToken availableMemoryInBytesValue = processServersValue["availableMemoryInBytes"];
                                                if (availableMemoryInBytesValue != null && availableMemoryInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long availableMemoryInBytesInstance = ((long)availableMemoryInBytesValue);
                                                    processServerInstance.AvailableMemoryInBytes = availableMemoryInBytesInstance;
                                                }
                                                
                                                JToken memoryUsageStatusValue = processServersValue["memoryUsageStatus"];
                                                if (memoryUsageStatusValue != null && memoryUsageStatusValue.Type != JTokenType.Null)
                                                {
                                                    string memoryUsageStatusInstance = ((string)memoryUsageStatusValue);
                                                    processServerInstance.MemoryUsageStatus = memoryUsageStatusInstance;
                                                }
                                                
                                                JToken totalSpaceInBytesValue = processServersValue["totalSpaceInBytes"];
                                                if (totalSpaceInBytesValue != null && totalSpaceInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long totalSpaceInBytesInstance = ((long)totalSpaceInBytesValue);
                                                    processServerInstance.TotalSpaceInBytes = totalSpaceInBytesInstance;
                                                }
                                                
                                                JToken availableSpaceInBytesValue = processServersValue["availableSpaceInBytes"];
                                                if (availableSpaceInBytesValue != null && availableSpaceInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long availableSpaceInBytesInstance = ((long)availableSpaceInBytesValue);
                                                    processServerInstance.AvailableSpaceInBytes = availableSpaceInBytesInstance;
                                                }
                                                
                                                JToken spaceUsageStatusValue = processServersValue["spaceUsageStatus"];
                                                if (spaceUsageStatusValue != null && spaceUsageStatusValue.Type != JTokenType.Null)
                                                {
                                                    string spaceUsageStatusInstance = ((string)spaceUsageStatusValue);
                                                    processServerInstance.SpaceUsageStatus = spaceUsageStatusInstance;
                                                }
                                                
                                                JToken psServiceStatusValue = processServersValue["psServiceStatus"];
                                                if (psServiceStatusValue != null && psServiceStatusValue.Type != JTokenType.Null)
                                                {
                                                    string psServiceStatusInstance = ((string)psServiceStatusValue);
                                                    processServerInstance.PsServiceStatus = psServiceStatusInstance;
                                                }
                                                
                                                JToken sslCertExpiryDateValue = processServersValue["sslCertExpiryDate"];
                                                if (sslCertExpiryDateValue != null && sslCertExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime sslCertExpiryDateInstance = ((DateTime)sslCertExpiryDateValue);
                                                    processServerInstance.SslCertExpiryDate = sslCertExpiryDateInstance;
                                                }
                                                
                                                JToken sslCertExpiryRemainingDaysValue = processServersValue["sslCertExpiryRemainingDays"];
                                                if (sslCertExpiryRemainingDaysValue != null && sslCertExpiryRemainingDaysValue.Type != JTokenType.Null)
                                                {
                                                    int sslCertExpiryRemainingDaysInstance = ((int)sslCertExpiryRemainingDaysValue);
                                                    processServerInstance.SslCertExpiryRemainingDays = sslCertExpiryRemainingDaysInstance;
                                                }
                                                
                                                JToken osVersionValue = processServersValue["osVersion"];
                                                if (osVersionValue != null && osVersionValue.Type != JTokenType.Null)
                                                {
                                                    string osVersionInstance = ((string)osVersionValue);
                                                    processServerInstance.OsVersion = osVersionInstance;
                                                }
                                                
                                                JToken healthErrorsArray = processServersValue["healthErrors"];
                                                if (healthErrorsArray != null && healthErrorsArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken healthErrorsValue in ((JArray)healthErrorsArray))
                                                    {
                                                        HealthError healthErrorInstance = new HealthError();
                                                        processServerInstance.HealthErrors.Add(healthErrorInstance);
                                                        
                                                        JToken errorSourceValue = healthErrorsValue["errorSource"];
                                                        if (errorSourceValue != null && errorSourceValue.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance = ((string)errorSourceValue);
                                                            healthErrorInstance.ErrorSource = errorSourceInstance;
                                                        }
                                                        
                                                        JToken errorTypeValue = healthErrorsValue["errorType"];
                                                        if (errorTypeValue != null && errorTypeValue.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance = ((string)errorTypeValue);
                                                            healthErrorInstance.ErrorType = errorTypeInstance;
                                                        }
                                                        
                                                        JToken errorLevelValue = healthErrorsValue["errorLevel"];
                                                        if (errorLevelValue != null && errorLevelValue.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance = ((string)errorLevelValue);
                                                            healthErrorInstance.ErrorLevel = errorLevelInstance;
                                                        }
                                                        
                                                        JToken errorCategoryValue = healthErrorsValue["errorCategory"];
                                                        if (errorCategoryValue != null && errorCategoryValue.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance = ((string)errorCategoryValue);
                                                            healthErrorInstance.ErrorCategory = errorCategoryInstance;
                                                        }
                                                        
                                                        JToken errorCodeValue = healthErrorsValue["errorCode"];
                                                        if (errorCodeValue != null && errorCodeValue.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance = ((string)errorCodeValue);
                                                            healthErrorInstance.ErrorCode = errorCodeInstance;
                                                        }
                                                        
                                                        JToken errorMessageValue = healthErrorsValue["errorMessage"];
                                                        if (errorMessageValue != null && errorMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance = ((string)errorMessageValue);
                                                            healthErrorInstance.ErrorMessage = errorMessageInstance;
                                                        }
                                                        
                                                        JToken summaryMessageValue = healthErrorsValue["summaryMessage"];
                                                        if (summaryMessageValue != null && summaryMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance = ((string)summaryMessageValue);
                                                            healthErrorInstance.SummaryMessage = summaryMessageInstance;
                                                        }
                                                        
                                                        JToken possibleCausesValue = healthErrorsValue["possibleCauses"];
                                                        if (possibleCausesValue != null && possibleCausesValue.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance = ((string)possibleCausesValue);
                                                            healthErrorInstance.PossibleCauses = possibleCausesInstance;
                                                        }
                                                        
                                                        JToken recommendedActionValue = healthErrorsValue["recommendedAction"];
                                                        if (recommendedActionValue != null && recommendedActionValue.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance = ((string)recommendedActionValue);
                                                            healthErrorInstance.RecommendedAction = recommendedActionInstance;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue = healthErrorsValue["creationTimeUtc"];
                                                        if (creationTimeUtcValue != null && creationTimeUtcValue.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance = ((DateTime)creationTimeUtcValue);
                                                            healthErrorInstance.CreationTimeUtc = creationTimeUtcInstance;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue = healthErrorsValue["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue != null && recoveryProviderErrorMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance = ((string)recoveryProviderErrorMessageValue);
                                                            healthErrorInstance.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance;
                                                        }
                                                        
                                                        JToken entityIdValue = healthErrorsValue["entityId"];
                                                        if (entityIdValue != null && entityIdValue.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance = ((string)entityIdValue);
                                                            healthErrorInstance.EntityId = entityIdInstance;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray = healthErrorsValue["innerHealthErrors"];
                                                        if (innerHealthErrorsArray != null && innerHealthErrorsArray.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue in ((JArray)innerHealthErrorsArray))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance = new InnerHealthError();
                                                                healthErrorInstance.InnerHealthErrors.Add(innerHealthErrorInstance);
                                                                
                                                                JToken errorSourceValue2 = innerHealthErrorsValue["errorSource"];
                                                                if (errorSourceValue2 != null && errorSourceValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance2 = ((string)errorSourceValue2);
                                                                    innerHealthErrorInstance.ErrorSource = errorSourceInstance2;
                                                                }
                                                                
                                                                JToken errorTypeValue2 = innerHealthErrorsValue["errorType"];
                                                                if (errorTypeValue2 != null && errorTypeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance2 = ((string)errorTypeValue2);
                                                                    innerHealthErrorInstance.ErrorType = errorTypeInstance2;
                                                                }
                                                                
                                                                JToken errorLevelValue2 = innerHealthErrorsValue["errorLevel"];
                                                                if (errorLevelValue2 != null && errorLevelValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance2 = ((string)errorLevelValue2);
                                                                    innerHealthErrorInstance.ErrorLevel = errorLevelInstance2;
                                                                }
                                                                
                                                                JToken errorCategoryValue2 = innerHealthErrorsValue["errorCategory"];
                                                                if (errorCategoryValue2 != null && errorCategoryValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance2 = ((string)errorCategoryValue2);
                                                                    innerHealthErrorInstance.ErrorCategory = errorCategoryInstance2;
                                                                }
                                                                
                                                                JToken errorCodeValue2 = innerHealthErrorsValue["errorCode"];
                                                                if (errorCodeValue2 != null && errorCodeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance2 = ((string)errorCodeValue2);
                                                                    innerHealthErrorInstance.ErrorCode = errorCodeInstance2;
                                                                }
                                                                
                                                                JToken errorMessageValue2 = innerHealthErrorsValue["errorMessage"];
                                                                if (errorMessageValue2 != null && errorMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance2 = ((string)errorMessageValue2);
                                                                    innerHealthErrorInstance.ErrorMessage = errorMessageInstance2;
                                                                }
                                                                
                                                                JToken summaryMessageValue2 = innerHealthErrorsValue["summaryMessage"];
                                                                if (summaryMessageValue2 != null && summaryMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance2 = ((string)summaryMessageValue2);
                                                                    innerHealthErrorInstance.SummaryMessage = summaryMessageInstance2;
                                                                }
                                                                
                                                                JToken possibleCausesValue2 = innerHealthErrorsValue["possibleCauses"];
                                                                if (possibleCausesValue2 != null && possibleCausesValue2.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance2 = ((string)possibleCausesValue2);
                                                                    innerHealthErrorInstance.PossibleCauses = possibleCausesInstance2;
                                                                }
                                                                
                                                                JToken recommendedActionValue2 = innerHealthErrorsValue["recommendedAction"];
                                                                if (recommendedActionValue2 != null && recommendedActionValue2.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance2 = ((string)recommendedActionValue2);
                                                                    innerHealthErrorInstance.RecommendedAction = recommendedActionInstance2;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue2 = innerHealthErrorsValue["creationTimeUtc"];
                                                                if (creationTimeUtcValue2 != null && creationTimeUtcValue2.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance2 = ((DateTime)creationTimeUtcValue2);
                                                                    innerHealthErrorInstance.CreationTimeUtc = creationTimeUtcInstance2;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue2 = innerHealthErrorsValue["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue2 != null && recoveryProviderErrorMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance2 = ((string)recoveryProviderErrorMessageValue2);
                                                                    innerHealthErrorInstance.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance2;
                                                                }
                                                                
                                                                JToken entityIdValue2 = innerHealthErrorsValue["entityId"];
                                                                if (entityIdValue2 != null && entityIdValue2.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance2 = ((string)entityIdValue2);
                                                                    innerHealthErrorInstance.EntityId = entityIdInstance2;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken agentExpiryDateValue = processServersValue["agentExpiryDate"];
                                                if (agentExpiryDateValue != null && agentExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime agentExpiryDateInstance = ((DateTime)agentExpiryDateValue);
                                                    processServerInstance.AgentExpiryDate = agentExpiryDateInstance;
                                                }
                                                
                                                JToken agentVersionDetailsValue = processServersValue["agentVersionDetails"];
                                                if (agentVersionDetailsValue != null && agentVersionDetailsValue.Type != JTokenType.Null)
                                                {
                                                    VersionDetails agentVersionDetailsInstance = new VersionDetails();
                                                    processServerInstance.AgentVersionDetails = agentVersionDetailsInstance;
                                                    
                                                    JToken versionValue2 = agentVersionDetailsValue["version"];
                                                    if (versionValue2 != null && versionValue2.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance2 = ((string)versionValue2);
                                                        agentVersionDetailsInstance.Version = versionInstance2;
                                                    }
                                                    
                                                    JToken expiryDateValue = agentVersionDetailsValue["expiryDate"];
                                                    if (expiryDateValue != null && expiryDateValue.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance = ((DateTime)expiryDateValue);
                                                        agentVersionDetailsInstance.ExpiryDate = expiryDateInstance;
                                                    }
                                                    
                                                    JToken statusValue = agentVersionDetailsValue["status"];
                                                    if (statusValue != null && statusValue.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance = ((string)statusValue);
                                                        agentVersionDetailsInstance.Status = statusInstance;
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken masterTargetServersArray = customDetailsValue["masterTargetServers"];
                                        if (masterTargetServersArray != null && masterTargetServersArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken masterTargetServersValue in ((JArray)masterTargetServersArray))
                                            {
                                                MasterTargetServer masterTargetServerInstance = new MasterTargetServer();
                                                vMwareFabricDetailsInstance.MasterTargetServers.Add(masterTargetServerInstance);
                                                
                                                JToken idValue2 = masterTargetServersValue["id"];
                                                if (idValue2 != null && idValue2.Type != JTokenType.Null)
                                                {
                                                    string idInstance2 = ((string)idValue2);
                                                    masterTargetServerInstance.Id = idInstance2;
                                                }
                                                
                                                JToken ipAddressValue2 = masterTargetServersValue["ipAddress"];
                                                if (ipAddressValue2 != null && ipAddressValue2.Type != JTokenType.Null)
                                                {
                                                    string ipAddressInstance2 = ((string)ipAddressValue2);
                                                    masterTargetServerInstance.IpAddress = ipAddressInstance2;
                                                }
                                                
                                                JToken nameValue = masterTargetServersValue["name"];
                                                if (nameValue != null && nameValue.Type != JTokenType.Null)
                                                {
                                                    string nameInstance = ((string)nameValue);
                                                    masterTargetServerInstance.Name = nameInstance;
                                                }
                                                
                                                JToken osTypeValue3 = masterTargetServersValue["osType"];
                                                if (osTypeValue3 != null && osTypeValue3.Type != JTokenType.Null)
                                                {
                                                    string osTypeInstance3 = ((string)osTypeValue3);
                                                    masterTargetServerInstance.OsType = osTypeInstance3;
                                                }
                                                
                                                JToken agentVersionValue2 = masterTargetServersValue["agentVersion"];
                                                if (agentVersionValue2 != null && agentVersionValue2.Type != JTokenType.Null)
                                                {
                                                    string agentVersionInstance2 = ((string)agentVersionValue2);
                                                    masterTargetServerInstance.AgentVersion = agentVersionInstance2;
                                                }
                                                
                                                JToken lastHeartbeatValue2 = masterTargetServersValue["lastHeartbeat"];
                                                if (lastHeartbeatValue2 != null && lastHeartbeatValue2.Type != JTokenType.Null)
                                                {
                                                    DateTime lastHeartbeatInstance2 = ((DateTime)lastHeartbeatValue2);
                                                    masterTargetServerInstance.LastHeartbeat = lastHeartbeatInstance2;
                                                }
                                                
                                                JToken versionStatusValue2 = masterTargetServersValue["versionStatus"];
                                                if (versionStatusValue2 != null && versionStatusValue2.Type != JTokenType.Null)
                                                {
                                                    string versionStatusInstance2 = ((string)versionStatusValue2);
                                                    masterTargetServerInstance.VersionStatus = versionStatusInstance2;
                                                }
                                                
                                                JToken retentionVolumesArray = masterTargetServersValue["retentionVolumes"];
                                                if (retentionVolumesArray != null && retentionVolumesArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken retentionVolumesValue in ((JArray)retentionVolumesArray))
                                                    {
                                                        RetentionVolume retentionVolumeInstance = new RetentionVolume();
                                                        masterTargetServerInstance.RetentionVolumes.Add(retentionVolumeInstance);
                                                        
                                                        JToken volumeNameValue = retentionVolumesValue["volumeName"];
                                                        if (volumeNameValue != null && volumeNameValue.Type != JTokenType.Null)
                                                        {
                                                            string volumeNameInstance = ((string)volumeNameValue);
                                                            retentionVolumeInstance.VolumeName = volumeNameInstance;
                                                        }
                                                        
                                                        JToken capacityInBytesValue = retentionVolumesValue["capacityInBytes"];
                                                        if (capacityInBytesValue != null && capacityInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long capacityInBytesInstance = ((long)capacityInBytesValue);
                                                            retentionVolumeInstance.CapacityInBytes = capacityInBytesInstance;
                                                        }
                                                        
                                                        JToken freeSpaceInBytesValue = retentionVolumesValue["freeSpaceInBytes"];
                                                        if (freeSpaceInBytesValue != null && freeSpaceInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long freeSpaceInBytesInstance = ((long)freeSpaceInBytesValue);
                                                            retentionVolumeInstance.FreeSpaceInBytes = freeSpaceInBytesInstance;
                                                        }
                                                        
                                                        JToken thresholdPercentageValue = retentionVolumesValue["thresholdPercentage"];
                                                        if (thresholdPercentageValue != null && thresholdPercentageValue.Type != JTokenType.Null)
                                                        {
                                                            int thresholdPercentageInstance = ((int)thresholdPercentageValue);
                                                            retentionVolumeInstance.ThresholdPercentage = thresholdPercentageInstance;
                                                        }
                                                    }
                                                }
                                                
                                                JToken dataStoresArray = masterTargetServersValue["dataStores"];
                                                if (dataStoresArray != null && dataStoresArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken dataStoresValue in ((JArray)dataStoresArray))
                                                    {
                                                        DataStore dataStoreInstance = new DataStore();
                                                        masterTargetServerInstance.DataStores.Add(dataStoreInstance);
                                                        
                                                        JToken symbolicNameValue = dataStoresValue["symbolicName"];
                                                        if (symbolicNameValue != null && symbolicNameValue.Type != JTokenType.Null)
                                                        {
                                                            string symbolicNameInstance = ((string)symbolicNameValue);
                                                            dataStoreInstance.SymbolicName = symbolicNameInstance;
                                                        }
                                                        
                                                        JToken uuidValue = dataStoresValue["uuid"];
                                                        if (uuidValue != null && uuidValue.Type != JTokenType.Null)
                                                        {
                                                            string uuidInstance = ((string)uuidValue);
                                                            dataStoreInstance.Uuid = uuidInstance;
                                                        }
                                                        
                                                        JToken capacityValue = dataStoresValue["capacity"];
                                                        if (capacityValue != null && capacityValue.Type != JTokenType.Null)
                                                        {
                                                            string capacityInstance = ((string)capacityValue);
                                                            dataStoreInstance.Capacity = capacityInstance;
                                                        }
                                                        
                                                        JToken freeSpaceValue = dataStoresValue["freeSpace"];
                                                        if (freeSpaceValue != null && freeSpaceValue.Type != JTokenType.Null)
                                                        {
                                                            string freeSpaceInstance = ((string)freeSpaceValue);
                                                            dataStoreInstance.FreeSpace = freeSpaceInstance;
                                                        }
                                                        
                                                        JToken typeValue = dataStoresValue["type"];
                                                        if (typeValue != null && typeValue.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance = ((string)typeValue);
                                                            dataStoreInstance.Type = typeInstance;
                                                        }
                                                    }
                                                }
                                                
                                                JToken validationErrorsArray = masterTargetServersValue["validationErrors"];
                                                if (validationErrorsArray != null && validationErrorsArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken validationErrorsValue in ((JArray)validationErrorsArray))
                                                    {
                                                        HealthError healthErrorInstance2 = new HealthError();
                                                        masterTargetServerInstance.ValidationErrors.Add(healthErrorInstance2);
                                                        
                                                        JToken errorSourceValue3 = validationErrorsValue["errorSource"];
                                                        if (errorSourceValue3 != null && errorSourceValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance3 = ((string)errorSourceValue3);
                                                            healthErrorInstance2.ErrorSource = errorSourceInstance3;
                                                        }
                                                        
                                                        JToken errorTypeValue3 = validationErrorsValue["errorType"];
                                                        if (errorTypeValue3 != null && errorTypeValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance3 = ((string)errorTypeValue3);
                                                            healthErrorInstance2.ErrorType = errorTypeInstance3;
                                                        }
                                                        
                                                        JToken errorLevelValue3 = validationErrorsValue["errorLevel"];
                                                        if (errorLevelValue3 != null && errorLevelValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance3 = ((string)errorLevelValue3);
                                                            healthErrorInstance2.ErrorLevel = errorLevelInstance3;
                                                        }
                                                        
                                                        JToken errorCategoryValue3 = validationErrorsValue["errorCategory"];
                                                        if (errorCategoryValue3 != null && errorCategoryValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance3 = ((string)errorCategoryValue3);
                                                            healthErrorInstance2.ErrorCategory = errorCategoryInstance3;
                                                        }
                                                        
                                                        JToken errorCodeValue3 = validationErrorsValue["errorCode"];
                                                        if (errorCodeValue3 != null && errorCodeValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance3 = ((string)errorCodeValue3);
                                                            healthErrorInstance2.ErrorCode = errorCodeInstance3;
                                                        }
                                                        
                                                        JToken errorMessageValue3 = validationErrorsValue["errorMessage"];
                                                        if (errorMessageValue3 != null && errorMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance3 = ((string)errorMessageValue3);
                                                            healthErrorInstance2.ErrorMessage = errorMessageInstance3;
                                                        }
                                                        
                                                        JToken summaryMessageValue3 = validationErrorsValue["summaryMessage"];
                                                        if (summaryMessageValue3 != null && summaryMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance3 = ((string)summaryMessageValue3);
                                                            healthErrorInstance2.SummaryMessage = summaryMessageInstance3;
                                                        }
                                                        
                                                        JToken possibleCausesValue3 = validationErrorsValue["possibleCauses"];
                                                        if (possibleCausesValue3 != null && possibleCausesValue3.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance3 = ((string)possibleCausesValue3);
                                                            healthErrorInstance2.PossibleCauses = possibleCausesInstance3;
                                                        }
                                                        
                                                        JToken recommendedActionValue3 = validationErrorsValue["recommendedAction"];
                                                        if (recommendedActionValue3 != null && recommendedActionValue3.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance3 = ((string)recommendedActionValue3);
                                                            healthErrorInstance2.RecommendedAction = recommendedActionInstance3;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue3 = validationErrorsValue["creationTimeUtc"];
                                                        if (creationTimeUtcValue3 != null && creationTimeUtcValue3.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance3 = ((DateTime)creationTimeUtcValue3);
                                                            healthErrorInstance2.CreationTimeUtc = creationTimeUtcInstance3;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue3 = validationErrorsValue["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue3 != null && recoveryProviderErrorMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance3 = ((string)recoveryProviderErrorMessageValue3);
                                                            healthErrorInstance2.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance3;
                                                        }
                                                        
                                                        JToken entityIdValue3 = validationErrorsValue["entityId"];
                                                        if (entityIdValue3 != null && entityIdValue3.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance3 = ((string)entityIdValue3);
                                                            healthErrorInstance2.EntityId = entityIdInstance3;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray2 = validationErrorsValue["innerHealthErrors"];
                                                        if (innerHealthErrorsArray2 != null && innerHealthErrorsArray2.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue2 in ((JArray)innerHealthErrorsArray2))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance2 = new InnerHealthError();
                                                                healthErrorInstance2.InnerHealthErrors.Add(innerHealthErrorInstance2);
                                                                
                                                                JToken errorSourceValue4 = innerHealthErrorsValue2["errorSource"];
                                                                if (errorSourceValue4 != null && errorSourceValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance4 = ((string)errorSourceValue4);
                                                                    innerHealthErrorInstance2.ErrorSource = errorSourceInstance4;
                                                                }
                                                                
                                                                JToken errorTypeValue4 = innerHealthErrorsValue2["errorType"];
                                                                if (errorTypeValue4 != null && errorTypeValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance4 = ((string)errorTypeValue4);
                                                                    innerHealthErrorInstance2.ErrorType = errorTypeInstance4;
                                                                }
                                                                
                                                                JToken errorLevelValue4 = innerHealthErrorsValue2["errorLevel"];
                                                                if (errorLevelValue4 != null && errorLevelValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance4 = ((string)errorLevelValue4);
                                                                    innerHealthErrorInstance2.ErrorLevel = errorLevelInstance4;
                                                                }
                                                                
                                                                JToken errorCategoryValue4 = innerHealthErrorsValue2["errorCategory"];
                                                                if (errorCategoryValue4 != null && errorCategoryValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance4 = ((string)errorCategoryValue4);
                                                                    innerHealthErrorInstance2.ErrorCategory = errorCategoryInstance4;
                                                                }
                                                                
                                                                JToken errorCodeValue4 = innerHealthErrorsValue2["errorCode"];
                                                                if (errorCodeValue4 != null && errorCodeValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance4 = ((string)errorCodeValue4);
                                                                    innerHealthErrorInstance2.ErrorCode = errorCodeInstance4;
                                                                }
                                                                
                                                                JToken errorMessageValue4 = innerHealthErrorsValue2["errorMessage"];
                                                                if (errorMessageValue4 != null && errorMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance4 = ((string)errorMessageValue4);
                                                                    innerHealthErrorInstance2.ErrorMessage = errorMessageInstance4;
                                                                }
                                                                
                                                                JToken summaryMessageValue4 = innerHealthErrorsValue2["summaryMessage"];
                                                                if (summaryMessageValue4 != null && summaryMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance4 = ((string)summaryMessageValue4);
                                                                    innerHealthErrorInstance2.SummaryMessage = summaryMessageInstance4;
                                                                }
                                                                
                                                                JToken possibleCausesValue4 = innerHealthErrorsValue2["possibleCauses"];
                                                                if (possibleCausesValue4 != null && possibleCausesValue4.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance4 = ((string)possibleCausesValue4);
                                                                    innerHealthErrorInstance2.PossibleCauses = possibleCausesInstance4;
                                                                }
                                                                
                                                                JToken recommendedActionValue4 = innerHealthErrorsValue2["recommendedAction"];
                                                                if (recommendedActionValue4 != null && recommendedActionValue4.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance4 = ((string)recommendedActionValue4);
                                                                    innerHealthErrorInstance2.RecommendedAction = recommendedActionInstance4;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue4 = innerHealthErrorsValue2["creationTimeUtc"];
                                                                if (creationTimeUtcValue4 != null && creationTimeUtcValue4.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance4 = ((DateTime)creationTimeUtcValue4);
                                                                    innerHealthErrorInstance2.CreationTimeUtc = creationTimeUtcInstance4;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue4 = innerHealthErrorsValue2["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue4 != null && recoveryProviderErrorMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance4 = ((string)recoveryProviderErrorMessageValue4);
                                                                    innerHealthErrorInstance2.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance4;
                                                                }
                                                                
                                                                JToken entityIdValue4 = innerHealthErrorsValue2["entityId"];
                                                                if (entityIdValue4 != null && entityIdValue4.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance4 = ((string)entityIdValue4);
                                                                    innerHealthErrorInstance2.EntityId = entityIdInstance4;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken healthErrorsArray2 = masterTargetServersValue["healthErrors"];
                                                if (healthErrorsArray2 != null && healthErrorsArray2.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken healthErrorsValue2 in ((JArray)healthErrorsArray2))
                                                    {
                                                        HealthError healthErrorInstance3 = new HealthError();
                                                        masterTargetServerInstance.HealthErrors.Add(healthErrorInstance3);
                                                        
                                                        JToken errorSourceValue5 = healthErrorsValue2["errorSource"];
                                                        if (errorSourceValue5 != null && errorSourceValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance5 = ((string)errorSourceValue5);
                                                            healthErrorInstance3.ErrorSource = errorSourceInstance5;
                                                        }
                                                        
                                                        JToken errorTypeValue5 = healthErrorsValue2["errorType"];
                                                        if (errorTypeValue5 != null && errorTypeValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance5 = ((string)errorTypeValue5);
                                                            healthErrorInstance3.ErrorType = errorTypeInstance5;
                                                        }
                                                        
                                                        JToken errorLevelValue5 = healthErrorsValue2["errorLevel"];
                                                        if (errorLevelValue5 != null && errorLevelValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance5 = ((string)errorLevelValue5);
                                                            healthErrorInstance3.ErrorLevel = errorLevelInstance5;
                                                        }
                                                        
                                                        JToken errorCategoryValue5 = healthErrorsValue2["errorCategory"];
                                                        if (errorCategoryValue5 != null && errorCategoryValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance5 = ((string)errorCategoryValue5);
                                                            healthErrorInstance3.ErrorCategory = errorCategoryInstance5;
                                                        }
                                                        
                                                        JToken errorCodeValue5 = healthErrorsValue2["errorCode"];
                                                        if (errorCodeValue5 != null && errorCodeValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance5 = ((string)errorCodeValue5);
                                                            healthErrorInstance3.ErrorCode = errorCodeInstance5;
                                                        }
                                                        
                                                        JToken errorMessageValue5 = healthErrorsValue2["errorMessage"];
                                                        if (errorMessageValue5 != null && errorMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance5 = ((string)errorMessageValue5);
                                                            healthErrorInstance3.ErrorMessage = errorMessageInstance5;
                                                        }
                                                        
                                                        JToken summaryMessageValue5 = healthErrorsValue2["summaryMessage"];
                                                        if (summaryMessageValue5 != null && summaryMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance5 = ((string)summaryMessageValue5);
                                                            healthErrorInstance3.SummaryMessage = summaryMessageInstance5;
                                                        }
                                                        
                                                        JToken possibleCausesValue5 = healthErrorsValue2["possibleCauses"];
                                                        if (possibleCausesValue5 != null && possibleCausesValue5.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance5 = ((string)possibleCausesValue5);
                                                            healthErrorInstance3.PossibleCauses = possibleCausesInstance5;
                                                        }
                                                        
                                                        JToken recommendedActionValue5 = healthErrorsValue2["recommendedAction"];
                                                        if (recommendedActionValue5 != null && recommendedActionValue5.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance5 = ((string)recommendedActionValue5);
                                                            healthErrorInstance3.RecommendedAction = recommendedActionInstance5;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue5 = healthErrorsValue2["creationTimeUtc"];
                                                        if (creationTimeUtcValue5 != null && creationTimeUtcValue5.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance5 = ((DateTime)creationTimeUtcValue5);
                                                            healthErrorInstance3.CreationTimeUtc = creationTimeUtcInstance5;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue5 = healthErrorsValue2["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue5 != null && recoveryProviderErrorMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance5 = ((string)recoveryProviderErrorMessageValue5);
                                                            healthErrorInstance3.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance5;
                                                        }
                                                        
                                                        JToken entityIdValue5 = healthErrorsValue2["entityId"];
                                                        if (entityIdValue5 != null && entityIdValue5.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance5 = ((string)entityIdValue5);
                                                            healthErrorInstance3.EntityId = entityIdInstance5;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray3 = healthErrorsValue2["innerHealthErrors"];
                                                        if (innerHealthErrorsArray3 != null && innerHealthErrorsArray3.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue3 in ((JArray)innerHealthErrorsArray3))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance3 = new InnerHealthError();
                                                                healthErrorInstance3.InnerHealthErrors.Add(innerHealthErrorInstance3);
                                                                
                                                                JToken errorSourceValue6 = innerHealthErrorsValue3["errorSource"];
                                                                if (errorSourceValue6 != null && errorSourceValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance6 = ((string)errorSourceValue6);
                                                                    innerHealthErrorInstance3.ErrorSource = errorSourceInstance6;
                                                                }
                                                                
                                                                JToken errorTypeValue6 = innerHealthErrorsValue3["errorType"];
                                                                if (errorTypeValue6 != null && errorTypeValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance6 = ((string)errorTypeValue6);
                                                                    innerHealthErrorInstance3.ErrorType = errorTypeInstance6;
                                                                }
                                                                
                                                                JToken errorLevelValue6 = innerHealthErrorsValue3["errorLevel"];
                                                                if (errorLevelValue6 != null && errorLevelValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance6 = ((string)errorLevelValue6);
                                                                    innerHealthErrorInstance3.ErrorLevel = errorLevelInstance6;
                                                                }
                                                                
                                                                JToken errorCategoryValue6 = innerHealthErrorsValue3["errorCategory"];
                                                                if (errorCategoryValue6 != null && errorCategoryValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance6 = ((string)errorCategoryValue6);
                                                                    innerHealthErrorInstance3.ErrorCategory = errorCategoryInstance6;
                                                                }
                                                                
                                                                JToken errorCodeValue6 = innerHealthErrorsValue3["errorCode"];
                                                                if (errorCodeValue6 != null && errorCodeValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance6 = ((string)errorCodeValue6);
                                                                    innerHealthErrorInstance3.ErrorCode = errorCodeInstance6;
                                                                }
                                                                
                                                                JToken errorMessageValue6 = innerHealthErrorsValue3["errorMessage"];
                                                                if (errorMessageValue6 != null && errorMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance6 = ((string)errorMessageValue6);
                                                                    innerHealthErrorInstance3.ErrorMessage = errorMessageInstance6;
                                                                }
                                                                
                                                                JToken summaryMessageValue6 = innerHealthErrorsValue3["summaryMessage"];
                                                                if (summaryMessageValue6 != null && summaryMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance6 = ((string)summaryMessageValue6);
                                                                    innerHealthErrorInstance3.SummaryMessage = summaryMessageInstance6;
                                                                }
                                                                
                                                                JToken possibleCausesValue6 = innerHealthErrorsValue3["possibleCauses"];
                                                                if (possibleCausesValue6 != null && possibleCausesValue6.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance6 = ((string)possibleCausesValue6);
                                                                    innerHealthErrorInstance3.PossibleCauses = possibleCausesInstance6;
                                                                }
                                                                
                                                                JToken recommendedActionValue6 = innerHealthErrorsValue3["recommendedAction"];
                                                                if (recommendedActionValue6 != null && recommendedActionValue6.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance6 = ((string)recommendedActionValue6);
                                                                    innerHealthErrorInstance3.RecommendedAction = recommendedActionInstance6;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue6 = innerHealthErrorsValue3["creationTimeUtc"];
                                                                if (creationTimeUtcValue6 != null && creationTimeUtcValue6.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance6 = ((DateTime)creationTimeUtcValue6);
                                                                    innerHealthErrorInstance3.CreationTimeUtc = creationTimeUtcInstance6;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue6 = innerHealthErrorsValue3["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue6 != null && recoveryProviderErrorMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance6 = ((string)recoveryProviderErrorMessageValue6);
                                                                    innerHealthErrorInstance3.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance6;
                                                                }
                                                                
                                                                JToken entityIdValue6 = innerHealthErrorsValue3["entityId"];
                                                                if (entityIdValue6 != null && entityIdValue6.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance6 = ((string)entityIdValue6);
                                                                    innerHealthErrorInstance3.EntityId = entityIdInstance6;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken diskCountValue = masterTargetServersValue["diskCount"];
                                                if (diskCountValue != null && diskCountValue.Type != JTokenType.Null)
                                                {
                                                    int diskCountInstance = ((int)diskCountValue);
                                                    masterTargetServerInstance.DiskCount = diskCountInstance;
                                                }
                                                
                                                JToken osVersionValue2 = masterTargetServersValue["osVersion"];
                                                if (osVersionValue2 != null && osVersionValue2.Type != JTokenType.Null)
                                                {
                                                    string osVersionInstance2 = ((string)osVersionValue2);
                                                    masterTargetServerInstance.OsVersion = osVersionInstance2;
                                                }
                                                
                                                JToken agentExpiryDateValue2 = masterTargetServersValue["agentExpiryDate"];
                                                if (agentExpiryDateValue2 != null && agentExpiryDateValue2.Type != JTokenType.Null)
                                                {
                                                    DateTime agentExpiryDateInstance2 = ((DateTime)agentExpiryDateValue2);
                                                    masterTargetServerInstance.AgentExpiryDate = agentExpiryDateInstance2;
                                                }
                                                
                                                JToken marsAgentVersionValue = masterTargetServersValue["marsAgentVersion"];
                                                if (marsAgentVersionValue != null && marsAgentVersionValue.Type != JTokenType.Null)
                                                {
                                                    string marsAgentVersionInstance = ((string)marsAgentVersionValue);
                                                    masterTargetServerInstance.MarsAgentVersion = marsAgentVersionInstance;
                                                }
                                                
                                                JToken marsAgentExpiryDateValue = masterTargetServersValue["marsAgentExpiryDate"];
                                                if (marsAgentExpiryDateValue != null && marsAgentExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime marsAgentExpiryDateInstance = ((DateTime)marsAgentExpiryDateValue);
                                                    masterTargetServerInstance.MarsAgentExpiryDate = marsAgentExpiryDateInstance;
                                                }
                                                
                                                JToken agentVersionDetailsValue2 = masterTargetServersValue["agentVersionDetails"];
                                                if (agentVersionDetailsValue2 != null && agentVersionDetailsValue2.Type != JTokenType.Null)
                                                {
                                                    VersionDetails agentVersionDetailsInstance2 = new VersionDetails();
                                                    masterTargetServerInstance.AgentVersionDetails = agentVersionDetailsInstance2;
                                                    
                                                    JToken versionValue3 = agentVersionDetailsValue2["version"];
                                                    if (versionValue3 != null && versionValue3.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance3 = ((string)versionValue3);
                                                        agentVersionDetailsInstance2.Version = versionInstance3;
                                                    }
                                                    
                                                    JToken expiryDateValue2 = agentVersionDetailsValue2["expiryDate"];
                                                    if (expiryDateValue2 != null && expiryDateValue2.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance2 = ((DateTime)expiryDateValue2);
                                                        agentVersionDetailsInstance2.ExpiryDate = expiryDateInstance2;
                                                    }
                                                    
                                                    JToken statusValue2 = agentVersionDetailsValue2["status"];
                                                    if (statusValue2 != null && statusValue2.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance2 = ((string)statusValue2);
                                                        agentVersionDetailsInstance2.Status = statusInstance2;
                                                    }
                                                }
                                                
                                                JToken marsAgentVersionDetailsValue = masterTargetServersValue["marsAgentVersionDetails"];
                                                if (marsAgentVersionDetailsValue != null && marsAgentVersionDetailsValue.Type != JTokenType.Null)
                                                {
                                                    VersionDetails marsAgentVersionDetailsInstance = new VersionDetails();
                                                    masterTargetServerInstance.MarsAgentVersionDetails = marsAgentVersionDetailsInstance;
                                                    
                                                    JToken versionValue4 = marsAgentVersionDetailsValue["version"];
                                                    if (versionValue4 != null && versionValue4.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance4 = ((string)versionValue4);
                                                        marsAgentVersionDetailsInstance.Version = versionInstance4;
                                                    }
                                                    
                                                    JToken expiryDateValue3 = marsAgentVersionDetailsValue["expiryDate"];
                                                    if (expiryDateValue3 != null && expiryDateValue3.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance3 = ((DateTime)expiryDateValue3);
                                                        marsAgentVersionDetailsInstance.ExpiryDate = expiryDateInstance3;
                                                    }
                                                    
                                                    JToken statusValue3 = marsAgentVersionDetailsValue["status"];
                                                    if (statusValue3 != null && statusValue3.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance3 = ((string)statusValue3);
                                                        marsAgentVersionDetailsInstance.Status = statusInstance3;
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken runAsAccountsArray = customDetailsValue["runAsAccounts"];
                                        if (runAsAccountsArray != null && runAsAccountsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken runAsAccountsValue in ((JArray)runAsAccountsArray))
                                            {
                                                RunAsAccount runAsAccountInstance = new RunAsAccount();
                                                vMwareFabricDetailsInstance.RunAsAccounts.Add(runAsAccountInstance);
                                                
                                                JToken accountIdValue = runAsAccountsValue["accountId"];
                                                if (accountIdValue != null && accountIdValue.Type != JTokenType.Null)
                                                {
                                                    string accountIdInstance = ((string)accountIdValue);
                                                    runAsAccountInstance.AccountId = accountIdInstance;
                                                }
                                                
                                                JToken accountNameValue = runAsAccountsValue["accountName"];
                                                if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                                                {
                                                    string accountNameInstance = ((string)accountNameValue);
                                                    runAsAccountInstance.AccountName = accountNameInstance;
                                                }
                                            }
                                        }
                                        
                                        JToken replicationPairCountValue2 = customDetailsValue["replicationPairCount"];
                                        if (replicationPairCountValue2 != null && replicationPairCountValue2.Type != JTokenType.Null)
                                        {
                                            string replicationPairCountInstance2 = ((string)replicationPairCountValue2);
                                            vMwareFabricDetailsInstance.ReplicationPairCount = replicationPairCountInstance2;
                                        }
                                        
                                        JToken processServerCountValue = customDetailsValue["processServerCount"];
                                        if (processServerCountValue != null && processServerCountValue.Type != JTokenType.Null)
                                        {
                                            string processServerCountInstance = ((string)processServerCountValue);
                                            vMwareFabricDetailsInstance.ProcessServerCount = processServerCountInstance;
                                        }
                                        
                                        JToken agentCountValue = customDetailsValue["agentCount"];
                                        if (agentCountValue != null && agentCountValue.Type != JTokenType.Null)
                                        {
                                            string agentCountInstance = ((string)agentCountValue);
                                            vMwareFabricDetailsInstance.AgentCount = agentCountInstance;
                                        }
                                        
                                        JToken protectedServersValue = customDetailsValue["protectedServers"];
                                        if (protectedServersValue != null && protectedServersValue.Type != JTokenType.Null)
                                        {
                                            string protectedServersInstance = ((string)protectedServersValue);
                                            vMwareFabricDetailsInstance.ProtectedServers = protectedServersInstance;
                                        }
                                        
                                        JToken systemLoadValue2 = customDetailsValue["systemLoad"];
                                        if (systemLoadValue2 != null && systemLoadValue2.Type != JTokenType.Null)
                                        {
                                            string systemLoadInstance2 = ((string)systemLoadValue2);
                                            vMwareFabricDetailsInstance.SystemLoad = systemLoadInstance2;
                                        }
                                        
                                        JToken systemLoadStatusValue2 = customDetailsValue["systemLoadStatus"];
                                        if (systemLoadStatusValue2 != null && systemLoadStatusValue2.Type != JTokenType.Null)
                                        {
                                            string systemLoadStatusInstance2 = ((string)systemLoadStatusValue2);
                                            vMwareFabricDetailsInstance.SystemLoadStatus = systemLoadStatusInstance2;
                                        }
                                        
                                        JToken cpuLoadValue2 = customDetailsValue["cpuLoad"];
                                        if (cpuLoadValue2 != null && cpuLoadValue2.Type != JTokenType.Null)
                                        {
                                            string cpuLoadInstance2 = ((string)cpuLoadValue2);
                                            vMwareFabricDetailsInstance.CpuLoad = cpuLoadInstance2;
                                        }
                                        
                                        JToken cpuLoadStatusValue2 = customDetailsValue["cpuLoadStatus"];
                                        if (cpuLoadStatusValue2 != null && cpuLoadStatusValue2.Type != JTokenType.Null)
                                        {
                                            string cpuLoadStatusInstance2 = ((string)cpuLoadStatusValue2);
                                            vMwareFabricDetailsInstance.CpuLoadStatus = cpuLoadStatusInstance2;
                                        }
                                        
                                        JToken totalMemoryInBytesValue2 = customDetailsValue["totalMemoryInBytes"];
                                        if (totalMemoryInBytesValue2 != null && totalMemoryInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long totalMemoryInBytesInstance2 = ((long)totalMemoryInBytesValue2);
                                            vMwareFabricDetailsInstance.TotalMemoryInBytes = totalMemoryInBytesInstance2;
                                        }
                                        
                                        JToken availableMemoryInBytesValue2 = customDetailsValue["availableMemoryInBytes"];
                                        if (availableMemoryInBytesValue2 != null && availableMemoryInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long availableMemoryInBytesInstance2 = ((long)availableMemoryInBytesValue2);
                                            vMwareFabricDetailsInstance.AvailableMemoryInBytes = availableMemoryInBytesInstance2;
                                        }
                                        
                                        JToken memoryUsageStatusValue2 = customDetailsValue["memoryUsageStatus"];
                                        if (memoryUsageStatusValue2 != null && memoryUsageStatusValue2.Type != JTokenType.Null)
                                        {
                                            string memoryUsageStatusInstance2 = ((string)memoryUsageStatusValue2);
                                            vMwareFabricDetailsInstance.MemoryUsageStatus = memoryUsageStatusInstance2;
                                        }
                                        
                                        JToken totalSpaceInBytesValue2 = customDetailsValue["totalSpaceInBytes"];
                                        if (totalSpaceInBytesValue2 != null && totalSpaceInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long totalSpaceInBytesInstance2 = ((long)totalSpaceInBytesValue2);
                                            vMwareFabricDetailsInstance.TotalSpaceInBytes = totalSpaceInBytesInstance2;
                                        }
                                        
                                        JToken availableSpaceInBytesValue2 = customDetailsValue["availableSpaceInBytes"];
                                        if (availableSpaceInBytesValue2 != null && availableSpaceInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long availableSpaceInBytesInstance2 = ((long)availableSpaceInBytesValue2);
                                            vMwareFabricDetailsInstance.AvailableSpaceInBytes = availableSpaceInBytesInstance2;
                                        }
                                        
                                        JToken spaceUsageStatusValue2 = customDetailsValue["spaceUsageStatus"];
                                        if (spaceUsageStatusValue2 != null && spaceUsageStatusValue2.Type != JTokenType.Null)
                                        {
                                            string spaceUsageStatusInstance2 = ((string)spaceUsageStatusValue2);
                                            vMwareFabricDetailsInstance.SpaceUsageStatus = spaceUsageStatusInstance2;
                                        }
                                        
                                        JToken webLoadValue = customDetailsValue["webLoad"];
                                        if (webLoadValue != null && webLoadValue.Type != JTokenType.Null)
                                        {
                                            string webLoadInstance = ((string)webLoadValue);
                                            vMwareFabricDetailsInstance.WebLoad = webLoadInstance;
                                        }
                                        
                                        JToken webLoadStatusValue = customDetailsValue["webLoadStatus"];
                                        if (webLoadStatusValue != null && webLoadStatusValue.Type != JTokenType.Null)
                                        {
                                            string webLoadStatusInstance = ((string)webLoadStatusValue);
                                            vMwareFabricDetailsInstance.WebLoadStatus = webLoadStatusInstance;
                                        }
                                        
                                        JToken databaseServerLoadValue = customDetailsValue["databaseServerLoad"];
                                        if (databaseServerLoadValue != null && databaseServerLoadValue.Type != JTokenType.Null)
                                        {
                                            string databaseServerLoadInstance = ((string)databaseServerLoadValue);
                                            vMwareFabricDetailsInstance.DatabaseServerLoad = databaseServerLoadInstance;
                                        }
                                        
                                        JToken databaseServerLoadStatusValue = customDetailsValue["databaseServerLoadStatus"];
                                        if (databaseServerLoadStatusValue != null && databaseServerLoadStatusValue.Type != JTokenType.Null)
                                        {
                                            string databaseServerLoadStatusInstance = ((string)databaseServerLoadStatusValue);
                                            vMwareFabricDetailsInstance.DatabaseServerLoadStatus = databaseServerLoadStatusInstance;
                                        }
                                        
                                        JToken csServiceStatusValue = customDetailsValue["csServiceStatus"];
                                        if (csServiceStatusValue != null && csServiceStatusValue.Type != JTokenType.Null)
                                        {
                                            string csServiceStatusInstance = ((string)csServiceStatusValue);
                                            vMwareFabricDetailsInstance.CsServiceStatus = csServiceStatusInstance;
                                        }
                                        
                                        JToken ipAddressValue3 = customDetailsValue["ipAddress"];
                                        if (ipAddressValue3 != null && ipAddressValue3.Type != JTokenType.Null)
                                        {
                                            string ipAddressInstance3 = ((string)ipAddressValue3);
                                            vMwareFabricDetailsInstance.IpAddress = ipAddressInstance3;
                                        }
                                        
                                        JToken agentVersionValue3 = customDetailsValue["agentVersion"];
                                        if (agentVersionValue3 != null && agentVersionValue3.Type != JTokenType.Null)
                                        {
                                            string agentVersionInstance3 = ((string)agentVersionValue3);
                                            vMwareFabricDetailsInstance.AgentVersion = agentVersionInstance3;
                                        }
                                        
                                        JToken hostNameValue = customDetailsValue["hostName"];
                                        if (hostNameValue != null && hostNameValue.Type != JTokenType.Null)
                                        {
                                            string hostNameInstance = ((string)hostNameValue);
                                            vMwareFabricDetailsInstance.HostName = hostNameInstance;
                                        }
                                        
                                        JToken lastHeartbeatValue3 = customDetailsValue["lastHeartbeat"];
                                        if (lastHeartbeatValue3 != null && lastHeartbeatValue3.Type != JTokenType.Null)
                                        {
                                            DateTime lastHeartbeatInstance3 = ((DateTime)lastHeartbeatValue3);
                                            vMwareFabricDetailsInstance.LastHeartbeat = lastHeartbeatInstance3;
                                        }
                                        
                                        JToken versionStatusValue3 = customDetailsValue["versionStatus"];
                                        if (versionStatusValue3 != null && versionStatusValue3.Type != JTokenType.Null)
                                        {
                                            string versionStatusInstance3 = ((string)versionStatusValue3);
                                            vMwareFabricDetailsInstance.VersionStatus = versionStatusInstance3;
                                        }
                                        
                                        JToken sslCertExpiryDateValue2 = customDetailsValue["sslCertExpiryDate"];
                                        if (sslCertExpiryDateValue2 != null && sslCertExpiryDateValue2.Type != JTokenType.Null)
                                        {
                                            DateTime sslCertExpiryDateInstance2 = ((DateTime)sslCertExpiryDateValue2);
                                            vMwareFabricDetailsInstance.SslCertExpiryDate = sslCertExpiryDateInstance2;
                                        }
                                        
                                        JToken sslCertExpiryRemainingDaysValue2 = customDetailsValue["sslCertExpiryRemainingDays"];
                                        if (sslCertExpiryRemainingDaysValue2 != null && sslCertExpiryRemainingDaysValue2.Type != JTokenType.Null)
                                        {
                                            int sslCertExpiryRemainingDaysInstance2 = ((int)sslCertExpiryRemainingDaysValue2);
                                            vMwareFabricDetailsInstance.SslCertExpiryRemainingDays = sslCertExpiryRemainingDaysInstance2;
                                        }
                                        
                                        JToken psTemplateVersionValue = customDetailsValue["psTemplateVersion"];
                                        if (psTemplateVersionValue != null && psTemplateVersionValue.Type != JTokenType.Null)
                                        {
                                            string psTemplateVersionInstance = ((string)psTemplateVersionValue);
                                            vMwareFabricDetailsInstance.PsTemplateVersion = psTemplateVersionInstance;
                                        }
                                        
                                        JToken agentExpiryDateValue3 = customDetailsValue["agentExpiryDate"];
                                        if (agentExpiryDateValue3 != null && agentExpiryDateValue3.Type != JTokenType.Null)
                                        {
                                            DateTime agentExpiryDateInstance3 = ((DateTime)agentExpiryDateValue3);
                                            vMwareFabricDetailsInstance.AgentExpiryDate = agentExpiryDateInstance3;
                                        }
                                        
                                        JToken agentVersionDetailsValue3 = customDetailsValue["agentVersionDetails"];
                                        if (agentVersionDetailsValue3 != null && agentVersionDetailsValue3.Type != JTokenType.Null)
                                        {
                                            VersionDetails agentVersionDetailsInstance3 = new VersionDetails();
                                            vMwareFabricDetailsInstance.AgentVersionDetails = agentVersionDetailsInstance3;
                                            
                                            JToken versionValue5 = agentVersionDetailsValue3["version"];
                                            if (versionValue5 != null && versionValue5.Type != JTokenType.Null)
                                            {
                                                string versionInstance5 = ((string)versionValue5);
                                                agentVersionDetailsInstance3.Version = versionInstance5;
                                            }
                                            
                                            JToken expiryDateValue4 = agentVersionDetailsValue3["expiryDate"];
                                            if (expiryDateValue4 != null && expiryDateValue4.Type != JTokenType.Null)
                                            {
                                                DateTime expiryDateInstance4 = ((DateTime)expiryDateValue4);
                                                agentVersionDetailsInstance3.ExpiryDate = expiryDateInstance4;
                                            }
                                            
                                            JToken statusValue4 = agentVersionDetailsValue3["status"];
                                            if (statusValue4 != null && statusValue4.Type != JTokenType.Null)
                                            {
                                                string statusInstance4 = ((string)statusValue4);
                                                agentVersionDetailsInstance3.Status = statusInstance4;
                                            }
                                        }
                                        
                                        JToken instanceTypeValue4 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue4 != null && instanceTypeValue4.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance4 = ((string)instanceTypeValue4);
                                            vMwareFabricDetailsInstance.InstanceType = instanceTypeInstance4;
                                        }
                                        propertiesInstance.CustomDetails = vMwareFabricDetailsInstance;
                                    }
                                    if (typeName == "VMwareV2")
                                    {
                                        VMwareV2FabricSpecificDetails vMwareV2FabricSpecificDetailsInstance = new VMwareV2FabricSpecificDetails();
                                        
                                        JToken vmwareSiteIdValue = customDetailsValue["vmwareSiteId"];
                                        if (vmwareSiteIdValue != null && vmwareSiteIdValue.Type != JTokenType.Null)
                                        {
                                            string vmwareSiteIdInstance = ((string)vmwareSiteIdValue);
                                            vMwareV2FabricSpecificDetailsInstance.VMwareSiteId = vmwareSiteIdInstance;
                                        }
                                        
                                        JToken migrationSolutionIdValue = customDetailsValue["migrationSolutionId"];
                                        if (migrationSolutionIdValue != null && migrationSolutionIdValue.Type != JTokenType.Null)
                                        {
                                            string migrationSolutionIdInstance = ((string)migrationSolutionIdValue);
                                            vMwareV2FabricSpecificDetailsInstance.MigrationSolutionId = migrationSolutionIdInstance;
                                        }
                                        
                                        JToken serviceEndpointValue = customDetailsValue["serviceEndpoint"];
                                        if (serviceEndpointValue != null && serviceEndpointValue.Type != JTokenType.Null)
                                        {
                                            string serviceEndpointInstance = ((string)serviceEndpointValue);
                                            vMwareV2FabricSpecificDetailsInstance.ServiceEndpoint = serviceEndpointInstance;
                                        }
                                        
                                        JToken instanceTypeValue5 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue5 != null && instanceTypeValue5.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance5 = ((string)instanceTypeValue5);
                                            vMwareV2FabricSpecificDetailsInstance.InstanceType = instanceTypeInstance5;
                                        }
                                        propertiesInstance.CustomDetails = vMwareV2FabricSpecificDetailsInstance;
                                    }
                                }
                                
                                JToken healthErrorDetailsArray = propertiesValue["healthErrorDetails"];
                                if (healthErrorDetailsArray != null && healthErrorDetailsArray.Type != JTokenType.Null)
                                {
                                    foreach (JToken healthErrorDetailsValue in ((JArray)healthErrorDetailsArray))
                                    {
                                        HealthError healthErrorInstance4 = new HealthError();
                                        propertiesInstance.HealthErrorDetails.Add(healthErrorInstance4);
                                        
                                        JToken errorSourceValue7 = healthErrorDetailsValue["errorSource"];
                                        if (errorSourceValue7 != null && errorSourceValue7.Type != JTokenType.Null)
                                        {
                                            string errorSourceInstance7 = ((string)errorSourceValue7);
                                            healthErrorInstance4.ErrorSource = errorSourceInstance7;
                                        }
                                        
                                        JToken errorTypeValue7 = healthErrorDetailsValue["errorType"];
                                        if (errorTypeValue7 != null && errorTypeValue7.Type != JTokenType.Null)
                                        {
                                            string errorTypeInstance7 = ((string)errorTypeValue7);
                                            healthErrorInstance4.ErrorType = errorTypeInstance7;
                                        }
                                        
                                        JToken errorLevelValue7 = healthErrorDetailsValue["errorLevel"];
                                        if (errorLevelValue7 != null && errorLevelValue7.Type != JTokenType.Null)
                                        {
                                            string errorLevelInstance7 = ((string)errorLevelValue7);
                                            healthErrorInstance4.ErrorLevel = errorLevelInstance7;
                                        }
                                        
                                        JToken errorCategoryValue7 = healthErrorDetailsValue["errorCategory"];
                                        if (errorCategoryValue7 != null && errorCategoryValue7.Type != JTokenType.Null)
                                        {
                                            string errorCategoryInstance7 = ((string)errorCategoryValue7);
                                            healthErrorInstance4.ErrorCategory = errorCategoryInstance7;
                                        }
                                        
                                        JToken errorCodeValue7 = healthErrorDetailsValue["errorCode"];
                                        if (errorCodeValue7 != null && errorCodeValue7.Type != JTokenType.Null)
                                        {
                                            string errorCodeInstance7 = ((string)errorCodeValue7);
                                            healthErrorInstance4.ErrorCode = errorCodeInstance7;
                                        }
                                        
                                        JToken errorMessageValue7 = healthErrorDetailsValue["errorMessage"];
                                        if (errorMessageValue7 != null && errorMessageValue7.Type != JTokenType.Null)
                                        {
                                            string errorMessageInstance7 = ((string)errorMessageValue7);
                                            healthErrorInstance4.ErrorMessage = errorMessageInstance7;
                                        }
                                        
                                        JToken summaryMessageValue7 = healthErrorDetailsValue["summaryMessage"];
                                        if (summaryMessageValue7 != null && summaryMessageValue7.Type != JTokenType.Null)
                                        {
                                            string summaryMessageInstance7 = ((string)summaryMessageValue7);
                                            healthErrorInstance4.SummaryMessage = summaryMessageInstance7;
                                        }
                                        
                                        JToken possibleCausesValue7 = healthErrorDetailsValue["possibleCauses"];
                                        if (possibleCausesValue7 != null && possibleCausesValue7.Type != JTokenType.Null)
                                        {
                                            string possibleCausesInstance7 = ((string)possibleCausesValue7);
                                            healthErrorInstance4.PossibleCauses = possibleCausesInstance7;
                                        }
                                        
                                        JToken recommendedActionValue7 = healthErrorDetailsValue["recommendedAction"];
                                        if (recommendedActionValue7 != null && recommendedActionValue7.Type != JTokenType.Null)
                                        {
                                            string recommendedActionInstance7 = ((string)recommendedActionValue7);
                                            healthErrorInstance4.RecommendedAction = recommendedActionInstance7;
                                        }
                                        
                                        JToken creationTimeUtcValue7 = healthErrorDetailsValue["creationTimeUtc"];
                                        if (creationTimeUtcValue7 != null && creationTimeUtcValue7.Type != JTokenType.Null)
                                        {
                                            DateTime creationTimeUtcInstance7 = ((DateTime)creationTimeUtcValue7);
                                            healthErrorInstance4.CreationTimeUtc = creationTimeUtcInstance7;
                                        }
                                        
                                        JToken recoveryProviderErrorMessageValue7 = healthErrorDetailsValue["recoveryProviderErrorMessage"];
                                        if (recoveryProviderErrorMessageValue7 != null && recoveryProviderErrorMessageValue7.Type != JTokenType.Null)
                                        {
                                            string recoveryProviderErrorMessageInstance7 = ((string)recoveryProviderErrorMessageValue7);
                                            healthErrorInstance4.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance7;
                                        }
                                        
                                        JToken entityIdValue7 = healthErrorDetailsValue["entityId"];
                                        if (entityIdValue7 != null && entityIdValue7.Type != JTokenType.Null)
                                        {
                                            string entityIdInstance7 = ((string)entityIdValue7);
                                            healthErrorInstance4.EntityId = entityIdInstance7;
                                        }
                                        
                                        JToken innerHealthErrorsArray4 = healthErrorDetailsValue["innerHealthErrors"];
                                        if (innerHealthErrorsArray4 != null && innerHealthErrorsArray4.Type != JTokenType.Null)
                                        {
                                            foreach (JToken innerHealthErrorsValue4 in ((JArray)innerHealthErrorsArray4))
                                            {
                                                InnerHealthError innerHealthErrorInstance4 = new InnerHealthError();
                                                healthErrorInstance4.InnerHealthErrors.Add(innerHealthErrorInstance4);
                                                
                                                JToken errorSourceValue8 = innerHealthErrorsValue4["errorSource"];
                                                if (errorSourceValue8 != null && errorSourceValue8.Type != JTokenType.Null)
                                                {
                                                    string errorSourceInstance8 = ((string)errorSourceValue8);
                                                    innerHealthErrorInstance4.ErrorSource = errorSourceInstance8;
                                                }
                                                
                                                JToken errorTypeValue8 = innerHealthErrorsValue4["errorType"];
                                                if (errorTypeValue8 != null && errorTypeValue8.Type != JTokenType.Null)
                                                {
                                                    string errorTypeInstance8 = ((string)errorTypeValue8);
                                                    innerHealthErrorInstance4.ErrorType = errorTypeInstance8;
                                                }
                                                
                                                JToken errorLevelValue8 = innerHealthErrorsValue4["errorLevel"];
                                                if (errorLevelValue8 != null && errorLevelValue8.Type != JTokenType.Null)
                                                {
                                                    string errorLevelInstance8 = ((string)errorLevelValue8);
                                                    innerHealthErrorInstance4.ErrorLevel = errorLevelInstance8;
                                                }
                                                
                                                JToken errorCategoryValue8 = innerHealthErrorsValue4["errorCategory"];
                                                if (errorCategoryValue8 != null && errorCategoryValue8.Type != JTokenType.Null)
                                                {
                                                    string errorCategoryInstance8 = ((string)errorCategoryValue8);
                                                    innerHealthErrorInstance4.ErrorCategory = errorCategoryInstance8;
                                                }
                                                
                                                JToken errorCodeValue8 = innerHealthErrorsValue4["errorCode"];
                                                if (errorCodeValue8 != null && errorCodeValue8.Type != JTokenType.Null)
                                                {
                                                    string errorCodeInstance8 = ((string)errorCodeValue8);
                                                    innerHealthErrorInstance4.ErrorCode = errorCodeInstance8;
                                                }
                                                
                                                JToken errorMessageValue8 = innerHealthErrorsValue4["errorMessage"];
                                                if (errorMessageValue8 != null && errorMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string errorMessageInstance8 = ((string)errorMessageValue8);
                                                    innerHealthErrorInstance4.ErrorMessage = errorMessageInstance8;
                                                }
                                                
                                                JToken summaryMessageValue8 = innerHealthErrorsValue4["summaryMessage"];
                                                if (summaryMessageValue8 != null && summaryMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string summaryMessageInstance8 = ((string)summaryMessageValue8);
                                                    innerHealthErrorInstance4.SummaryMessage = summaryMessageInstance8;
                                                }
                                                
                                                JToken possibleCausesValue8 = innerHealthErrorsValue4["possibleCauses"];
                                                if (possibleCausesValue8 != null && possibleCausesValue8.Type != JTokenType.Null)
                                                {
                                                    string possibleCausesInstance8 = ((string)possibleCausesValue8);
                                                    innerHealthErrorInstance4.PossibleCauses = possibleCausesInstance8;
                                                }
                                                
                                                JToken recommendedActionValue8 = innerHealthErrorsValue4["recommendedAction"];
                                                if (recommendedActionValue8 != null && recommendedActionValue8.Type != JTokenType.Null)
                                                {
                                                    string recommendedActionInstance8 = ((string)recommendedActionValue8);
                                                    innerHealthErrorInstance4.RecommendedAction = recommendedActionInstance8;
                                                }
                                                
                                                JToken creationTimeUtcValue8 = innerHealthErrorsValue4["creationTimeUtc"];
                                                if (creationTimeUtcValue8 != null && creationTimeUtcValue8.Type != JTokenType.Null)
                                                {
                                                    DateTime creationTimeUtcInstance8 = ((DateTime)creationTimeUtcValue8);
                                                    innerHealthErrorInstance4.CreationTimeUtc = creationTimeUtcInstance8;
                                                }
                                                
                                                JToken recoveryProviderErrorMessageValue8 = innerHealthErrorsValue4["recoveryProviderErrorMessage"];
                                                if (recoveryProviderErrorMessageValue8 != null && recoveryProviderErrorMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string recoveryProviderErrorMessageInstance8 = ((string)recoveryProviderErrorMessageValue8);
                                                    innerHealthErrorInstance4.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance8;
                                                }
                                                
                                                JToken entityIdValue8 = innerHealthErrorsValue4["entityId"];
                                                if (entityIdValue8 != null && entityIdValue8.Type != JTokenType.Null)
                                                {
                                                    string entityIdInstance8 = ((string)entityIdValue8);
                                                    innerHealthErrorInstance4.EntityId = entityIdInstance8;
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                JToken healthValue = propertiesValue["health"];
                                if (healthValue != null && healthValue.Type != JTokenType.Null)
                                {
                                    string healthInstance = ((string)healthValue);
                                    propertiesInstance.Health = healthInstance;
                                }
                            }
                            
                            JToken idValue3 = responseDoc["id"];
                            if (idValue3 != null && idValue3.Type != JTokenType.Null)
                            {
                                string idInstance3 = ((string)idValue3);
                                fabricInstance.Id = idInstance3;
                            }
                            
                            JToken nameValue2 = responseDoc["name"];
                            if (nameValue2 != null && nameValue2.Type != JTokenType.Null)
                            {
                                string nameInstance2 = ((string)nameValue2);
                                fabricInstance.Name = nameInstance2;
                            }
                            
                            JToken typeValue2 = responseDoc["type"];
                            if (typeValue2 != null && typeValue2.Type != JTokenType.Null)
                            {
                                string typeInstance2 = ((string)typeValue2);
                                fabricInstance.Type = typeInstance2;
                            }
                            
                            JToken locationValue2 = responseDoc["location"];
                            if (locationValue2 != null && locationValue2.Type != JTokenType.Null)
                            {
                                string locationInstance2 = ((string)locationValue2);
                                fabricInstance.Location = locationInstance2;
                            }
                            
                            JToken tagsSequenceElement = ((JToken)responseDoc["tags"]);
                            if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)
                            {
                                foreach (JProperty property in tagsSequenceElement)
                                {
                                    string tagsKey = ((string)property.Name);
                                    string tagsValue = ((string)property.Value);
                                    fabricInstance.Tags.Add(tagsKey, tagsValue);
                                }
                            }
                            
                            JToken clientRequestIdValue = responseDoc["ClientRequestId"];
                            if (clientRequestIdValue != null && clientRequestIdValue.Type != JTokenType.Null)
                            {
                                string clientRequestIdInstance = ((string)clientRequestIdValue);
                                result.ClientRequestId = clientRequestIdInstance;
                            }
                            
                            JToken correlationRequestIdValue = responseDoc["CorrelationRequestId"];
                            if (correlationRequestIdValue != null && correlationRequestIdValue.Type != JTokenType.Null)
                            {
                                string correlationRequestIdInstance = ((string)correlationRequestIdValue);
                                result.CorrelationRequestId = correlationRequestIdInstance;
                            }
                            
                            JToken dateValue = responseDoc["Date"];
                            if (dateValue != null && dateValue.Type != JTokenType.Null)
                            {
                                string dateInstance = ((string)dateValue);
                                result.Date = dateInstance;
                            }
                            
                            JToken contentTypeValue = responseDoc["ContentType"];
                            if (contentTypeValue != null && contentTypeValue.Type != JTokenType.Null)
                            {
                                string contentTypeInstance = ((string)contentTypeValue);
                                result.ContentType = contentTypeInstance;
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// The Get Operation Status operation returns the status of the
        /// specified operation. After calling an asynchronous operation, you
        /// can call Get Operation Status to determine whether the operation
        /// has succeeded, failed, or is still in progress.
        /// </summary>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> GetCheckConsistencyStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
        {
            // Validate
            if (operationStatusLink == null)
            {
                throw new ArgumentNullException("operationStatusLink");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("operationStatusLink", operationStatusLink);
                TracingAdapter.Enter(invocationId, this, "GetCheckConsistencyStatusAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + operationStatusLink;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK || statusCode == HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new LongRunningOperationResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            JToken locationValue = responseDoc["Location"];
                            if (locationValue != null && locationValue.Type != JTokenType.Null)
                            {
                                string locationInstance = ((string)locationValue);
                                result.Location = locationInstance;
                            }
                            
                            JToken retryAfterValue = responseDoc["RetryAfter"];
                            if (retryAfterValue != null && retryAfterValue.Type != JTokenType.Null)
                            {
                                int retryAfterInstance = ((int)retryAfterValue);
                                result.RetryAfter = retryAfterInstance;
                            }
                            
                            JToken asyncOperationValue = responseDoc["AsyncOperation"];
                            if (asyncOperationValue != null && asyncOperationValue.Type != JTokenType.Null)
                            {
                                string asyncOperationInstance = ((string)asyncOperationValue);
                                result.AsyncOperation = asyncOperationInstance;
                            }
                            
                            JToken statusValue = responseDoc["Status"];
                            if (statusValue != null && statusValue.Type != JTokenType.Null)
                            {
                                OperationStatus statusInstance = ((OperationStatus)Enum.Parse(typeof(OperationStatus), ((string)statusValue), true));
                                result.Status = statusInstance;
                            }
                            
                            JToken cultureValue = responseDoc["Culture"];
                            if (cultureValue != null && cultureValue.Type != JTokenType.Null)
                            {
                                string cultureInstance = ((string)cultureValue);
                                result.Culture = cultureInstance;
                            }
                            
                            JToken clientRequestIdValue = responseDoc["ClientRequestId"];
                            if (clientRequestIdValue != null && clientRequestIdValue.Type != JTokenType.Null)
                            {
                                string clientRequestIdInstance = ((string)clientRequestIdValue);
                                result.ClientRequestId = clientRequestIdInstance;
                            }
                            
                            JToken correlationRequestIdValue = responseDoc["CorrelationRequestId"];
                            if (correlationRequestIdValue != null && correlationRequestIdValue.Type != JTokenType.Null)
                            {
                                string correlationRequestIdInstance = ((string)correlationRequestIdValue);
                                result.CorrelationRequestId = correlationRequestIdInstance;
                            }
                            
                            JToken dateValue = responseDoc["Date"];
                            if (dateValue != null && dateValue.Type != JTokenType.Null)
                            {
                                string dateInstance = ((string)dateValue);
                                result.Date = dateInstance;
                            }
                            
                            JToken contentTypeValue = responseDoc["ContentType"];
                            if (contentTypeValue != null && contentTypeValue.Type != JTokenType.Null)
                            {
                                string contentTypeInstance = ((string)contentTypeValue);
                                result.ContentType = contentTypeInstance;
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    if (statusCode == HttpStatusCode.NoContent)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.Accepted)
                    {
                        result.Status = OperationStatus.InProgress;
                    }
                    if (statusCode == HttpStatusCode.OK)
                    {
                        result.Status = OperationStatus.Succeeded;
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// The Get Operation Status operation returns the status of the
        /// specified operation. After calling an asynchronous operation, you
        /// can call Get Operation Status to determine whether the operation
        /// has succeeded, failed, or is still in progress.
        /// </summary>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for fabric long running operations.
        /// </returns>
        public async Task<FabricOperationResponse> GetCreateStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
        {
            // Validate
            if (operationStatusLink == null)
            {
                throw new ArgumentNullException("operationStatusLink");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("operationStatusLink", operationStatusLink);
                TracingAdapter.Enter(invocationId, this, "GetCreateStatusAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + operationStatusLink;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    FabricOperationResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK || statusCode == HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new FabricOperationResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            Fabric fabricInstance = new Fabric();
                            result.Fabric = fabricInstance;
                            
                            JToken propertiesValue = responseDoc["properties"];
                            if (propertiesValue != null && propertiesValue.Type != JTokenType.Null)
                            {
                                FabricProperties propertiesInstance = new FabricProperties();
                                fabricInstance.Properties = propertiesInstance;
                                
                                JToken friendlyNameValue = propertiesValue["friendlyName"];
                                if (friendlyNameValue != null && friendlyNameValue.Type != JTokenType.Null)
                                {
                                    string friendlyNameInstance = ((string)friendlyNameValue);
                                    propertiesInstance.FriendlyName = friendlyNameInstance;
                                }
                                
                                JToken internalIdentifierValue = propertiesValue["internalIdentifier"];
                                if (internalIdentifierValue != null && internalIdentifierValue.Type != JTokenType.Null)
                                {
                                    string internalIdentifierInstance = ((string)internalIdentifierValue);
                                    propertiesInstance.InternalIdentifier = internalIdentifierInstance;
                                }
                                
                                JToken bcdrStateValue = propertiesValue["bcdrState"];
                                if (bcdrStateValue != null && bcdrStateValue.Type != JTokenType.Null)
                                {
                                    string bcdrStateInstance = ((string)bcdrStateValue);
                                    propertiesInstance.BcdrState = bcdrStateInstance;
                                }
                                
                                JToken encryptionDetailsValue = propertiesValue["encryptionDetails"];
                                if (encryptionDetailsValue != null && encryptionDetailsValue.Type != JTokenType.Null)
                                {
                                    EncryptionDetails encryptionDetailsInstance = new EncryptionDetails();
                                    propertiesInstance.EncryptionDetails = encryptionDetailsInstance;
                                    
                                    JToken kekStateValue = encryptionDetailsValue["kekState"];
                                    if (kekStateValue != null && kekStateValue.Type != JTokenType.Null)
                                    {
                                        string kekStateInstance = ((string)kekStateValue);
                                        encryptionDetailsInstance.KekState = kekStateInstance;
                                    }
                                    
                                    JToken kekCertThumbprintValue = encryptionDetailsValue["kekCertThumbprint"];
                                    if (kekCertThumbprintValue != null && kekCertThumbprintValue.Type != JTokenType.Null)
                                    {
                                        string kekCertThumbprintInstance = ((string)kekCertThumbprintValue);
                                        encryptionDetailsInstance.KekCertThumbprint = kekCertThumbprintInstance;
                                    }
                                    
                                    JToken kekCertExpiryDateValue = encryptionDetailsValue["kekCertExpiryDate"];
                                    if (kekCertExpiryDateValue != null && kekCertExpiryDateValue.Type != JTokenType.Null)
                                    {
                                        DateTime kekCertExpiryDateInstance = ((DateTime)kekCertExpiryDateValue);
                                        encryptionDetailsInstance.KekCertExpiryDate = kekCertExpiryDateInstance;
                                    }
                                }
                                
                                JToken rolloverEncryptionDetailsValue = propertiesValue["rolloverEncryptionDetails"];
                                if (rolloverEncryptionDetailsValue != null && rolloverEncryptionDetailsValue.Type != JTokenType.Null)
                                {
                                    EncryptionDetails rolloverEncryptionDetailsInstance = new EncryptionDetails();
                                    propertiesInstance.RolloverEncryptionDetails = rolloverEncryptionDetailsInstance;
                                    
                                    JToken kekStateValue2 = rolloverEncryptionDetailsValue["kekState"];
                                    if (kekStateValue2 != null && kekStateValue2.Type != JTokenType.Null)
                                    {
                                        string kekStateInstance2 = ((string)kekStateValue2);
                                        rolloverEncryptionDetailsInstance.KekState = kekStateInstance2;
                                    }
                                    
                                    JToken kekCertThumbprintValue2 = rolloverEncryptionDetailsValue["kekCertThumbprint"];
                                    if (kekCertThumbprintValue2 != null && kekCertThumbprintValue2.Type != JTokenType.Null)
                                    {
                                        string kekCertThumbprintInstance2 = ((string)kekCertThumbprintValue2);
                                        rolloverEncryptionDetailsInstance.KekCertThumbprint = kekCertThumbprintInstance2;
                                    }
                                    
                                    JToken kekCertExpiryDateValue2 = rolloverEncryptionDetailsValue["kekCertExpiryDate"];
                                    if (kekCertExpiryDateValue2 != null && kekCertExpiryDateValue2.Type != JTokenType.Null)
                                    {
                                        DateTime kekCertExpiryDateInstance2 = ((DateTime)kekCertExpiryDateValue2);
                                        rolloverEncryptionDetailsInstance.KekCertExpiryDate = kekCertExpiryDateInstance2;
                                    }
                                }
                                
                                JToken customDetailsValue = propertiesValue["customDetails"];
                                if (customDetailsValue != null && customDetailsValue.Type != JTokenType.Null)
                                {
                                    string typeName = ((string)customDetailsValue["instanceType"]);
                                    if (typeName == "VMM")
                                    {
                                        VmmDetails vmmDetailsInstance = new VmmDetails();
                                        
                                        JToken instanceTypeValue = customDetailsValue["instanceType"];
                                        if (instanceTypeValue != null && instanceTypeValue.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance = ((string)instanceTypeValue);
                                            vmmDetailsInstance.InstanceType = instanceTypeInstance;
                                        }
                                        propertiesInstance.CustomDetails = vmmDetailsInstance;
                                    }
                                    if (typeName == "HyperVSite")
                                    {
                                        HyperVSiteDetails hyperVSiteDetailsInstance = new HyperVSiteDetails();
                                        
                                        JToken instanceTypeValue2 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue2 != null && instanceTypeValue2.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance2 = ((string)instanceTypeValue2);
                                            hyperVSiteDetailsInstance.InstanceType = instanceTypeInstance2;
                                        }
                                        propertiesInstance.CustomDetails = hyperVSiteDetailsInstance;
                                    }
                                    if (typeName == "Azure")
                                    {
                                        AzureFabricSpecificDetails azureFabricSpecificDetailsInstance = new AzureFabricSpecificDetails();
                                        
                                        JToken locationValue = customDetailsValue["location"];
                                        if (locationValue != null && locationValue.Type != JTokenType.Null)
                                        {
                                            string locationInstance = ((string)locationValue);
                                            azureFabricSpecificDetailsInstance.Location = locationInstance;
                                        }
                                        
                                        JToken containerIdsArray = customDetailsValue["containerIds"];
                                        if (containerIdsArray != null && containerIdsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken containerIdsValue in ((JArray)containerIdsArray))
                                            {
                                                azureFabricSpecificDetailsInstance.ContainerIds.Add(((string)containerIdsValue));
                                            }
                                        }
                                        
                                        JToken instanceTypeValue3 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue3 != null && instanceTypeValue3.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance3 = ((string)instanceTypeValue3);
                                            azureFabricSpecificDetailsInstance.InstanceType = instanceTypeInstance3;
                                        }
                                        propertiesInstance.CustomDetails = azureFabricSpecificDetailsInstance;
                                    }
                                    if (typeName == "VMware")
                                    {
                                        VMwareFabricDetails vMwareFabricDetailsInstance = new VMwareFabricDetails();
                                        
                                        JToken processServersArray = customDetailsValue["processServers"];
                                        if (processServersArray != null && processServersArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken processServersValue in ((JArray)processServersArray))
                                            {
                                                ProcessServer processServerInstance = new ProcessServer();
                                                vMwareFabricDetailsInstance.ProcessServers.Add(processServerInstance);
                                                
                                                JToken friendlyNameValue2 = processServersValue["friendlyName"];
                                                if (friendlyNameValue2 != null && friendlyNameValue2.Type != JTokenType.Null)
                                                {
                                                    string friendlyNameInstance2 = ((string)friendlyNameValue2);
                                                    processServerInstance.FriendlyName = friendlyNameInstance2;
                                                }
                                                
                                                JToken idValue = processServersValue["id"];
                                                if (idValue != null && idValue.Type != JTokenType.Null)
                                                {
                                                    string idInstance = ((string)idValue);
                                                    processServerInstance.Id = idInstance;
                                                }
                                                
                                                JToken ipAddressValue = processServersValue["ipAddress"];
                                                if (ipAddressValue != null && ipAddressValue.Type != JTokenType.Null)
                                                {
                                                    string ipAddressInstance = ((string)ipAddressValue);
                                                    processServerInstance.IpAddress = ipAddressInstance;
                                                }
                                                
                                                JToken osTypeValue = processServersValue["osType"];
                                                if (osTypeValue != null && osTypeValue.Type != JTokenType.Null)
                                                {
                                                    string osTypeInstance = ((string)osTypeValue);
                                                    processServerInstance.OsType = osTypeInstance;
                                                }
                                                
                                                JToken agentVersionValue = processServersValue["agentVersion"];
                                                if (agentVersionValue != null && agentVersionValue.Type != JTokenType.Null)
                                                {
                                                    string agentVersionInstance = ((string)agentVersionValue);
                                                    processServerInstance.AgentVersion = agentVersionInstance;
                                                }
                                                
                                                JToken lastHeartbeatValue = processServersValue["lastHeartbeat"];
                                                if (lastHeartbeatValue != null && lastHeartbeatValue.Type != JTokenType.Null)
                                                {
                                                    DateTime lastHeartbeatInstance = ((DateTime)lastHeartbeatValue);
                                                    processServerInstance.LastHeartbeat = lastHeartbeatInstance;
                                                }
                                                
                                                JToken versionStatusValue = processServersValue["versionStatus"];
                                                if (versionStatusValue != null && versionStatusValue.Type != JTokenType.Null)
                                                {
                                                    string versionStatusInstance = ((string)versionStatusValue);
                                                    processServerInstance.VersionStatus = versionStatusInstance;
                                                }
                                                
                                                JToken mobilityServiceUpdatesArray = processServersValue["mobilityServiceUpdates"];
                                                if (mobilityServiceUpdatesArray != null && mobilityServiceUpdatesArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken mobilityServiceUpdatesValue in ((JArray)mobilityServiceUpdatesArray))
                                                    {
                                                        MobilityServiceUpdate mobilityServiceUpdateInstance = new MobilityServiceUpdate();
                                                        processServerInstance.Updates.Add(mobilityServiceUpdateInstance);
                                                        
                                                        JToken versionValue = mobilityServiceUpdatesValue["version"];
                                                        if (versionValue != null && versionValue.Type != JTokenType.Null)
                                                        {
                                                            string versionInstance = ((string)versionValue);
                                                            mobilityServiceUpdateInstance.Version = versionInstance;
                                                        }
                                                        
                                                        JToken rebootStatusValue = mobilityServiceUpdatesValue["rebootStatus"];
                                                        if (rebootStatusValue != null && rebootStatusValue.Type != JTokenType.Null)
                                                        {
                                                            string rebootStatusInstance = ((string)rebootStatusValue);
                                                            mobilityServiceUpdateInstance.RebootStatus = rebootStatusInstance;
                                                        }
                                                        
                                                        JToken osTypeValue2 = mobilityServiceUpdatesValue["osType"];
                                                        if (osTypeValue2 != null && osTypeValue2.Type != JTokenType.Null)
                                                        {
                                                            string osTypeInstance2 = ((string)osTypeValue2);
                                                            mobilityServiceUpdateInstance.OsType = osTypeInstance2;
                                                        }
                                                    }
                                                }
                                                
                                                JToken hostIdValue = processServersValue["hostId"];
                                                if (hostIdValue != null && hostIdValue.Type != JTokenType.Null)
                                                {
                                                    string hostIdInstance = ((string)hostIdValue);
                                                    processServerInstance.HostId = hostIdInstance;
                                                }
                                                
                                                JToken machineCountValue = processServersValue["machineCount"];
                                                if (machineCountValue != null && machineCountValue.Type != JTokenType.Null)
                                                {
                                                    string machineCountInstance = ((string)machineCountValue);
                                                    processServerInstance.ServerCount = machineCountInstance;
                                                }
                                                
                                                JToken replicationPairCountValue = processServersValue["replicationPairCount"];
                                                if (replicationPairCountValue != null && replicationPairCountValue.Type != JTokenType.Null)
                                                {
                                                    string replicationPairCountInstance = ((string)replicationPairCountValue);
                                                    processServerInstance.ReplicationPairCount = replicationPairCountInstance;
                                                }
                                                
                                                JToken systemLoadValue = processServersValue["systemLoad"];
                                                if (systemLoadValue != null && systemLoadValue.Type != JTokenType.Null)
                                                {
                                                    string systemLoadInstance = ((string)systemLoadValue);
                                                    processServerInstance.SystemLoad = systemLoadInstance;
                                                }
                                                
                                                JToken systemLoadStatusValue = processServersValue["systemLoadStatus"];
                                                if (systemLoadStatusValue != null && systemLoadStatusValue.Type != JTokenType.Null)
                                                {
                                                    string systemLoadStatusInstance = ((string)systemLoadStatusValue);
                                                    processServerInstance.SystemLoadStatus = systemLoadStatusInstance;
                                                }
                                                
                                                JToken cpuLoadValue = processServersValue["cpuLoad"];
                                                if (cpuLoadValue != null && cpuLoadValue.Type != JTokenType.Null)
                                                {
                                                    string cpuLoadInstance = ((string)cpuLoadValue);
                                                    processServerInstance.CpuLoad = cpuLoadInstance;
                                                }
                                                
                                                JToken cpuLoadStatusValue = processServersValue["cpuLoadStatus"];
                                                if (cpuLoadStatusValue != null && cpuLoadStatusValue.Type != JTokenType.Null)
                                                {
                                                    string cpuLoadStatusInstance = ((string)cpuLoadStatusValue);
                                                    processServerInstance.CpuLoadStatus = cpuLoadStatusInstance;
                                                }
                                                
                                                JToken totalMemoryInBytesValue = processServersValue["totalMemoryInBytes"];
                                                if (totalMemoryInBytesValue != null && totalMemoryInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long totalMemoryInBytesInstance = ((long)totalMemoryInBytesValue);
                                                    processServerInstance.TotalMemoryInBytes = totalMemoryInBytesInstance;
                                                }
                                                
                                                JToken availableMemoryInBytesValue = processServersValue["availableMemoryInBytes"];
                                                if (availableMemoryInBytesValue != null && availableMemoryInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long availableMemoryInBytesInstance = ((long)availableMemoryInBytesValue);
                                                    processServerInstance.AvailableMemoryInBytes = availableMemoryInBytesInstance;
                                                }
                                                
                                                JToken memoryUsageStatusValue = processServersValue["memoryUsageStatus"];
                                                if (memoryUsageStatusValue != null && memoryUsageStatusValue.Type != JTokenType.Null)
                                                {
                                                    string memoryUsageStatusInstance = ((string)memoryUsageStatusValue);
                                                    processServerInstance.MemoryUsageStatus = memoryUsageStatusInstance;
                                                }
                                                
                                                JToken totalSpaceInBytesValue = processServersValue["totalSpaceInBytes"];
                                                if (totalSpaceInBytesValue != null && totalSpaceInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long totalSpaceInBytesInstance = ((long)totalSpaceInBytesValue);
                                                    processServerInstance.TotalSpaceInBytes = totalSpaceInBytesInstance;
                                                }
                                                
                                                JToken availableSpaceInBytesValue = processServersValue["availableSpaceInBytes"];
                                                if (availableSpaceInBytesValue != null && availableSpaceInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long availableSpaceInBytesInstance = ((long)availableSpaceInBytesValue);
                                                    processServerInstance.AvailableSpaceInBytes = availableSpaceInBytesInstance;
                                                }
                                                
                                                JToken spaceUsageStatusValue = processServersValue["spaceUsageStatus"];
                                                if (spaceUsageStatusValue != null && spaceUsageStatusValue.Type != JTokenType.Null)
                                                {
                                                    string spaceUsageStatusInstance = ((string)spaceUsageStatusValue);
                                                    processServerInstance.SpaceUsageStatus = spaceUsageStatusInstance;
                                                }
                                                
                                                JToken psServiceStatusValue = processServersValue["psServiceStatus"];
                                                if (psServiceStatusValue != null && psServiceStatusValue.Type != JTokenType.Null)
                                                {
                                                    string psServiceStatusInstance = ((string)psServiceStatusValue);
                                                    processServerInstance.PsServiceStatus = psServiceStatusInstance;
                                                }
                                                
                                                JToken sslCertExpiryDateValue = processServersValue["sslCertExpiryDate"];
                                                if (sslCertExpiryDateValue != null && sslCertExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime sslCertExpiryDateInstance = ((DateTime)sslCertExpiryDateValue);
                                                    processServerInstance.SslCertExpiryDate = sslCertExpiryDateInstance;
                                                }
                                                
                                                JToken sslCertExpiryRemainingDaysValue = processServersValue["sslCertExpiryRemainingDays"];
                                                if (sslCertExpiryRemainingDaysValue != null && sslCertExpiryRemainingDaysValue.Type != JTokenType.Null)
                                                {
                                                    int sslCertExpiryRemainingDaysInstance = ((int)sslCertExpiryRemainingDaysValue);
                                                    processServerInstance.SslCertExpiryRemainingDays = sslCertExpiryRemainingDaysInstance;
                                                }
                                                
                                                JToken osVersionValue = processServersValue["osVersion"];
                                                if (osVersionValue != null && osVersionValue.Type != JTokenType.Null)
                                                {
                                                    string osVersionInstance = ((string)osVersionValue);
                                                    processServerInstance.OsVersion = osVersionInstance;
                                                }
                                                
                                                JToken healthErrorsArray = processServersValue["healthErrors"];
                                                if (healthErrorsArray != null && healthErrorsArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken healthErrorsValue in ((JArray)healthErrorsArray))
                                                    {
                                                        HealthError healthErrorInstance = new HealthError();
                                                        processServerInstance.HealthErrors.Add(healthErrorInstance);
                                                        
                                                        JToken errorSourceValue = healthErrorsValue["errorSource"];
                                                        if (errorSourceValue != null && errorSourceValue.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance = ((string)errorSourceValue);
                                                            healthErrorInstance.ErrorSource = errorSourceInstance;
                                                        }
                                                        
                                                        JToken errorTypeValue = healthErrorsValue["errorType"];
                                                        if (errorTypeValue != null && errorTypeValue.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance = ((string)errorTypeValue);
                                                            healthErrorInstance.ErrorType = errorTypeInstance;
                                                        }
                                                        
                                                        JToken errorLevelValue = healthErrorsValue["errorLevel"];
                                                        if (errorLevelValue != null && errorLevelValue.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance = ((string)errorLevelValue);
                                                            healthErrorInstance.ErrorLevel = errorLevelInstance;
                                                        }
                                                        
                                                        JToken errorCategoryValue = healthErrorsValue["errorCategory"];
                                                        if (errorCategoryValue != null && errorCategoryValue.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance = ((string)errorCategoryValue);
                                                            healthErrorInstance.ErrorCategory = errorCategoryInstance;
                                                        }
                                                        
                                                        JToken errorCodeValue = healthErrorsValue["errorCode"];
                                                        if (errorCodeValue != null && errorCodeValue.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance = ((string)errorCodeValue);
                                                            healthErrorInstance.ErrorCode = errorCodeInstance;
                                                        }
                                                        
                                                        JToken errorMessageValue = healthErrorsValue["errorMessage"];
                                                        if (errorMessageValue != null && errorMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance = ((string)errorMessageValue);
                                                            healthErrorInstance.ErrorMessage = errorMessageInstance;
                                                        }
                                                        
                                                        JToken summaryMessageValue = healthErrorsValue["summaryMessage"];
                                                        if (summaryMessageValue != null && summaryMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance = ((string)summaryMessageValue);
                                                            healthErrorInstance.SummaryMessage = summaryMessageInstance;
                                                        }
                                                        
                                                        JToken possibleCausesValue = healthErrorsValue["possibleCauses"];
                                                        if (possibleCausesValue != null && possibleCausesValue.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance = ((string)possibleCausesValue);
                                                            healthErrorInstance.PossibleCauses = possibleCausesInstance;
                                                        }
                                                        
                                                        JToken recommendedActionValue = healthErrorsValue["recommendedAction"];
                                                        if (recommendedActionValue != null && recommendedActionValue.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance = ((string)recommendedActionValue);
                                                            healthErrorInstance.RecommendedAction = recommendedActionInstance;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue = healthErrorsValue["creationTimeUtc"];
                                                        if (creationTimeUtcValue != null && creationTimeUtcValue.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance = ((DateTime)creationTimeUtcValue);
                                                            healthErrorInstance.CreationTimeUtc = creationTimeUtcInstance;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue = healthErrorsValue["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue != null && recoveryProviderErrorMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance = ((string)recoveryProviderErrorMessageValue);
                                                            healthErrorInstance.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance;
                                                        }
                                                        
                                                        JToken entityIdValue = healthErrorsValue["entityId"];
                                                        if (entityIdValue != null && entityIdValue.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance = ((string)entityIdValue);
                                                            healthErrorInstance.EntityId = entityIdInstance;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray = healthErrorsValue["innerHealthErrors"];
                                                        if (innerHealthErrorsArray != null && innerHealthErrorsArray.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue in ((JArray)innerHealthErrorsArray))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance = new InnerHealthError();
                                                                healthErrorInstance.InnerHealthErrors.Add(innerHealthErrorInstance);
                                                                
                                                                JToken errorSourceValue2 = innerHealthErrorsValue["errorSource"];
                                                                if (errorSourceValue2 != null && errorSourceValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance2 = ((string)errorSourceValue2);
                                                                    innerHealthErrorInstance.ErrorSource = errorSourceInstance2;
                                                                }
                                                                
                                                                JToken errorTypeValue2 = innerHealthErrorsValue["errorType"];
                                                                if (errorTypeValue2 != null && errorTypeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance2 = ((string)errorTypeValue2);
                                                                    innerHealthErrorInstance.ErrorType = errorTypeInstance2;
                                                                }
                                                                
                                                                JToken errorLevelValue2 = innerHealthErrorsValue["errorLevel"];
                                                                if (errorLevelValue2 != null && errorLevelValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance2 = ((string)errorLevelValue2);
                                                                    innerHealthErrorInstance.ErrorLevel = errorLevelInstance2;
                                                                }
                                                                
                                                                JToken errorCategoryValue2 = innerHealthErrorsValue["errorCategory"];
                                                                if (errorCategoryValue2 != null && errorCategoryValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance2 = ((string)errorCategoryValue2);
                                                                    innerHealthErrorInstance.ErrorCategory = errorCategoryInstance2;
                                                                }
                                                                
                                                                JToken errorCodeValue2 = innerHealthErrorsValue["errorCode"];
                                                                if (errorCodeValue2 != null && errorCodeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance2 = ((string)errorCodeValue2);
                                                                    innerHealthErrorInstance.ErrorCode = errorCodeInstance2;
                                                                }
                                                                
                                                                JToken errorMessageValue2 = innerHealthErrorsValue["errorMessage"];
                                                                if (errorMessageValue2 != null && errorMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance2 = ((string)errorMessageValue2);
                                                                    innerHealthErrorInstance.ErrorMessage = errorMessageInstance2;
                                                                }
                                                                
                                                                JToken summaryMessageValue2 = innerHealthErrorsValue["summaryMessage"];
                                                                if (summaryMessageValue2 != null && summaryMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance2 = ((string)summaryMessageValue2);
                                                                    innerHealthErrorInstance.SummaryMessage = summaryMessageInstance2;
                                                                }
                                                                
                                                                JToken possibleCausesValue2 = innerHealthErrorsValue["possibleCauses"];
                                                                if (possibleCausesValue2 != null && possibleCausesValue2.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance2 = ((string)possibleCausesValue2);
                                                                    innerHealthErrorInstance.PossibleCauses = possibleCausesInstance2;
                                                                }
                                                                
                                                                JToken recommendedActionValue2 = innerHealthErrorsValue["recommendedAction"];
                                                                if (recommendedActionValue2 != null && recommendedActionValue2.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance2 = ((string)recommendedActionValue2);
                                                                    innerHealthErrorInstance.RecommendedAction = recommendedActionInstance2;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue2 = innerHealthErrorsValue["creationTimeUtc"];
                                                                if (creationTimeUtcValue2 != null && creationTimeUtcValue2.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance2 = ((DateTime)creationTimeUtcValue2);
                                                                    innerHealthErrorInstance.CreationTimeUtc = creationTimeUtcInstance2;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue2 = innerHealthErrorsValue["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue2 != null && recoveryProviderErrorMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance2 = ((string)recoveryProviderErrorMessageValue2);
                                                                    innerHealthErrorInstance.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance2;
                                                                }
                                                                
                                                                JToken entityIdValue2 = innerHealthErrorsValue["entityId"];
                                                                if (entityIdValue2 != null && entityIdValue2.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance2 = ((string)entityIdValue2);
                                                                    innerHealthErrorInstance.EntityId = entityIdInstance2;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken agentExpiryDateValue = processServersValue["agentExpiryDate"];
                                                if (agentExpiryDateValue != null && agentExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime agentExpiryDateInstance = ((DateTime)agentExpiryDateValue);
                                                    processServerInstance.AgentExpiryDate = agentExpiryDateInstance;
                                                }
                                                
                                                JToken agentVersionDetailsValue = processServersValue["agentVersionDetails"];
                                                if (agentVersionDetailsValue != null && agentVersionDetailsValue.Type != JTokenType.Null)
                                                {
                                                    VersionDetails agentVersionDetailsInstance = new VersionDetails();
                                                    processServerInstance.AgentVersionDetails = agentVersionDetailsInstance;
                                                    
                                                    JToken versionValue2 = agentVersionDetailsValue["version"];
                                                    if (versionValue2 != null && versionValue2.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance2 = ((string)versionValue2);
                                                        agentVersionDetailsInstance.Version = versionInstance2;
                                                    }
                                                    
                                                    JToken expiryDateValue = agentVersionDetailsValue["expiryDate"];
                                                    if (expiryDateValue != null && expiryDateValue.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance = ((DateTime)expiryDateValue);
                                                        agentVersionDetailsInstance.ExpiryDate = expiryDateInstance;
                                                    }
                                                    
                                                    JToken statusValue = agentVersionDetailsValue["status"];
                                                    if (statusValue != null && statusValue.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance = ((string)statusValue);
                                                        agentVersionDetailsInstance.Status = statusInstance;
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken masterTargetServersArray = customDetailsValue["masterTargetServers"];
                                        if (masterTargetServersArray != null && masterTargetServersArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken masterTargetServersValue in ((JArray)masterTargetServersArray))
                                            {
                                                MasterTargetServer masterTargetServerInstance = new MasterTargetServer();
                                                vMwareFabricDetailsInstance.MasterTargetServers.Add(masterTargetServerInstance);
                                                
                                                JToken idValue2 = masterTargetServersValue["id"];
                                                if (idValue2 != null && idValue2.Type != JTokenType.Null)
                                                {
                                                    string idInstance2 = ((string)idValue2);
                                                    masterTargetServerInstance.Id = idInstance2;
                                                }
                                                
                                                JToken ipAddressValue2 = masterTargetServersValue["ipAddress"];
                                                if (ipAddressValue2 != null && ipAddressValue2.Type != JTokenType.Null)
                                                {
                                                    string ipAddressInstance2 = ((string)ipAddressValue2);
                                                    masterTargetServerInstance.IpAddress = ipAddressInstance2;
                                                }
                                                
                                                JToken nameValue = masterTargetServersValue["name"];
                                                if (nameValue != null && nameValue.Type != JTokenType.Null)
                                                {
                                                    string nameInstance = ((string)nameValue);
                                                    masterTargetServerInstance.Name = nameInstance;
                                                }
                                                
                                                JToken osTypeValue3 = masterTargetServersValue["osType"];
                                                if (osTypeValue3 != null && osTypeValue3.Type != JTokenType.Null)
                                                {
                                                    string osTypeInstance3 = ((string)osTypeValue3);
                                                    masterTargetServerInstance.OsType = osTypeInstance3;
                                                }
                                                
                                                JToken agentVersionValue2 = masterTargetServersValue["agentVersion"];
                                                if (agentVersionValue2 != null && agentVersionValue2.Type != JTokenType.Null)
                                                {
                                                    string agentVersionInstance2 = ((string)agentVersionValue2);
                                                    masterTargetServerInstance.AgentVersion = agentVersionInstance2;
                                                }
                                                
                                                JToken lastHeartbeatValue2 = masterTargetServersValue["lastHeartbeat"];
                                                if (lastHeartbeatValue2 != null && lastHeartbeatValue2.Type != JTokenType.Null)
                                                {
                                                    DateTime lastHeartbeatInstance2 = ((DateTime)lastHeartbeatValue2);
                                                    masterTargetServerInstance.LastHeartbeat = lastHeartbeatInstance2;
                                                }
                                                
                                                JToken versionStatusValue2 = masterTargetServersValue["versionStatus"];
                                                if (versionStatusValue2 != null && versionStatusValue2.Type != JTokenType.Null)
                                                {
                                                    string versionStatusInstance2 = ((string)versionStatusValue2);
                                                    masterTargetServerInstance.VersionStatus = versionStatusInstance2;
                                                }
                                                
                                                JToken retentionVolumesArray = masterTargetServersValue["retentionVolumes"];
                                                if (retentionVolumesArray != null && retentionVolumesArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken retentionVolumesValue in ((JArray)retentionVolumesArray))
                                                    {
                                                        RetentionVolume retentionVolumeInstance = new RetentionVolume();
                                                        masterTargetServerInstance.RetentionVolumes.Add(retentionVolumeInstance);
                                                        
                                                        JToken volumeNameValue = retentionVolumesValue["volumeName"];
                                                        if (volumeNameValue != null && volumeNameValue.Type != JTokenType.Null)
                                                        {
                                                            string volumeNameInstance = ((string)volumeNameValue);
                                                            retentionVolumeInstance.VolumeName = volumeNameInstance;
                                                        }
                                                        
                                                        JToken capacityInBytesValue = retentionVolumesValue["capacityInBytes"];
                                                        if (capacityInBytesValue != null && capacityInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long capacityInBytesInstance = ((long)capacityInBytesValue);
                                                            retentionVolumeInstance.CapacityInBytes = capacityInBytesInstance;
                                                        }
                                                        
                                                        JToken freeSpaceInBytesValue = retentionVolumesValue["freeSpaceInBytes"];
                                                        if (freeSpaceInBytesValue != null && freeSpaceInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long freeSpaceInBytesInstance = ((long)freeSpaceInBytesValue);
                                                            retentionVolumeInstance.FreeSpaceInBytes = freeSpaceInBytesInstance;
                                                        }
                                                        
                                                        JToken thresholdPercentageValue = retentionVolumesValue["thresholdPercentage"];
                                                        if (thresholdPercentageValue != null && thresholdPercentageValue.Type != JTokenType.Null)
                                                        {
                                                            int thresholdPercentageInstance = ((int)thresholdPercentageValue);
                                                            retentionVolumeInstance.ThresholdPercentage = thresholdPercentageInstance;
                                                        }
                                                    }
                                                }
                                                
                                                JToken dataStoresArray = masterTargetServersValue["dataStores"];
                                                if (dataStoresArray != null && dataStoresArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken dataStoresValue in ((JArray)dataStoresArray))
                                                    {
                                                        DataStore dataStoreInstance = new DataStore();
                                                        masterTargetServerInstance.DataStores.Add(dataStoreInstance);
                                                        
                                                        JToken symbolicNameValue = dataStoresValue["symbolicName"];
                                                        if (symbolicNameValue != null && symbolicNameValue.Type != JTokenType.Null)
                                                        {
                                                            string symbolicNameInstance = ((string)symbolicNameValue);
                                                            dataStoreInstance.SymbolicName = symbolicNameInstance;
                                                        }
                                                        
                                                        JToken uuidValue = dataStoresValue["uuid"];
                                                        if (uuidValue != null && uuidValue.Type != JTokenType.Null)
                                                        {
                                                            string uuidInstance = ((string)uuidValue);
                                                            dataStoreInstance.Uuid = uuidInstance;
                                                        }
                                                        
                                                        JToken capacityValue = dataStoresValue["capacity"];
                                                        if (capacityValue != null && capacityValue.Type != JTokenType.Null)
                                                        {
                                                            string capacityInstance = ((string)capacityValue);
                                                            dataStoreInstance.Capacity = capacityInstance;
                                                        }
                                                        
                                                        JToken freeSpaceValue = dataStoresValue["freeSpace"];
                                                        if (freeSpaceValue != null && freeSpaceValue.Type != JTokenType.Null)
                                                        {
                                                            string freeSpaceInstance = ((string)freeSpaceValue);
                                                            dataStoreInstance.FreeSpace = freeSpaceInstance;
                                                        }
                                                        
                                                        JToken typeValue = dataStoresValue["type"];
                                                        if (typeValue != null && typeValue.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance = ((string)typeValue);
                                                            dataStoreInstance.Type = typeInstance;
                                                        }
                                                    }
                                                }
                                                
                                                JToken validationErrorsArray = masterTargetServersValue["validationErrors"];
                                                if (validationErrorsArray != null && validationErrorsArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken validationErrorsValue in ((JArray)validationErrorsArray))
                                                    {
                                                        HealthError healthErrorInstance2 = new HealthError();
                                                        masterTargetServerInstance.ValidationErrors.Add(healthErrorInstance2);
                                                        
                                                        JToken errorSourceValue3 = validationErrorsValue["errorSource"];
                                                        if (errorSourceValue3 != null && errorSourceValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance3 = ((string)errorSourceValue3);
                                                            healthErrorInstance2.ErrorSource = errorSourceInstance3;
                                                        }
                                                        
                                                        JToken errorTypeValue3 = validationErrorsValue["errorType"];
                                                        if (errorTypeValue3 != null && errorTypeValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance3 = ((string)errorTypeValue3);
                                                            healthErrorInstance2.ErrorType = errorTypeInstance3;
                                                        }
                                                        
                                                        JToken errorLevelValue3 = validationErrorsValue["errorLevel"];
                                                        if (errorLevelValue3 != null && errorLevelValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance3 = ((string)errorLevelValue3);
                                                            healthErrorInstance2.ErrorLevel = errorLevelInstance3;
                                                        }
                                                        
                                                        JToken errorCategoryValue3 = validationErrorsValue["errorCategory"];
                                                        if (errorCategoryValue3 != null && errorCategoryValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance3 = ((string)errorCategoryValue3);
                                                            healthErrorInstance2.ErrorCategory = errorCategoryInstance3;
                                                        }
                                                        
                                                        JToken errorCodeValue3 = validationErrorsValue["errorCode"];
                                                        if (errorCodeValue3 != null && errorCodeValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance3 = ((string)errorCodeValue3);
                                                            healthErrorInstance2.ErrorCode = errorCodeInstance3;
                                                        }
                                                        
                                                        JToken errorMessageValue3 = validationErrorsValue["errorMessage"];
                                                        if (errorMessageValue3 != null && errorMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance3 = ((string)errorMessageValue3);
                                                            healthErrorInstance2.ErrorMessage = errorMessageInstance3;
                                                        }
                                                        
                                                        JToken summaryMessageValue3 = validationErrorsValue["summaryMessage"];
                                                        if (summaryMessageValue3 != null && summaryMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance3 = ((string)summaryMessageValue3);
                                                            healthErrorInstance2.SummaryMessage = summaryMessageInstance3;
                                                        }
                                                        
                                                        JToken possibleCausesValue3 = validationErrorsValue["possibleCauses"];
                                                        if (possibleCausesValue3 != null && possibleCausesValue3.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance3 = ((string)possibleCausesValue3);
                                                            healthErrorInstance2.PossibleCauses = possibleCausesInstance3;
                                                        }
                                                        
                                                        JToken recommendedActionValue3 = validationErrorsValue["recommendedAction"];
                                                        if (recommendedActionValue3 != null && recommendedActionValue3.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance3 = ((string)recommendedActionValue3);
                                                            healthErrorInstance2.RecommendedAction = recommendedActionInstance3;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue3 = validationErrorsValue["creationTimeUtc"];
                                                        if (creationTimeUtcValue3 != null && creationTimeUtcValue3.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance3 = ((DateTime)creationTimeUtcValue3);
                                                            healthErrorInstance2.CreationTimeUtc = creationTimeUtcInstance3;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue3 = validationErrorsValue["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue3 != null && recoveryProviderErrorMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance3 = ((string)recoveryProviderErrorMessageValue3);
                                                            healthErrorInstance2.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance3;
                                                        }
                                                        
                                                        JToken entityIdValue3 = validationErrorsValue["entityId"];
                                                        if (entityIdValue3 != null && entityIdValue3.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance3 = ((string)entityIdValue3);
                                                            healthErrorInstance2.EntityId = entityIdInstance3;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray2 = validationErrorsValue["innerHealthErrors"];
                                                        if (innerHealthErrorsArray2 != null && innerHealthErrorsArray2.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue2 in ((JArray)innerHealthErrorsArray2))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance2 = new InnerHealthError();
                                                                healthErrorInstance2.InnerHealthErrors.Add(innerHealthErrorInstance2);
                                                                
                                                                JToken errorSourceValue4 = innerHealthErrorsValue2["errorSource"];
                                                                if (errorSourceValue4 != null && errorSourceValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance4 = ((string)errorSourceValue4);
                                                                    innerHealthErrorInstance2.ErrorSource = errorSourceInstance4;
                                                                }
                                                                
                                                                JToken errorTypeValue4 = innerHealthErrorsValue2["errorType"];
                                                                if (errorTypeValue4 != null && errorTypeValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance4 = ((string)errorTypeValue4);
                                                                    innerHealthErrorInstance2.ErrorType = errorTypeInstance4;
                                                                }
                                                                
                                                                JToken errorLevelValue4 = innerHealthErrorsValue2["errorLevel"];
                                                                if (errorLevelValue4 != null && errorLevelValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance4 = ((string)errorLevelValue4);
                                                                    innerHealthErrorInstance2.ErrorLevel = errorLevelInstance4;
                                                                }
                                                                
                                                                JToken errorCategoryValue4 = innerHealthErrorsValue2["errorCategory"];
                                                                if (errorCategoryValue4 != null && errorCategoryValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance4 = ((string)errorCategoryValue4);
                                                                    innerHealthErrorInstance2.ErrorCategory = errorCategoryInstance4;
                                                                }
                                                                
                                                                JToken errorCodeValue4 = innerHealthErrorsValue2["errorCode"];
                                                                if (errorCodeValue4 != null && errorCodeValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance4 = ((string)errorCodeValue4);
                                                                    innerHealthErrorInstance2.ErrorCode = errorCodeInstance4;
                                                                }
                                                                
                                                                JToken errorMessageValue4 = innerHealthErrorsValue2["errorMessage"];
                                                                if (errorMessageValue4 != null && errorMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance4 = ((string)errorMessageValue4);
                                                                    innerHealthErrorInstance2.ErrorMessage = errorMessageInstance4;
                                                                }
                                                                
                                                                JToken summaryMessageValue4 = innerHealthErrorsValue2["summaryMessage"];
                                                                if (summaryMessageValue4 != null && summaryMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance4 = ((string)summaryMessageValue4);
                                                                    innerHealthErrorInstance2.SummaryMessage = summaryMessageInstance4;
                                                                }
                                                                
                                                                JToken possibleCausesValue4 = innerHealthErrorsValue2["possibleCauses"];
                                                                if (possibleCausesValue4 != null && possibleCausesValue4.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance4 = ((string)possibleCausesValue4);
                                                                    innerHealthErrorInstance2.PossibleCauses = possibleCausesInstance4;
                                                                }
                                                                
                                                                JToken recommendedActionValue4 = innerHealthErrorsValue2["recommendedAction"];
                                                                if (recommendedActionValue4 != null && recommendedActionValue4.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance4 = ((string)recommendedActionValue4);
                                                                    innerHealthErrorInstance2.RecommendedAction = recommendedActionInstance4;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue4 = innerHealthErrorsValue2["creationTimeUtc"];
                                                                if (creationTimeUtcValue4 != null && creationTimeUtcValue4.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance4 = ((DateTime)creationTimeUtcValue4);
                                                                    innerHealthErrorInstance2.CreationTimeUtc = creationTimeUtcInstance4;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue4 = innerHealthErrorsValue2["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue4 != null && recoveryProviderErrorMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance4 = ((string)recoveryProviderErrorMessageValue4);
                                                                    innerHealthErrorInstance2.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance4;
                                                                }
                                                                
                                                                JToken entityIdValue4 = innerHealthErrorsValue2["entityId"];
                                                                if (entityIdValue4 != null && entityIdValue4.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance4 = ((string)entityIdValue4);
                                                                    innerHealthErrorInstance2.EntityId = entityIdInstance4;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken healthErrorsArray2 = masterTargetServersValue["healthErrors"];
                                                if (healthErrorsArray2 != null && healthErrorsArray2.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken healthErrorsValue2 in ((JArray)healthErrorsArray2))
                                                    {
                                                        HealthError healthErrorInstance3 = new HealthError();
                                                        masterTargetServerInstance.HealthErrors.Add(healthErrorInstance3);
                                                        
                                                        JToken errorSourceValue5 = healthErrorsValue2["errorSource"];
                                                        if (errorSourceValue5 != null && errorSourceValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance5 = ((string)errorSourceValue5);
                                                            healthErrorInstance3.ErrorSource = errorSourceInstance5;
                                                        }
                                                        
                                                        JToken errorTypeValue5 = healthErrorsValue2["errorType"];
                                                        if (errorTypeValue5 != null && errorTypeValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance5 = ((string)errorTypeValue5);
                                                            healthErrorInstance3.ErrorType = errorTypeInstance5;
                                                        }
                                                        
                                                        JToken errorLevelValue5 = healthErrorsValue2["errorLevel"];
                                                        if (errorLevelValue5 != null && errorLevelValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance5 = ((string)errorLevelValue5);
                                                            healthErrorInstance3.ErrorLevel = errorLevelInstance5;
                                                        }
                                                        
                                                        JToken errorCategoryValue5 = healthErrorsValue2["errorCategory"];
                                                        if (errorCategoryValue5 != null && errorCategoryValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance5 = ((string)errorCategoryValue5);
                                                            healthErrorInstance3.ErrorCategory = errorCategoryInstance5;
                                                        }
                                                        
                                                        JToken errorCodeValue5 = healthErrorsValue2["errorCode"];
                                                        if (errorCodeValue5 != null && errorCodeValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance5 = ((string)errorCodeValue5);
                                                            healthErrorInstance3.ErrorCode = errorCodeInstance5;
                                                        }
                                                        
                                                        JToken errorMessageValue5 = healthErrorsValue2["errorMessage"];
                                                        if (errorMessageValue5 != null && errorMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance5 = ((string)errorMessageValue5);
                                                            healthErrorInstance3.ErrorMessage = errorMessageInstance5;
                                                        }
                                                        
                                                        JToken summaryMessageValue5 = healthErrorsValue2["summaryMessage"];
                                                        if (summaryMessageValue5 != null && summaryMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance5 = ((string)summaryMessageValue5);
                                                            healthErrorInstance3.SummaryMessage = summaryMessageInstance5;
                                                        }
                                                        
                                                        JToken possibleCausesValue5 = healthErrorsValue2["possibleCauses"];
                                                        if (possibleCausesValue5 != null && possibleCausesValue5.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance5 = ((string)possibleCausesValue5);
                                                            healthErrorInstance3.PossibleCauses = possibleCausesInstance5;
                                                        }
                                                        
                                                        JToken recommendedActionValue5 = healthErrorsValue2["recommendedAction"];
                                                        if (recommendedActionValue5 != null && recommendedActionValue5.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance5 = ((string)recommendedActionValue5);
                                                            healthErrorInstance3.RecommendedAction = recommendedActionInstance5;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue5 = healthErrorsValue2["creationTimeUtc"];
                                                        if (creationTimeUtcValue5 != null && creationTimeUtcValue5.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance5 = ((DateTime)creationTimeUtcValue5);
                                                            healthErrorInstance3.CreationTimeUtc = creationTimeUtcInstance5;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue5 = healthErrorsValue2["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue5 != null && recoveryProviderErrorMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance5 = ((string)recoveryProviderErrorMessageValue5);
                                                            healthErrorInstance3.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance5;
                                                        }
                                                        
                                                        JToken entityIdValue5 = healthErrorsValue2["entityId"];
                                                        if (entityIdValue5 != null && entityIdValue5.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance5 = ((string)entityIdValue5);
                                                            healthErrorInstance3.EntityId = entityIdInstance5;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray3 = healthErrorsValue2["innerHealthErrors"];
                                                        if (innerHealthErrorsArray3 != null && innerHealthErrorsArray3.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue3 in ((JArray)innerHealthErrorsArray3))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance3 = new InnerHealthError();
                                                                healthErrorInstance3.InnerHealthErrors.Add(innerHealthErrorInstance3);
                                                                
                                                                JToken errorSourceValue6 = innerHealthErrorsValue3["errorSource"];
                                                                if (errorSourceValue6 != null && errorSourceValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance6 = ((string)errorSourceValue6);
                                                                    innerHealthErrorInstance3.ErrorSource = errorSourceInstance6;
                                                                }
                                                                
                                                                JToken errorTypeValue6 = innerHealthErrorsValue3["errorType"];
                                                                if (errorTypeValue6 != null && errorTypeValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance6 = ((string)errorTypeValue6);
                                                                    innerHealthErrorInstance3.ErrorType = errorTypeInstance6;
                                                                }
                                                                
                                                                JToken errorLevelValue6 = innerHealthErrorsValue3["errorLevel"];
                                                                if (errorLevelValue6 != null && errorLevelValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance6 = ((string)errorLevelValue6);
                                                                    innerHealthErrorInstance3.ErrorLevel = errorLevelInstance6;
                                                                }
                                                                
                                                                JToken errorCategoryValue6 = innerHealthErrorsValue3["errorCategory"];
                                                                if (errorCategoryValue6 != null && errorCategoryValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance6 = ((string)errorCategoryValue6);
                                                                    innerHealthErrorInstance3.ErrorCategory = errorCategoryInstance6;
                                                                }
                                                                
                                                                JToken errorCodeValue6 = innerHealthErrorsValue3["errorCode"];
                                                                if (errorCodeValue6 != null && errorCodeValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance6 = ((string)errorCodeValue6);
                                                                    innerHealthErrorInstance3.ErrorCode = errorCodeInstance6;
                                                                }
                                                                
                                                                JToken errorMessageValue6 = innerHealthErrorsValue3["errorMessage"];
                                                                if (errorMessageValue6 != null && errorMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance6 = ((string)errorMessageValue6);
                                                                    innerHealthErrorInstance3.ErrorMessage = errorMessageInstance6;
                                                                }
                                                                
                                                                JToken summaryMessageValue6 = innerHealthErrorsValue3["summaryMessage"];
                                                                if (summaryMessageValue6 != null && summaryMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance6 = ((string)summaryMessageValue6);
                                                                    innerHealthErrorInstance3.SummaryMessage = summaryMessageInstance6;
                                                                }
                                                                
                                                                JToken possibleCausesValue6 = innerHealthErrorsValue3["possibleCauses"];
                                                                if (possibleCausesValue6 != null && possibleCausesValue6.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance6 = ((string)possibleCausesValue6);
                                                                    innerHealthErrorInstance3.PossibleCauses = possibleCausesInstance6;
                                                                }
                                                                
                                                                JToken recommendedActionValue6 = innerHealthErrorsValue3["recommendedAction"];
                                                                if (recommendedActionValue6 != null && recommendedActionValue6.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance6 = ((string)recommendedActionValue6);
                                                                    innerHealthErrorInstance3.RecommendedAction = recommendedActionInstance6;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue6 = innerHealthErrorsValue3["creationTimeUtc"];
                                                                if (creationTimeUtcValue6 != null && creationTimeUtcValue6.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance6 = ((DateTime)creationTimeUtcValue6);
                                                                    innerHealthErrorInstance3.CreationTimeUtc = creationTimeUtcInstance6;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue6 = innerHealthErrorsValue3["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue6 != null && recoveryProviderErrorMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance6 = ((string)recoveryProviderErrorMessageValue6);
                                                                    innerHealthErrorInstance3.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance6;
                                                                }
                                                                
                                                                JToken entityIdValue6 = innerHealthErrorsValue3["entityId"];
                                                                if (entityIdValue6 != null && entityIdValue6.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance6 = ((string)entityIdValue6);
                                                                    innerHealthErrorInstance3.EntityId = entityIdInstance6;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken diskCountValue = masterTargetServersValue["diskCount"];
                                                if (diskCountValue != null && diskCountValue.Type != JTokenType.Null)
                                                {
                                                    int diskCountInstance = ((int)diskCountValue);
                                                    masterTargetServerInstance.DiskCount = diskCountInstance;
                                                }
                                                
                                                JToken osVersionValue2 = masterTargetServersValue["osVersion"];
                                                if (osVersionValue2 != null && osVersionValue2.Type != JTokenType.Null)
                                                {
                                                    string osVersionInstance2 = ((string)osVersionValue2);
                                                    masterTargetServerInstance.OsVersion = osVersionInstance2;
                                                }
                                                
                                                JToken agentExpiryDateValue2 = masterTargetServersValue["agentExpiryDate"];
                                                if (agentExpiryDateValue2 != null && agentExpiryDateValue2.Type != JTokenType.Null)
                                                {
                                                    DateTime agentExpiryDateInstance2 = ((DateTime)agentExpiryDateValue2);
                                                    masterTargetServerInstance.AgentExpiryDate = agentExpiryDateInstance2;
                                                }
                                                
                                                JToken marsAgentVersionValue = masterTargetServersValue["marsAgentVersion"];
                                                if (marsAgentVersionValue != null && marsAgentVersionValue.Type != JTokenType.Null)
                                                {
                                                    string marsAgentVersionInstance = ((string)marsAgentVersionValue);
                                                    masterTargetServerInstance.MarsAgentVersion = marsAgentVersionInstance;
                                                }
                                                
                                                JToken marsAgentExpiryDateValue = masterTargetServersValue["marsAgentExpiryDate"];
                                                if (marsAgentExpiryDateValue != null && marsAgentExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime marsAgentExpiryDateInstance = ((DateTime)marsAgentExpiryDateValue);
                                                    masterTargetServerInstance.MarsAgentExpiryDate = marsAgentExpiryDateInstance;
                                                }
                                                
                                                JToken agentVersionDetailsValue2 = masterTargetServersValue["agentVersionDetails"];
                                                if (agentVersionDetailsValue2 != null && agentVersionDetailsValue2.Type != JTokenType.Null)
                                                {
                                                    VersionDetails agentVersionDetailsInstance2 = new VersionDetails();
                                                    masterTargetServerInstance.AgentVersionDetails = agentVersionDetailsInstance2;
                                                    
                                                    JToken versionValue3 = agentVersionDetailsValue2["version"];
                                                    if (versionValue3 != null && versionValue3.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance3 = ((string)versionValue3);
                                                        agentVersionDetailsInstance2.Version = versionInstance3;
                                                    }
                                                    
                                                    JToken expiryDateValue2 = agentVersionDetailsValue2["expiryDate"];
                                                    if (expiryDateValue2 != null && expiryDateValue2.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance2 = ((DateTime)expiryDateValue2);
                                                        agentVersionDetailsInstance2.ExpiryDate = expiryDateInstance2;
                                                    }
                                                    
                                                    JToken statusValue2 = agentVersionDetailsValue2["status"];
                                                    if (statusValue2 != null && statusValue2.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance2 = ((string)statusValue2);
                                                        agentVersionDetailsInstance2.Status = statusInstance2;
                                                    }
                                                }
                                                
                                                JToken marsAgentVersionDetailsValue = masterTargetServersValue["marsAgentVersionDetails"];
                                                if (marsAgentVersionDetailsValue != null && marsAgentVersionDetailsValue.Type != JTokenType.Null)
                                                {
                                                    VersionDetails marsAgentVersionDetailsInstance = new VersionDetails();
                                                    masterTargetServerInstance.MarsAgentVersionDetails = marsAgentVersionDetailsInstance;
                                                    
                                                    JToken versionValue4 = marsAgentVersionDetailsValue["version"];
                                                    if (versionValue4 != null && versionValue4.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance4 = ((string)versionValue4);
                                                        marsAgentVersionDetailsInstance.Version = versionInstance4;
                                                    }
                                                    
                                                    JToken expiryDateValue3 = marsAgentVersionDetailsValue["expiryDate"];
                                                    if (expiryDateValue3 != null && expiryDateValue3.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance3 = ((DateTime)expiryDateValue3);
                                                        marsAgentVersionDetailsInstance.ExpiryDate = expiryDateInstance3;
                                                    }
                                                    
                                                    JToken statusValue3 = marsAgentVersionDetailsValue["status"];
                                                    if (statusValue3 != null && statusValue3.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance3 = ((string)statusValue3);
                                                        marsAgentVersionDetailsInstance.Status = statusInstance3;
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken runAsAccountsArray = customDetailsValue["runAsAccounts"];
                                        if (runAsAccountsArray != null && runAsAccountsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken runAsAccountsValue in ((JArray)runAsAccountsArray))
                                            {
                                                RunAsAccount runAsAccountInstance = new RunAsAccount();
                                                vMwareFabricDetailsInstance.RunAsAccounts.Add(runAsAccountInstance);
                                                
                                                JToken accountIdValue = runAsAccountsValue["accountId"];
                                                if (accountIdValue != null && accountIdValue.Type != JTokenType.Null)
                                                {
                                                    string accountIdInstance = ((string)accountIdValue);
                                                    runAsAccountInstance.AccountId = accountIdInstance;
                                                }
                                                
                                                JToken accountNameValue = runAsAccountsValue["accountName"];
                                                if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                                                {
                                                    string accountNameInstance = ((string)accountNameValue);
                                                    runAsAccountInstance.AccountName = accountNameInstance;
                                                }
                                            }
                                        }
                                        
                                        JToken replicationPairCountValue2 = customDetailsValue["replicationPairCount"];
                                        if (replicationPairCountValue2 != null && replicationPairCountValue2.Type != JTokenType.Null)
                                        {
                                            string replicationPairCountInstance2 = ((string)replicationPairCountValue2);
                                            vMwareFabricDetailsInstance.ReplicationPairCount = replicationPairCountInstance2;
                                        }
                                        
                                        JToken processServerCountValue = customDetailsValue["processServerCount"];
                                        if (processServerCountValue != null && processServerCountValue.Type != JTokenType.Null)
                                        {
                                            string processServerCountInstance = ((string)processServerCountValue);
                                            vMwareFabricDetailsInstance.ProcessServerCount = processServerCountInstance;
                                        }
                                        
                                        JToken agentCountValue = customDetailsValue["agentCount"];
                                        if (agentCountValue != null && agentCountValue.Type != JTokenType.Null)
                                        {
                                            string agentCountInstance = ((string)agentCountValue);
                                            vMwareFabricDetailsInstance.AgentCount = agentCountInstance;
                                        }
                                        
                                        JToken protectedServersValue = customDetailsValue["protectedServers"];
                                        if (protectedServersValue != null && protectedServersValue.Type != JTokenType.Null)
                                        {
                                            string protectedServersInstance = ((string)protectedServersValue);
                                            vMwareFabricDetailsInstance.ProtectedServers = protectedServersInstance;
                                        }
                                        
                                        JToken systemLoadValue2 = customDetailsValue["systemLoad"];
                                        if (systemLoadValue2 != null && systemLoadValue2.Type != JTokenType.Null)
                                        {
                                            string systemLoadInstance2 = ((string)systemLoadValue2);
                                            vMwareFabricDetailsInstance.SystemLoad = systemLoadInstance2;
                                        }
                                        
                                        JToken systemLoadStatusValue2 = customDetailsValue["systemLoadStatus"];
                                        if (systemLoadStatusValue2 != null && systemLoadStatusValue2.Type != JTokenType.Null)
                                        {
                                            string systemLoadStatusInstance2 = ((string)systemLoadStatusValue2);
                                            vMwareFabricDetailsInstance.SystemLoadStatus = systemLoadStatusInstance2;
                                        }
                                        
                                        JToken cpuLoadValue2 = customDetailsValue["cpuLoad"];
                                        if (cpuLoadValue2 != null && cpuLoadValue2.Type != JTokenType.Null)
                                        {
                                            string cpuLoadInstance2 = ((string)cpuLoadValue2);
                                            vMwareFabricDetailsInstance.CpuLoad = cpuLoadInstance2;
                                        }
                                        
                                        JToken cpuLoadStatusValue2 = customDetailsValue["cpuLoadStatus"];
                                        if (cpuLoadStatusValue2 != null && cpuLoadStatusValue2.Type != JTokenType.Null)
                                        {
                                            string cpuLoadStatusInstance2 = ((string)cpuLoadStatusValue2);
                                            vMwareFabricDetailsInstance.CpuLoadStatus = cpuLoadStatusInstance2;
                                        }
                                        
                                        JToken totalMemoryInBytesValue2 = customDetailsValue["totalMemoryInBytes"];
                                        if (totalMemoryInBytesValue2 != null && totalMemoryInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long totalMemoryInBytesInstance2 = ((long)totalMemoryInBytesValue2);
                                            vMwareFabricDetailsInstance.TotalMemoryInBytes = totalMemoryInBytesInstance2;
                                        }
                                        
                                        JToken availableMemoryInBytesValue2 = customDetailsValue["availableMemoryInBytes"];
                                        if (availableMemoryInBytesValue2 != null && availableMemoryInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long availableMemoryInBytesInstance2 = ((long)availableMemoryInBytesValue2);
                                            vMwareFabricDetailsInstance.AvailableMemoryInBytes = availableMemoryInBytesInstance2;
                                        }
                                        
                                        JToken memoryUsageStatusValue2 = customDetailsValue["memoryUsageStatus"];
                                        if (memoryUsageStatusValue2 != null && memoryUsageStatusValue2.Type != JTokenType.Null)
                                        {
                                            string memoryUsageStatusInstance2 = ((string)memoryUsageStatusValue2);
                                            vMwareFabricDetailsInstance.MemoryUsageStatus = memoryUsageStatusInstance2;
                                        }
                                        
                                        JToken totalSpaceInBytesValue2 = customDetailsValue["totalSpaceInBytes"];
                                        if (totalSpaceInBytesValue2 != null && totalSpaceInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long totalSpaceInBytesInstance2 = ((long)totalSpaceInBytesValue2);
                                            vMwareFabricDetailsInstance.TotalSpaceInBytes = totalSpaceInBytesInstance2;
                                        }
                                        
                                        JToken availableSpaceInBytesValue2 = customDetailsValue["availableSpaceInBytes"];
                                        if (availableSpaceInBytesValue2 != null && availableSpaceInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long availableSpaceInBytesInstance2 = ((long)availableSpaceInBytesValue2);
                                            vMwareFabricDetailsInstance.AvailableSpaceInBytes = availableSpaceInBytesInstance2;
                                        }
                                        
                                        JToken spaceUsageStatusValue2 = customDetailsValue["spaceUsageStatus"];
                                        if (spaceUsageStatusValue2 != null && spaceUsageStatusValue2.Type != JTokenType.Null)
                                        {
                                            string spaceUsageStatusInstance2 = ((string)spaceUsageStatusValue2);
                                            vMwareFabricDetailsInstance.SpaceUsageStatus = spaceUsageStatusInstance2;
                                        }
                                        
                                        JToken webLoadValue = customDetailsValue["webLoad"];
                                        if (webLoadValue != null && webLoadValue.Type != JTokenType.Null)
                                        {
                                            string webLoadInstance = ((string)webLoadValue);
                                            vMwareFabricDetailsInstance.WebLoad = webLoadInstance;
                                        }
                                        
                                        JToken webLoadStatusValue = customDetailsValue["webLoadStatus"];
                                        if (webLoadStatusValue != null && webLoadStatusValue.Type != JTokenType.Null)
                                        {
                                            string webLoadStatusInstance = ((string)webLoadStatusValue);
                                            vMwareFabricDetailsInstance.WebLoadStatus = webLoadStatusInstance;
                                        }
                                        
                                        JToken databaseServerLoadValue = customDetailsValue["databaseServerLoad"];
                                        if (databaseServerLoadValue != null && databaseServerLoadValue.Type != JTokenType.Null)
                                        {
                                            string databaseServerLoadInstance = ((string)databaseServerLoadValue);
                                            vMwareFabricDetailsInstance.DatabaseServerLoad = databaseServerLoadInstance;
                                        }
                                        
                                        JToken databaseServerLoadStatusValue = customDetailsValue["databaseServerLoadStatus"];
                                        if (databaseServerLoadStatusValue != null && databaseServerLoadStatusValue.Type != JTokenType.Null)
                                        {
                                            string databaseServerLoadStatusInstance = ((string)databaseServerLoadStatusValue);
                                            vMwareFabricDetailsInstance.DatabaseServerLoadStatus = databaseServerLoadStatusInstance;
                                        }
                                        
                                        JToken csServiceStatusValue = customDetailsValue["csServiceStatus"];
                                        if (csServiceStatusValue != null && csServiceStatusValue.Type != JTokenType.Null)
                                        {
                                            string csServiceStatusInstance = ((string)csServiceStatusValue);
                                            vMwareFabricDetailsInstance.CsServiceStatus = csServiceStatusInstance;
                                        }
                                        
                                        JToken ipAddressValue3 = customDetailsValue["ipAddress"];
                                        if (ipAddressValue3 != null && ipAddressValue3.Type != JTokenType.Null)
                                        {
                                            string ipAddressInstance3 = ((string)ipAddressValue3);
                                            vMwareFabricDetailsInstance.IpAddress = ipAddressInstance3;
                                        }
                                        
                                        JToken agentVersionValue3 = customDetailsValue["agentVersion"];
                                        if (agentVersionValue3 != null && agentVersionValue3.Type != JTokenType.Null)
                                        {
                                            string agentVersionInstance3 = ((string)agentVersionValue3);
                                            vMwareFabricDetailsInstance.AgentVersion = agentVersionInstance3;
                                        }
                                        
                                        JToken hostNameValue = customDetailsValue["hostName"];
                                        if (hostNameValue != null && hostNameValue.Type != JTokenType.Null)
                                        {
                                            string hostNameInstance = ((string)hostNameValue);
                                            vMwareFabricDetailsInstance.HostName = hostNameInstance;
                                        }
                                        
                                        JToken lastHeartbeatValue3 = customDetailsValue["lastHeartbeat"];
                                        if (lastHeartbeatValue3 != null && lastHeartbeatValue3.Type != JTokenType.Null)
                                        {
                                            DateTime lastHeartbeatInstance3 = ((DateTime)lastHeartbeatValue3);
                                            vMwareFabricDetailsInstance.LastHeartbeat = lastHeartbeatInstance3;
                                        }
                                        
                                        JToken versionStatusValue3 = customDetailsValue["versionStatus"];
                                        if (versionStatusValue3 != null && versionStatusValue3.Type != JTokenType.Null)
                                        {
                                            string versionStatusInstance3 = ((string)versionStatusValue3);
                                            vMwareFabricDetailsInstance.VersionStatus = versionStatusInstance3;
                                        }
                                        
                                        JToken sslCertExpiryDateValue2 = customDetailsValue["sslCertExpiryDate"];
                                        if (sslCertExpiryDateValue2 != null && sslCertExpiryDateValue2.Type != JTokenType.Null)
                                        {
                                            DateTime sslCertExpiryDateInstance2 = ((DateTime)sslCertExpiryDateValue2);
                                            vMwareFabricDetailsInstance.SslCertExpiryDate = sslCertExpiryDateInstance2;
                                        }
                                        
                                        JToken sslCertExpiryRemainingDaysValue2 = customDetailsValue["sslCertExpiryRemainingDays"];
                                        if (sslCertExpiryRemainingDaysValue2 != null && sslCertExpiryRemainingDaysValue2.Type != JTokenType.Null)
                                        {
                                            int sslCertExpiryRemainingDaysInstance2 = ((int)sslCertExpiryRemainingDaysValue2);
                                            vMwareFabricDetailsInstance.SslCertExpiryRemainingDays = sslCertExpiryRemainingDaysInstance2;
                                        }
                                        
                                        JToken psTemplateVersionValue = customDetailsValue["psTemplateVersion"];
                                        if (psTemplateVersionValue != null && psTemplateVersionValue.Type != JTokenType.Null)
                                        {
                                            string psTemplateVersionInstance = ((string)psTemplateVersionValue);
                                            vMwareFabricDetailsInstance.PsTemplateVersion = psTemplateVersionInstance;
                                        }
                                        
                                        JToken agentExpiryDateValue3 = customDetailsValue["agentExpiryDate"];
                                        if (agentExpiryDateValue3 != null && agentExpiryDateValue3.Type != JTokenType.Null)
                                        {
                                            DateTime agentExpiryDateInstance3 = ((DateTime)agentExpiryDateValue3);
                                            vMwareFabricDetailsInstance.AgentExpiryDate = agentExpiryDateInstance3;
                                        }
                                        
                                        JToken agentVersionDetailsValue3 = customDetailsValue["agentVersionDetails"];
                                        if (agentVersionDetailsValue3 != null && agentVersionDetailsValue3.Type != JTokenType.Null)
                                        {
                                            VersionDetails agentVersionDetailsInstance3 = new VersionDetails();
                                            vMwareFabricDetailsInstance.AgentVersionDetails = agentVersionDetailsInstance3;
                                            
                                            JToken versionValue5 = agentVersionDetailsValue3["version"];
                                            if (versionValue5 != null && versionValue5.Type != JTokenType.Null)
                                            {
                                                string versionInstance5 = ((string)versionValue5);
                                                agentVersionDetailsInstance3.Version = versionInstance5;
                                            }
                                            
                                            JToken expiryDateValue4 = agentVersionDetailsValue3["expiryDate"];
                                            if (expiryDateValue4 != null && expiryDateValue4.Type != JTokenType.Null)
                                            {
                                                DateTime expiryDateInstance4 = ((DateTime)expiryDateValue4);
                                                agentVersionDetailsInstance3.ExpiryDate = expiryDateInstance4;
                                            }
                                            
                                            JToken statusValue4 = agentVersionDetailsValue3["status"];
                                            if (statusValue4 != null && statusValue4.Type != JTokenType.Null)
                                            {
                                                string statusInstance4 = ((string)statusValue4);
                                                agentVersionDetailsInstance3.Status = statusInstance4;
                                            }
                                        }
                                        
                                        JToken instanceTypeValue4 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue4 != null && instanceTypeValue4.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance4 = ((string)instanceTypeValue4);
                                            vMwareFabricDetailsInstance.InstanceType = instanceTypeInstance4;
                                        }
                                        propertiesInstance.CustomDetails = vMwareFabricDetailsInstance;
                                    }
                                    if (typeName == "VMwareV2")
                                    {
                                        VMwareV2FabricSpecificDetails vMwareV2FabricSpecificDetailsInstance = new VMwareV2FabricSpecificDetails();
                                        
                                        JToken vmwareSiteIdValue = customDetailsValue["vmwareSiteId"];
                                        if (vmwareSiteIdValue != null && vmwareSiteIdValue.Type != JTokenType.Null)
                                        {
                                            string vmwareSiteIdInstance = ((string)vmwareSiteIdValue);
                                            vMwareV2FabricSpecificDetailsInstance.VMwareSiteId = vmwareSiteIdInstance;
                                        }
                                        
                                        JToken migrationSolutionIdValue = customDetailsValue["migrationSolutionId"];
                                        if (migrationSolutionIdValue != null && migrationSolutionIdValue.Type != JTokenType.Null)
                                        {
                                            string migrationSolutionIdInstance = ((string)migrationSolutionIdValue);
                                            vMwareV2FabricSpecificDetailsInstance.MigrationSolutionId = migrationSolutionIdInstance;
                                        }
                                        
                                        JToken serviceEndpointValue = customDetailsValue["serviceEndpoint"];
                                        if (serviceEndpointValue != null && serviceEndpointValue.Type != JTokenType.Null)
                                        {
                                            string serviceEndpointInstance = ((string)serviceEndpointValue);
                                            vMwareV2FabricSpecificDetailsInstance.ServiceEndpoint = serviceEndpointInstance;
                                        }
                                        
                                        JToken instanceTypeValue5 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue5 != null && instanceTypeValue5.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance5 = ((string)instanceTypeValue5);
                                            vMwareV2FabricSpecificDetailsInstance.InstanceType = instanceTypeInstance5;
                                        }
                                        propertiesInstance.CustomDetails = vMwareV2FabricSpecificDetailsInstance;
                                    }
                                }
                                
                                JToken healthErrorDetailsArray = propertiesValue["healthErrorDetails"];
                                if (healthErrorDetailsArray != null && healthErrorDetailsArray.Type != JTokenType.Null)
                                {
                                    foreach (JToken healthErrorDetailsValue in ((JArray)healthErrorDetailsArray))
                                    {
                                        HealthError healthErrorInstance4 = new HealthError();
                                        propertiesInstance.HealthErrorDetails.Add(healthErrorInstance4);
                                        
                                        JToken errorSourceValue7 = healthErrorDetailsValue["errorSource"];
                                        if (errorSourceValue7 != null && errorSourceValue7.Type != JTokenType.Null)
                                        {
                                            string errorSourceInstance7 = ((string)errorSourceValue7);
                                            healthErrorInstance4.ErrorSource = errorSourceInstance7;
                                        }
                                        
                                        JToken errorTypeValue7 = healthErrorDetailsValue["errorType"];
                                        if (errorTypeValue7 != null && errorTypeValue7.Type != JTokenType.Null)
                                        {
                                            string errorTypeInstance7 = ((string)errorTypeValue7);
                                            healthErrorInstance4.ErrorType = errorTypeInstance7;
                                        }
                                        
                                        JToken errorLevelValue7 = healthErrorDetailsValue["errorLevel"];
                                        if (errorLevelValue7 != null && errorLevelValue7.Type != JTokenType.Null)
                                        {
                                            string errorLevelInstance7 = ((string)errorLevelValue7);
                                            healthErrorInstance4.ErrorLevel = errorLevelInstance7;
                                        }
                                        
                                        JToken errorCategoryValue7 = healthErrorDetailsValue["errorCategory"];
                                        if (errorCategoryValue7 != null && errorCategoryValue7.Type != JTokenType.Null)
                                        {
                                            string errorCategoryInstance7 = ((string)errorCategoryValue7);
                                            healthErrorInstance4.ErrorCategory = errorCategoryInstance7;
                                        }
                                        
                                        JToken errorCodeValue7 = healthErrorDetailsValue["errorCode"];
                                        if (errorCodeValue7 != null && errorCodeValue7.Type != JTokenType.Null)
                                        {
                                            string errorCodeInstance7 = ((string)errorCodeValue7);
                                            healthErrorInstance4.ErrorCode = errorCodeInstance7;
                                        }
                                        
                                        JToken errorMessageValue7 = healthErrorDetailsValue["errorMessage"];
                                        if (errorMessageValue7 != null && errorMessageValue7.Type != JTokenType.Null)
                                        {
                                            string errorMessageInstance7 = ((string)errorMessageValue7);
                                            healthErrorInstance4.ErrorMessage = errorMessageInstance7;
                                        }
                                        
                                        JToken summaryMessageValue7 = healthErrorDetailsValue["summaryMessage"];
                                        if (summaryMessageValue7 != null && summaryMessageValue7.Type != JTokenType.Null)
                                        {
                                            string summaryMessageInstance7 = ((string)summaryMessageValue7);
                                            healthErrorInstance4.SummaryMessage = summaryMessageInstance7;
                                        }
                                        
                                        JToken possibleCausesValue7 = healthErrorDetailsValue["possibleCauses"];
                                        if (possibleCausesValue7 != null && possibleCausesValue7.Type != JTokenType.Null)
                                        {
                                            string possibleCausesInstance7 = ((string)possibleCausesValue7);
                                            healthErrorInstance4.PossibleCauses = possibleCausesInstance7;
                                        }
                                        
                                        JToken recommendedActionValue7 = healthErrorDetailsValue["recommendedAction"];
                                        if (recommendedActionValue7 != null && recommendedActionValue7.Type != JTokenType.Null)
                                        {
                                            string recommendedActionInstance7 = ((string)recommendedActionValue7);
                                            healthErrorInstance4.RecommendedAction = recommendedActionInstance7;
                                        }
                                        
                                        JToken creationTimeUtcValue7 = healthErrorDetailsValue["creationTimeUtc"];
                                        if (creationTimeUtcValue7 != null && creationTimeUtcValue7.Type != JTokenType.Null)
                                        {
                                            DateTime creationTimeUtcInstance7 = ((DateTime)creationTimeUtcValue7);
                                            healthErrorInstance4.CreationTimeUtc = creationTimeUtcInstance7;
                                        }
                                        
                                        JToken recoveryProviderErrorMessageValue7 = healthErrorDetailsValue["recoveryProviderErrorMessage"];
                                        if (recoveryProviderErrorMessageValue7 != null && recoveryProviderErrorMessageValue7.Type != JTokenType.Null)
                                        {
                                            string recoveryProviderErrorMessageInstance7 = ((string)recoveryProviderErrorMessageValue7);
                                            healthErrorInstance4.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance7;
                                        }
                                        
                                        JToken entityIdValue7 = healthErrorDetailsValue["entityId"];
                                        if (entityIdValue7 != null && entityIdValue7.Type != JTokenType.Null)
                                        {
                                            string entityIdInstance7 = ((string)entityIdValue7);
                                            healthErrorInstance4.EntityId = entityIdInstance7;
                                        }
                                        
                                        JToken innerHealthErrorsArray4 = healthErrorDetailsValue["innerHealthErrors"];
                                        if (innerHealthErrorsArray4 != null && innerHealthErrorsArray4.Type != JTokenType.Null)
                                        {
                                            foreach (JToken innerHealthErrorsValue4 in ((JArray)innerHealthErrorsArray4))
                                            {
                                                InnerHealthError innerHealthErrorInstance4 = new InnerHealthError();
                                                healthErrorInstance4.InnerHealthErrors.Add(innerHealthErrorInstance4);
                                                
                                                JToken errorSourceValue8 = innerHealthErrorsValue4["errorSource"];
                                                if (errorSourceValue8 != null && errorSourceValue8.Type != JTokenType.Null)
                                                {
                                                    string errorSourceInstance8 = ((string)errorSourceValue8);
                                                    innerHealthErrorInstance4.ErrorSource = errorSourceInstance8;
                                                }
                                                
                                                JToken errorTypeValue8 = innerHealthErrorsValue4["errorType"];
                                                if (errorTypeValue8 != null && errorTypeValue8.Type != JTokenType.Null)
                                                {
                                                    string errorTypeInstance8 = ((string)errorTypeValue8);
                                                    innerHealthErrorInstance4.ErrorType = errorTypeInstance8;
                                                }
                                                
                                                JToken errorLevelValue8 = innerHealthErrorsValue4["errorLevel"];
                                                if (errorLevelValue8 != null && errorLevelValue8.Type != JTokenType.Null)
                                                {
                                                    string errorLevelInstance8 = ((string)errorLevelValue8);
                                                    innerHealthErrorInstance4.ErrorLevel = errorLevelInstance8;
                                                }
                                                
                                                JToken errorCategoryValue8 = innerHealthErrorsValue4["errorCategory"];
                                                if (errorCategoryValue8 != null && errorCategoryValue8.Type != JTokenType.Null)
                                                {
                                                    string errorCategoryInstance8 = ((string)errorCategoryValue8);
                                                    innerHealthErrorInstance4.ErrorCategory = errorCategoryInstance8;
                                                }
                                                
                                                JToken errorCodeValue8 = innerHealthErrorsValue4["errorCode"];
                                                if (errorCodeValue8 != null && errorCodeValue8.Type != JTokenType.Null)
                                                {
                                                    string errorCodeInstance8 = ((string)errorCodeValue8);
                                                    innerHealthErrorInstance4.ErrorCode = errorCodeInstance8;
                                                }
                                                
                                                JToken errorMessageValue8 = innerHealthErrorsValue4["errorMessage"];
                                                if (errorMessageValue8 != null && errorMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string errorMessageInstance8 = ((string)errorMessageValue8);
                                                    innerHealthErrorInstance4.ErrorMessage = errorMessageInstance8;
                                                }
                                                
                                                JToken summaryMessageValue8 = innerHealthErrorsValue4["summaryMessage"];
                                                if (summaryMessageValue8 != null && summaryMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string summaryMessageInstance8 = ((string)summaryMessageValue8);
                                                    innerHealthErrorInstance4.SummaryMessage = summaryMessageInstance8;
                                                }
                                                
                                                JToken possibleCausesValue8 = innerHealthErrorsValue4["possibleCauses"];
                                                if (possibleCausesValue8 != null && possibleCausesValue8.Type != JTokenType.Null)
                                                {
                                                    string possibleCausesInstance8 = ((string)possibleCausesValue8);
                                                    innerHealthErrorInstance4.PossibleCauses = possibleCausesInstance8;
                                                }
                                                
                                                JToken recommendedActionValue8 = innerHealthErrorsValue4["recommendedAction"];
                                                if (recommendedActionValue8 != null && recommendedActionValue8.Type != JTokenType.Null)
                                                {
                                                    string recommendedActionInstance8 = ((string)recommendedActionValue8);
                                                    innerHealthErrorInstance4.RecommendedAction = recommendedActionInstance8;
                                                }
                                                
                                                JToken creationTimeUtcValue8 = innerHealthErrorsValue4["creationTimeUtc"];
                                                if (creationTimeUtcValue8 != null && creationTimeUtcValue8.Type != JTokenType.Null)
                                                {
                                                    DateTime creationTimeUtcInstance8 = ((DateTime)creationTimeUtcValue8);
                                                    innerHealthErrorInstance4.CreationTimeUtc = creationTimeUtcInstance8;
                                                }
                                                
                                                JToken recoveryProviderErrorMessageValue8 = innerHealthErrorsValue4["recoveryProviderErrorMessage"];
                                                if (recoveryProviderErrorMessageValue8 != null && recoveryProviderErrorMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string recoveryProviderErrorMessageInstance8 = ((string)recoveryProviderErrorMessageValue8);
                                                    innerHealthErrorInstance4.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance8;
                                                }
                                                
                                                JToken entityIdValue8 = innerHealthErrorsValue4["entityId"];
                                                if (entityIdValue8 != null && entityIdValue8.Type != JTokenType.Null)
                                                {
                                                    string entityIdInstance8 = ((string)entityIdValue8);
                                                    innerHealthErrorInstance4.EntityId = entityIdInstance8;
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                JToken healthValue = propertiesValue["health"];
                                if (healthValue != null && healthValue.Type != JTokenType.Null)
                                {
                                    string healthInstance = ((string)healthValue);
                                    propertiesInstance.Health = healthInstance;
                                }
                            }
                            
                            JToken idValue3 = responseDoc["id"];
                            if (idValue3 != null && idValue3.Type != JTokenType.Null)
                            {
                                string idInstance3 = ((string)idValue3);
                                fabricInstance.Id = idInstance3;
                            }
                            
                            JToken nameValue2 = responseDoc["name"];
                            if (nameValue2 != null && nameValue2.Type != JTokenType.Null)
                            {
                                string nameInstance2 = ((string)nameValue2);
                                fabricInstance.Name = nameInstance2;
                            }
                            
                            JToken typeValue2 = responseDoc["type"];
                            if (typeValue2 != null && typeValue2.Type != JTokenType.Null)
                            {
                                string typeInstance2 = ((string)typeValue2);
                                fabricInstance.Type = typeInstance2;
                            }
                            
                            JToken locationValue2 = responseDoc["location"];
                            if (locationValue2 != null && locationValue2.Type != JTokenType.Null)
                            {
                                string locationInstance2 = ((string)locationValue2);
                                fabricInstance.Location = locationInstance2;
                            }
                            
                            JToken tagsSequenceElement = ((JToken)responseDoc["tags"]);
                            if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)
                            {
                                foreach (JProperty property in tagsSequenceElement)
                                {
                                    string tagsKey = ((string)property.Name);
                                    string tagsValue = ((string)property.Value);
                                    fabricInstance.Tags.Add(tagsKey, tagsValue);
                                }
                            }
                            
                            JToken locationValue3 = responseDoc["Location"];
                            if (locationValue3 != null && locationValue3.Type != JTokenType.Null)
                            {
                                string locationInstance3 = ((string)locationValue3);
                                result.Location = locationInstance3;
                            }
                            
                            JToken retryAfterValue = responseDoc["RetryAfter"];
                            if (retryAfterValue != null && retryAfterValue.Type != JTokenType.Null)
                            {
                                int retryAfterInstance = ((int)retryAfterValue);
                                result.RetryAfter = retryAfterInstance;
                            }
                            
                            JToken asyncOperationValue = responseDoc["AsyncOperation"];
                            if (asyncOperationValue != null && asyncOperationValue.Type != JTokenType.Null)
                            {
                                string asyncOperationInstance = ((string)asyncOperationValue);
                                result.AsyncOperation = asyncOperationInstance;
                            }
                            
                            JToken statusValue5 = responseDoc["Status"];
                            if (statusValue5 != null && statusValue5.Type != JTokenType.Null)
                            {
                                OperationStatus statusInstance5 = ((OperationStatus)Enum.Parse(typeof(OperationStatus), ((string)statusValue5), true));
                                result.Status = statusInstance5;
                            }
                            
                            JToken cultureValue = responseDoc["Culture"];
                            if (cultureValue != null && cultureValue.Type != JTokenType.Null)
                            {
                                string cultureInstance = ((string)cultureValue);
                                result.Culture = cultureInstance;
                            }
                            
                            JToken clientRequestIdValue = responseDoc["ClientRequestId"];
                            if (clientRequestIdValue != null && clientRequestIdValue.Type != JTokenType.Null)
                            {
                                string clientRequestIdInstance = ((string)clientRequestIdValue);
                                result.ClientRequestId = clientRequestIdInstance;
                            }
                            
                            JToken correlationRequestIdValue = responseDoc["CorrelationRequestId"];
                            if (correlationRequestIdValue != null && correlationRequestIdValue.Type != JTokenType.Null)
                            {
                                string correlationRequestIdInstance = ((string)correlationRequestIdValue);
                                result.CorrelationRequestId = correlationRequestIdInstance;
                            }
                            
                            JToken dateValue = responseDoc["Date"];
                            if (dateValue != null && dateValue.Type != JTokenType.Null)
                            {
                                string dateInstance = ((string)dateValue);
                                result.Date = dateInstance;
                            }
                            
                            JToken contentTypeValue = responseDoc["ContentType"];
                            if (contentTypeValue != null && contentTypeValue.Type != JTokenType.Null)
                            {
                                string contentTypeInstance = ((string)contentTypeValue);
                                result.ContentType = contentTypeInstance;
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    if (statusCode == HttpStatusCode.NoContent)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.Accepted)
                    {
                        result.Status = OperationStatus.InProgress;
                    }
                    if (statusCode == HttpStatusCode.OK)
                    {
                        result.Status = OperationStatus.Succeeded;
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// The Get Operation Status operation returns the status of the
        /// specified operation. After calling an asynchronous operation, you
        /// can call Get Operation Status to determine whether the operation
        /// has succeeded, failed, or is still in progress.
        /// </summary>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> GetDeleteStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
        {
            // Validate
            if (operationStatusLink == null)
            {
                throw new ArgumentNullException("operationStatusLink");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("operationStatusLink", operationStatusLink);
                TracingAdapter.Enter(invocationId, this, "GetDeleteStatusAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + operationStatusLink;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.Accepted && statusCode != HttpStatusCode.NoContent)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.Accepted || statusCode == HttpStatusCode.NoContent)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new LongRunningOperationResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            JToken locationValue = responseDoc["Location"];
                            if (locationValue != null && locationValue.Type != JTokenType.Null)
                            {
                                string locationInstance = ((string)locationValue);
                                result.Location = locationInstance;
                            }
                            
                            JToken retryAfterValue = responseDoc["RetryAfter"];
                            if (retryAfterValue != null && retryAfterValue.Type != JTokenType.Null)
                            {
                                int retryAfterInstance = ((int)retryAfterValue);
                                result.RetryAfter = retryAfterInstance;
                            }
                            
                            JToken asyncOperationValue = responseDoc["AsyncOperation"];
                            if (asyncOperationValue != null && asyncOperationValue.Type != JTokenType.Null)
                            {
                                string asyncOperationInstance = ((string)asyncOperationValue);
                                result.AsyncOperation = asyncOperationInstance;
                            }
                            
                            JToken statusValue = responseDoc["Status"];
                            if (statusValue != null && statusValue.Type != JTokenType.Null)
                            {
                                OperationStatus statusInstance = ((OperationStatus)Enum.Parse(typeof(OperationStatus), ((string)statusValue), true));
                                result.Status = statusInstance;
                            }
                            
                            JToken cultureValue = responseDoc["Culture"];
                            if (cultureValue != null && cultureValue.Type != JTokenType.Null)
                            {
                                string cultureInstance = ((string)cultureValue);
                                result.Culture = cultureInstance;
                            }
                            
                            JToken clientRequestIdValue = responseDoc["ClientRequestId"];
                            if (clientRequestIdValue != null && clientRequestIdValue.Type != JTokenType.Null)
                            {
                                string clientRequestIdInstance = ((string)clientRequestIdValue);
                                result.ClientRequestId = clientRequestIdInstance;
                            }
                            
                            JToken correlationRequestIdValue = responseDoc["CorrelationRequestId"];
                            if (correlationRequestIdValue != null && correlationRequestIdValue.Type != JTokenType.Null)
                            {
                                string correlationRequestIdInstance = ((string)correlationRequestIdValue);
                                result.CorrelationRequestId = correlationRequestIdInstance;
                            }
                            
                            JToken dateValue = responseDoc["Date"];
                            if (dateValue != null && dateValue.Type != JTokenType.Null)
                            {
                                string dateInstance = ((string)dateValue);
                                result.Date = dateInstance;
                            }
                            
                            JToken contentTypeValue = responseDoc["ContentType"];
                            if (contentTypeValue != null && contentTypeValue.Type != JTokenType.Null)
                            {
                                string contentTypeInstance = ((string)contentTypeValue);
                                result.ContentType = contentTypeInstance;
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    if (statusCode == HttpStatusCode.OK)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.Accepted)
                    {
                        result.Status = OperationStatus.InProgress;
                    }
                    if (statusCode == HttpStatusCode.NoContent)
                    {
                        result.Status = OperationStatus.Succeeded;
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// The Get Operation Status operation returns the status of the
        /// specified operation. After calling an asynchronous operation, you
        /// can call Get Operation Status to determine whether the operation
        /// has succeeded, failed, or is still in progress.
        /// </summary>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<DeployProcessServerOperationResponse> GetDeployProcessServerStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
        {
            // Validate
            if (operationStatusLink == null)
            {
                throw new ArgumentNullException("operationStatusLink");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("operationStatusLink", operationStatusLink);
                TracingAdapter.Enter(invocationId, this, "GetDeployProcessServerStatusAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + operationStatusLink;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    DeployProcessServerOperationResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK || statusCode == HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new DeployProcessServerOperationResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            Fabric fabricInstance = new Fabric();
                            result.Fabric = fabricInstance;
                            
                            JToken propertiesValue = responseDoc["properties"];
                            if (propertiesValue != null && propertiesValue.Type != JTokenType.Null)
                            {
                                FabricProperties propertiesInstance = new FabricProperties();
                                fabricInstance.Properties = propertiesInstance;
                                
                                JToken friendlyNameValue = propertiesValue["friendlyName"];
                                if (friendlyNameValue != null && friendlyNameValue.Type != JTokenType.Null)
                                {
                                    string friendlyNameInstance = ((string)friendlyNameValue);
                                    propertiesInstance.FriendlyName = friendlyNameInstance;
                                }
                                
                                JToken internalIdentifierValue = propertiesValue["internalIdentifier"];
                                if (internalIdentifierValue != null && internalIdentifierValue.Type != JTokenType.Null)
                                {
                                    string internalIdentifierInstance = ((string)internalIdentifierValue);
                                    propertiesInstance.InternalIdentifier = internalIdentifierInstance;
                                }
                                
                                JToken bcdrStateValue = propertiesValue["bcdrState"];
                                if (bcdrStateValue != null && bcdrStateValue.Type != JTokenType.Null)
                                {
                                    string bcdrStateInstance = ((string)bcdrStateValue);
                                    propertiesInstance.BcdrState = bcdrStateInstance;
                                }
                                
                                JToken encryptionDetailsValue = propertiesValue["encryptionDetails"];
                                if (encryptionDetailsValue != null && encryptionDetailsValue.Type != JTokenType.Null)
                                {
                                    EncryptionDetails encryptionDetailsInstance = new EncryptionDetails();
                                    propertiesInstance.EncryptionDetails = encryptionDetailsInstance;
                                    
                                    JToken kekStateValue = encryptionDetailsValue["kekState"];
                                    if (kekStateValue != null && kekStateValue.Type != JTokenType.Null)
                                    {
                                        string kekStateInstance = ((string)kekStateValue);
                                        encryptionDetailsInstance.KekState = kekStateInstance;
                                    }
                                    
                                    JToken kekCertThumbprintValue = encryptionDetailsValue["kekCertThumbprint"];
                                    if (kekCertThumbprintValue != null && kekCertThumbprintValue.Type != JTokenType.Null)
                                    {
                                        string kekCertThumbprintInstance = ((string)kekCertThumbprintValue);
                                        encryptionDetailsInstance.KekCertThumbprint = kekCertThumbprintInstance;
                                    }
                                    
                                    JToken kekCertExpiryDateValue = encryptionDetailsValue["kekCertExpiryDate"];
                                    if (kekCertExpiryDateValue != null && kekCertExpiryDateValue.Type != JTokenType.Null)
                                    {
                                        DateTime kekCertExpiryDateInstance = ((DateTime)kekCertExpiryDateValue);
                                        encryptionDetailsInstance.KekCertExpiryDate = kekCertExpiryDateInstance;
                                    }
                                }
                                
                                JToken rolloverEncryptionDetailsValue = propertiesValue["rolloverEncryptionDetails"];
                                if (rolloverEncryptionDetailsValue != null && rolloverEncryptionDetailsValue.Type != JTokenType.Null)
                                {
                                    EncryptionDetails rolloverEncryptionDetailsInstance = new EncryptionDetails();
                                    propertiesInstance.RolloverEncryptionDetails = rolloverEncryptionDetailsInstance;
                                    
                                    JToken kekStateValue2 = rolloverEncryptionDetailsValue["kekState"];
                                    if (kekStateValue2 != null && kekStateValue2.Type != JTokenType.Null)
                                    {
                                        string kekStateInstance2 = ((string)kekStateValue2);
                                        rolloverEncryptionDetailsInstance.KekState = kekStateInstance2;
                                    }
                                    
                                    JToken kekCertThumbprintValue2 = rolloverEncryptionDetailsValue["kekCertThumbprint"];
                                    if (kekCertThumbprintValue2 != null && kekCertThumbprintValue2.Type != JTokenType.Null)
                                    {
                                        string kekCertThumbprintInstance2 = ((string)kekCertThumbprintValue2);
                                        rolloverEncryptionDetailsInstance.KekCertThumbprint = kekCertThumbprintInstance2;
                                    }
                                    
                                    JToken kekCertExpiryDateValue2 = rolloverEncryptionDetailsValue["kekCertExpiryDate"];
                                    if (kekCertExpiryDateValue2 != null && kekCertExpiryDateValue2.Type != JTokenType.Null)
                                    {
                                        DateTime kekCertExpiryDateInstance2 = ((DateTime)kekCertExpiryDateValue2);
                                        rolloverEncryptionDetailsInstance.KekCertExpiryDate = kekCertExpiryDateInstance2;
                                    }
                                }
                                
                                JToken customDetailsValue = propertiesValue["customDetails"];
                                if (customDetailsValue != null && customDetailsValue.Type != JTokenType.Null)
                                {
                                    string typeName = ((string)customDetailsValue["instanceType"]);
                                    if (typeName == "VMM")
                                    {
                                        VmmDetails vmmDetailsInstance = new VmmDetails();
                                        
                                        JToken instanceTypeValue = customDetailsValue["instanceType"];
                                        if (instanceTypeValue != null && instanceTypeValue.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance = ((string)instanceTypeValue);
                                            vmmDetailsInstance.InstanceType = instanceTypeInstance;
                                        }
                                        propertiesInstance.CustomDetails = vmmDetailsInstance;
                                    }
                                    if (typeName == "HyperVSite")
                                    {
                                        HyperVSiteDetails hyperVSiteDetailsInstance = new HyperVSiteDetails();
                                        
                                        JToken instanceTypeValue2 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue2 != null && instanceTypeValue2.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance2 = ((string)instanceTypeValue2);
                                            hyperVSiteDetailsInstance.InstanceType = instanceTypeInstance2;
                                        }
                                        propertiesInstance.CustomDetails = hyperVSiteDetailsInstance;
                                    }
                                    if (typeName == "Azure")
                                    {
                                        AzureFabricSpecificDetails azureFabricSpecificDetailsInstance = new AzureFabricSpecificDetails();
                                        
                                        JToken locationValue = customDetailsValue["location"];
                                        if (locationValue != null && locationValue.Type != JTokenType.Null)
                                        {
                                            string locationInstance = ((string)locationValue);
                                            azureFabricSpecificDetailsInstance.Location = locationInstance;
                                        }
                                        
                                        JToken containerIdsArray = customDetailsValue["containerIds"];
                                        if (containerIdsArray != null && containerIdsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken containerIdsValue in ((JArray)containerIdsArray))
                                            {
                                                azureFabricSpecificDetailsInstance.ContainerIds.Add(((string)containerIdsValue));
                                            }
                                        }
                                        
                                        JToken instanceTypeValue3 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue3 != null && instanceTypeValue3.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance3 = ((string)instanceTypeValue3);
                                            azureFabricSpecificDetailsInstance.InstanceType = instanceTypeInstance3;
                                        }
                                        propertiesInstance.CustomDetails = azureFabricSpecificDetailsInstance;
                                    }
                                    if (typeName == "VMware")
                                    {
                                        VMwareFabricDetails vMwareFabricDetailsInstance = new VMwareFabricDetails();
                                        
                                        JToken processServersArray = customDetailsValue["processServers"];
                                        if (processServersArray != null && processServersArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken processServersValue in ((JArray)processServersArray))
                                            {
                                                ProcessServer processServerInstance = new ProcessServer();
                                                vMwareFabricDetailsInstance.ProcessServers.Add(processServerInstance);
                                                
                                                JToken friendlyNameValue2 = processServersValue["friendlyName"];
                                                if (friendlyNameValue2 != null && friendlyNameValue2.Type != JTokenType.Null)
                                                {
                                                    string friendlyNameInstance2 = ((string)friendlyNameValue2);
                                                    processServerInstance.FriendlyName = friendlyNameInstance2;
                                                }
                                                
                                                JToken idValue = processServersValue["id"];
                                                if (idValue != null && idValue.Type != JTokenType.Null)
                                                {
                                                    string idInstance = ((string)idValue);
                                                    processServerInstance.Id = idInstance;
                                                }
                                                
                                                JToken ipAddressValue = processServersValue["ipAddress"];
                                                if (ipAddressValue != null && ipAddressValue.Type != JTokenType.Null)
                                                {
                                                    string ipAddressInstance = ((string)ipAddressValue);
                                                    processServerInstance.IpAddress = ipAddressInstance;
                                                }
                                                
                                                JToken osTypeValue = processServersValue["osType"];
                                                if (osTypeValue != null && osTypeValue.Type != JTokenType.Null)
                                                {
                                                    string osTypeInstance = ((string)osTypeValue);
                                                    processServerInstance.OsType = osTypeInstance;
                                                }
                                                
                                                JToken agentVersionValue = processServersValue["agentVersion"];
                                                if (agentVersionValue != null && agentVersionValue.Type != JTokenType.Null)
                                                {
                                                    string agentVersionInstance = ((string)agentVersionValue);
                                                    processServerInstance.AgentVersion = agentVersionInstance;
                                                }
                                                
                                                JToken lastHeartbeatValue = processServersValue["lastHeartbeat"];
                                                if (lastHeartbeatValue != null && lastHeartbeatValue.Type != JTokenType.Null)
                                                {
                                                    DateTime lastHeartbeatInstance = ((DateTime)lastHeartbeatValue);
                                                    processServerInstance.LastHeartbeat = lastHeartbeatInstance;
                                                }
                                                
                                                JToken versionStatusValue = processServersValue["versionStatus"];
                                                if (versionStatusValue != null && versionStatusValue.Type != JTokenType.Null)
                                                {
                                                    string versionStatusInstance = ((string)versionStatusValue);
                                                    processServerInstance.VersionStatus = versionStatusInstance;
                                                }
                                                
                                                JToken mobilityServiceUpdatesArray = processServersValue["mobilityServiceUpdates"];
                                                if (mobilityServiceUpdatesArray != null && mobilityServiceUpdatesArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken mobilityServiceUpdatesValue in ((JArray)mobilityServiceUpdatesArray))
                                                    {
                                                        MobilityServiceUpdate mobilityServiceUpdateInstance = new MobilityServiceUpdate();
                                                        processServerInstance.Updates.Add(mobilityServiceUpdateInstance);
                                                        
                                                        JToken versionValue = mobilityServiceUpdatesValue["version"];
                                                        if (versionValue != null && versionValue.Type != JTokenType.Null)
                                                        {
                                                            string versionInstance = ((string)versionValue);
                                                            mobilityServiceUpdateInstance.Version = versionInstance;
                                                        }
                                                        
                                                        JToken rebootStatusValue = mobilityServiceUpdatesValue["rebootStatus"];
                                                        if (rebootStatusValue != null && rebootStatusValue.Type != JTokenType.Null)
                                                        {
                                                            string rebootStatusInstance = ((string)rebootStatusValue);
                                                            mobilityServiceUpdateInstance.RebootStatus = rebootStatusInstance;
                                                        }
                                                        
                                                        JToken osTypeValue2 = mobilityServiceUpdatesValue["osType"];
                                                        if (osTypeValue2 != null && osTypeValue2.Type != JTokenType.Null)
                                                        {
                                                            string osTypeInstance2 = ((string)osTypeValue2);
                                                            mobilityServiceUpdateInstance.OsType = osTypeInstance2;
                                                        }
                                                    }
                                                }
                                                
                                                JToken hostIdValue = processServersValue["hostId"];
                                                if (hostIdValue != null && hostIdValue.Type != JTokenType.Null)
                                                {
                                                    string hostIdInstance = ((string)hostIdValue);
                                                    processServerInstance.HostId = hostIdInstance;
                                                }
                                                
                                                JToken machineCountValue = processServersValue["machineCount"];
                                                if (machineCountValue != null && machineCountValue.Type != JTokenType.Null)
                                                {
                                                    string machineCountInstance = ((string)machineCountValue);
                                                    processServerInstance.ServerCount = machineCountInstance;
                                                }
                                                
                                                JToken replicationPairCountValue = processServersValue["replicationPairCount"];
                                                if (replicationPairCountValue != null && replicationPairCountValue.Type != JTokenType.Null)
                                                {
                                                    string replicationPairCountInstance = ((string)replicationPairCountValue);
                                                    processServerInstance.ReplicationPairCount = replicationPairCountInstance;
                                                }
                                                
                                                JToken systemLoadValue = processServersValue["systemLoad"];
                                                if (systemLoadValue != null && systemLoadValue.Type != JTokenType.Null)
                                                {
                                                    string systemLoadInstance = ((string)systemLoadValue);
                                                    processServerInstance.SystemLoad = systemLoadInstance;
                                                }
                                                
                                                JToken systemLoadStatusValue = processServersValue["systemLoadStatus"];
                                                if (systemLoadStatusValue != null && systemLoadStatusValue.Type != JTokenType.Null)
                                                {
                                                    string systemLoadStatusInstance = ((string)systemLoadStatusValue);
                                                    processServerInstance.SystemLoadStatus = systemLoadStatusInstance;
                                                }
                                                
                                                JToken cpuLoadValue = processServersValue["cpuLoad"];
                                                if (cpuLoadValue != null && cpuLoadValue.Type != JTokenType.Null)
                                                {
                                                    string cpuLoadInstance = ((string)cpuLoadValue);
                                                    processServerInstance.CpuLoad = cpuLoadInstance;
                                                }
                                                
                                                JToken cpuLoadStatusValue = processServersValue["cpuLoadStatus"];
                                                if (cpuLoadStatusValue != null && cpuLoadStatusValue.Type != JTokenType.Null)
                                                {
                                                    string cpuLoadStatusInstance = ((string)cpuLoadStatusValue);
                                                    processServerInstance.CpuLoadStatus = cpuLoadStatusInstance;
                                                }
                                                
                                                JToken totalMemoryInBytesValue = processServersValue["totalMemoryInBytes"];
                                                if (totalMemoryInBytesValue != null && totalMemoryInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long totalMemoryInBytesInstance = ((long)totalMemoryInBytesValue);
                                                    processServerInstance.TotalMemoryInBytes = totalMemoryInBytesInstance;
                                                }
                                                
                                                JToken availableMemoryInBytesValue = processServersValue["availableMemoryInBytes"];
                                                if (availableMemoryInBytesValue != null && availableMemoryInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long availableMemoryInBytesInstance = ((long)availableMemoryInBytesValue);
                                                    processServerInstance.AvailableMemoryInBytes = availableMemoryInBytesInstance;
                                                }
                                                
                                                JToken memoryUsageStatusValue = processServersValue["memoryUsageStatus"];
                                                if (memoryUsageStatusValue != null && memoryUsageStatusValue.Type != JTokenType.Null)
                                                {
                                                    string memoryUsageStatusInstance = ((string)memoryUsageStatusValue);
                                                    processServerInstance.MemoryUsageStatus = memoryUsageStatusInstance;
                                                }
                                                
                                                JToken totalSpaceInBytesValue = processServersValue["totalSpaceInBytes"];
                                                if (totalSpaceInBytesValue != null && totalSpaceInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long totalSpaceInBytesInstance = ((long)totalSpaceInBytesValue);
                                                    processServerInstance.TotalSpaceInBytes = totalSpaceInBytesInstance;
                                                }
                                                
                                                JToken availableSpaceInBytesValue = processServersValue["availableSpaceInBytes"];
                                                if (availableSpaceInBytesValue != null && availableSpaceInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long availableSpaceInBytesInstance = ((long)availableSpaceInBytesValue);
                                                    processServerInstance.AvailableSpaceInBytes = availableSpaceInBytesInstance;
                                                }
                                                
                                                JToken spaceUsageStatusValue = processServersValue["spaceUsageStatus"];
                                                if (spaceUsageStatusValue != null && spaceUsageStatusValue.Type != JTokenType.Null)
                                                {
                                                    string spaceUsageStatusInstance = ((string)spaceUsageStatusValue);
                                                    processServerInstance.SpaceUsageStatus = spaceUsageStatusInstance;
                                                }
                                                
                                                JToken psServiceStatusValue = processServersValue["psServiceStatus"];
                                                if (psServiceStatusValue != null && psServiceStatusValue.Type != JTokenType.Null)
                                                {
                                                    string psServiceStatusInstance = ((string)psServiceStatusValue);
                                                    processServerInstance.PsServiceStatus = psServiceStatusInstance;
                                                }
                                                
                                                JToken sslCertExpiryDateValue = processServersValue["sslCertExpiryDate"];
                                                if (sslCertExpiryDateValue != null && sslCertExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime sslCertExpiryDateInstance = ((DateTime)sslCertExpiryDateValue);
                                                    processServerInstance.SslCertExpiryDate = sslCertExpiryDateInstance;
                                                }
                                                
                                                JToken sslCertExpiryRemainingDaysValue = processServersValue["sslCertExpiryRemainingDays"];
                                                if (sslCertExpiryRemainingDaysValue != null && sslCertExpiryRemainingDaysValue.Type != JTokenType.Null)
                                                {
                                                    int sslCertExpiryRemainingDaysInstance = ((int)sslCertExpiryRemainingDaysValue);
                                                    processServerInstance.SslCertExpiryRemainingDays = sslCertExpiryRemainingDaysInstance;
                                                }
                                                
                                                JToken osVersionValue = processServersValue["osVersion"];
                                                if (osVersionValue != null && osVersionValue.Type != JTokenType.Null)
                                                {
                                                    string osVersionInstance = ((string)osVersionValue);
                                                    processServerInstance.OsVersion = osVersionInstance;
                                                }
                                                
                                                JToken healthErrorsArray = processServersValue["healthErrors"];
                                                if (healthErrorsArray != null && healthErrorsArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken healthErrorsValue in ((JArray)healthErrorsArray))
                                                    {
                                                        HealthError healthErrorInstance = new HealthError();
                                                        processServerInstance.HealthErrors.Add(healthErrorInstance);
                                                        
                                                        JToken errorSourceValue = healthErrorsValue["errorSource"];
                                                        if (errorSourceValue != null && errorSourceValue.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance = ((string)errorSourceValue);
                                                            healthErrorInstance.ErrorSource = errorSourceInstance;
                                                        }
                                                        
                                                        JToken errorTypeValue = healthErrorsValue["errorType"];
                                                        if (errorTypeValue != null && errorTypeValue.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance = ((string)errorTypeValue);
                                                            healthErrorInstance.ErrorType = errorTypeInstance;
                                                        }
                                                        
                                                        JToken errorLevelValue = healthErrorsValue["errorLevel"];
                                                        if (errorLevelValue != null && errorLevelValue.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance = ((string)errorLevelValue);
                                                            healthErrorInstance.ErrorLevel = errorLevelInstance;
                                                        }
                                                        
                                                        JToken errorCategoryValue = healthErrorsValue["errorCategory"];
                                                        if (errorCategoryValue != null && errorCategoryValue.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance = ((string)errorCategoryValue);
                                                            healthErrorInstance.ErrorCategory = errorCategoryInstance;
                                                        }
                                                        
                                                        JToken errorCodeValue = healthErrorsValue["errorCode"];
                                                        if (errorCodeValue != null && errorCodeValue.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance = ((string)errorCodeValue);
                                                            healthErrorInstance.ErrorCode = errorCodeInstance;
                                                        }
                                                        
                                                        JToken errorMessageValue = healthErrorsValue["errorMessage"];
                                                        if (errorMessageValue != null && errorMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance = ((string)errorMessageValue);
                                                            healthErrorInstance.ErrorMessage = errorMessageInstance;
                                                        }
                                                        
                                                        JToken summaryMessageValue = healthErrorsValue["summaryMessage"];
                                                        if (summaryMessageValue != null && summaryMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance = ((string)summaryMessageValue);
                                                            healthErrorInstance.SummaryMessage = summaryMessageInstance;
                                                        }
                                                        
                                                        JToken possibleCausesValue = healthErrorsValue["possibleCauses"];
                                                        if (possibleCausesValue != null && possibleCausesValue.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance = ((string)possibleCausesValue);
                                                            healthErrorInstance.PossibleCauses = possibleCausesInstance;
                                                        }
                                                        
                                                        JToken recommendedActionValue = healthErrorsValue["recommendedAction"];
                                                        if (recommendedActionValue != null && recommendedActionValue.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance = ((string)recommendedActionValue);
                                                            healthErrorInstance.RecommendedAction = recommendedActionInstance;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue = healthErrorsValue["creationTimeUtc"];
                                                        if (creationTimeUtcValue != null && creationTimeUtcValue.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance = ((DateTime)creationTimeUtcValue);
                                                            healthErrorInstance.CreationTimeUtc = creationTimeUtcInstance;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue = healthErrorsValue["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue != null && recoveryProviderErrorMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance = ((string)recoveryProviderErrorMessageValue);
                                                            healthErrorInstance.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance;
                                                        }
                                                        
                                                        JToken entityIdValue = healthErrorsValue["entityId"];
                                                        if (entityIdValue != null && entityIdValue.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance = ((string)entityIdValue);
                                                            healthErrorInstance.EntityId = entityIdInstance;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray = healthErrorsValue["innerHealthErrors"];
                                                        if (innerHealthErrorsArray != null && innerHealthErrorsArray.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue in ((JArray)innerHealthErrorsArray))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance = new InnerHealthError();
                                                                healthErrorInstance.InnerHealthErrors.Add(innerHealthErrorInstance);
                                                                
                                                                JToken errorSourceValue2 = innerHealthErrorsValue["errorSource"];
                                                                if (errorSourceValue2 != null && errorSourceValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance2 = ((string)errorSourceValue2);
                                                                    innerHealthErrorInstance.ErrorSource = errorSourceInstance2;
                                                                }
                                                                
                                                                JToken errorTypeValue2 = innerHealthErrorsValue["errorType"];
                                                                if (errorTypeValue2 != null && errorTypeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance2 = ((string)errorTypeValue2);
                                                                    innerHealthErrorInstance.ErrorType = errorTypeInstance2;
                                                                }
                                                                
                                                                JToken errorLevelValue2 = innerHealthErrorsValue["errorLevel"];
                                                                if (errorLevelValue2 != null && errorLevelValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance2 = ((string)errorLevelValue2);
                                                                    innerHealthErrorInstance.ErrorLevel = errorLevelInstance2;
                                                                }
                                                                
                                                                JToken errorCategoryValue2 = innerHealthErrorsValue["errorCategory"];
                                                                if (errorCategoryValue2 != null && errorCategoryValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance2 = ((string)errorCategoryValue2);
                                                                    innerHealthErrorInstance.ErrorCategory = errorCategoryInstance2;
                                                                }
                                                                
                                                                JToken errorCodeValue2 = innerHealthErrorsValue["errorCode"];
                                                                if (errorCodeValue2 != null && errorCodeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance2 = ((string)errorCodeValue2);
                                                                    innerHealthErrorInstance.ErrorCode = errorCodeInstance2;
                                                                }
                                                                
                                                                JToken errorMessageValue2 = innerHealthErrorsValue["errorMessage"];
                                                                if (errorMessageValue2 != null && errorMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance2 = ((string)errorMessageValue2);
                                                                    innerHealthErrorInstance.ErrorMessage = errorMessageInstance2;
                                                                }
                                                                
                                                                JToken summaryMessageValue2 = innerHealthErrorsValue["summaryMessage"];
                                                                if (summaryMessageValue2 != null && summaryMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance2 = ((string)summaryMessageValue2);
                                                                    innerHealthErrorInstance.SummaryMessage = summaryMessageInstance2;
                                                                }
                                                                
                                                                JToken possibleCausesValue2 = innerHealthErrorsValue["possibleCauses"];
                                                                if (possibleCausesValue2 != null && possibleCausesValue2.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance2 = ((string)possibleCausesValue2);
                                                                    innerHealthErrorInstance.PossibleCauses = possibleCausesInstance2;
                                                                }
                                                                
                                                                JToken recommendedActionValue2 = innerHealthErrorsValue["recommendedAction"];
                                                                if (recommendedActionValue2 != null && recommendedActionValue2.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance2 = ((string)recommendedActionValue2);
                                                                    innerHealthErrorInstance.RecommendedAction = recommendedActionInstance2;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue2 = innerHealthErrorsValue["creationTimeUtc"];
                                                                if (creationTimeUtcValue2 != null && creationTimeUtcValue2.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance2 = ((DateTime)creationTimeUtcValue2);
                                                                    innerHealthErrorInstance.CreationTimeUtc = creationTimeUtcInstance2;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue2 = innerHealthErrorsValue["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue2 != null && recoveryProviderErrorMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance2 = ((string)recoveryProviderErrorMessageValue2);
                                                                    innerHealthErrorInstance.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance2;
                                                                }
                                                                
                                                                JToken entityIdValue2 = innerHealthErrorsValue["entityId"];
                                                                if (entityIdValue2 != null && entityIdValue2.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance2 = ((string)entityIdValue2);
                                                                    innerHealthErrorInstance.EntityId = entityIdInstance2;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken agentExpiryDateValue = processServersValue["agentExpiryDate"];
                                                if (agentExpiryDateValue != null && agentExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime agentExpiryDateInstance = ((DateTime)agentExpiryDateValue);
                                                    processServerInstance.AgentExpiryDate = agentExpiryDateInstance;
                                                }
                                                
                                                JToken agentVersionDetailsValue = processServersValue["agentVersionDetails"];
                                                if (agentVersionDetailsValue != null && agentVersionDetailsValue.Type != JTokenType.Null)
                                                {
                                                    VersionDetails agentVersionDetailsInstance = new VersionDetails();
                                                    processServerInstance.AgentVersionDetails = agentVersionDetailsInstance;
                                                    
                                                    JToken versionValue2 = agentVersionDetailsValue["version"];
                                                    if (versionValue2 != null && versionValue2.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance2 = ((string)versionValue2);
                                                        agentVersionDetailsInstance.Version = versionInstance2;
                                                    }
                                                    
                                                    JToken expiryDateValue = agentVersionDetailsValue["expiryDate"];
                                                    if (expiryDateValue != null && expiryDateValue.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance = ((DateTime)expiryDateValue);
                                                        agentVersionDetailsInstance.ExpiryDate = expiryDateInstance;
                                                    }
                                                    
                                                    JToken statusValue = agentVersionDetailsValue["status"];
                                                    if (statusValue != null && statusValue.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance = ((string)statusValue);
                                                        agentVersionDetailsInstance.Status = statusInstance;
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken masterTargetServersArray = customDetailsValue["masterTargetServers"];
                                        if (masterTargetServersArray != null && masterTargetServersArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken masterTargetServersValue in ((JArray)masterTargetServersArray))
                                            {
                                                MasterTargetServer masterTargetServerInstance = new MasterTargetServer();
                                                vMwareFabricDetailsInstance.MasterTargetServers.Add(masterTargetServerInstance);
                                                
                                                JToken idValue2 = masterTargetServersValue["id"];
                                                if (idValue2 != null && idValue2.Type != JTokenType.Null)
                                                {
                                                    string idInstance2 = ((string)idValue2);
                                                    masterTargetServerInstance.Id = idInstance2;
                                                }
                                                
                                                JToken ipAddressValue2 = masterTargetServersValue["ipAddress"];
                                                if (ipAddressValue2 != null && ipAddressValue2.Type != JTokenType.Null)
                                                {
                                                    string ipAddressInstance2 = ((string)ipAddressValue2);
                                                    masterTargetServerInstance.IpAddress = ipAddressInstance2;
                                                }
                                                
                                                JToken nameValue = masterTargetServersValue["name"];
                                                if (nameValue != null && nameValue.Type != JTokenType.Null)
                                                {
                                                    string nameInstance = ((string)nameValue);
                                                    masterTargetServerInstance.Name = nameInstance;
                                                }
                                                
                                                JToken osTypeValue3 = masterTargetServersValue["osType"];
                                                if (osTypeValue3 != null && osTypeValue3.Type != JTokenType.Null)
                                                {
                                                    string osTypeInstance3 = ((string)osTypeValue3);
                                                    masterTargetServerInstance.OsType = osTypeInstance3;
                                                }
                                                
                                                JToken agentVersionValue2 = masterTargetServersValue["agentVersion"];
                                                if (agentVersionValue2 != null && agentVersionValue2.Type != JTokenType.Null)
                                                {
                                                    string agentVersionInstance2 = ((string)agentVersionValue2);
                                                    masterTargetServerInstance.AgentVersion = agentVersionInstance2;
                                                }
                                                
                                                JToken lastHeartbeatValue2 = masterTargetServersValue["lastHeartbeat"];
                                                if (lastHeartbeatValue2 != null && lastHeartbeatValue2.Type != JTokenType.Null)
                                                {
                                                    DateTime lastHeartbeatInstance2 = ((DateTime)lastHeartbeatValue2);
                                                    masterTargetServerInstance.LastHeartbeat = lastHeartbeatInstance2;
                                                }
                                                
                                                JToken versionStatusValue2 = masterTargetServersValue["versionStatus"];
                                                if (versionStatusValue2 != null && versionStatusValue2.Type != JTokenType.Null)
                                                {
                                                    string versionStatusInstance2 = ((string)versionStatusValue2);
                                                    masterTargetServerInstance.VersionStatus = versionStatusInstance2;
                                                }
                                                
                                                JToken retentionVolumesArray = masterTargetServersValue["retentionVolumes"];
                                                if (retentionVolumesArray != null && retentionVolumesArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken retentionVolumesValue in ((JArray)retentionVolumesArray))
                                                    {
                                                        RetentionVolume retentionVolumeInstance = new RetentionVolume();
                                                        masterTargetServerInstance.RetentionVolumes.Add(retentionVolumeInstance);
                                                        
                                                        JToken volumeNameValue = retentionVolumesValue["volumeName"];
                                                        if (volumeNameValue != null && volumeNameValue.Type != JTokenType.Null)
                                                        {
                                                            string volumeNameInstance = ((string)volumeNameValue);
                                                            retentionVolumeInstance.VolumeName = volumeNameInstance;
                                                        }
                                                        
                                                        JToken capacityInBytesValue = retentionVolumesValue["capacityInBytes"];
                                                        if (capacityInBytesValue != null && capacityInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long capacityInBytesInstance = ((long)capacityInBytesValue);
                                                            retentionVolumeInstance.CapacityInBytes = capacityInBytesInstance;
                                                        }
                                                        
                                                        JToken freeSpaceInBytesValue = retentionVolumesValue["freeSpaceInBytes"];
                                                        if (freeSpaceInBytesValue != null && freeSpaceInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long freeSpaceInBytesInstance = ((long)freeSpaceInBytesValue);
                                                            retentionVolumeInstance.FreeSpaceInBytes = freeSpaceInBytesInstance;
                                                        }
                                                        
                                                        JToken thresholdPercentageValue = retentionVolumesValue["thresholdPercentage"];
                                                        if (thresholdPercentageValue != null && thresholdPercentageValue.Type != JTokenType.Null)
                                                        {
                                                            int thresholdPercentageInstance = ((int)thresholdPercentageValue);
                                                            retentionVolumeInstance.ThresholdPercentage = thresholdPercentageInstance;
                                                        }
                                                    }
                                                }
                                                
                                                JToken dataStoresArray = masterTargetServersValue["dataStores"];
                                                if (dataStoresArray != null && dataStoresArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken dataStoresValue in ((JArray)dataStoresArray))
                                                    {
                                                        DataStore dataStoreInstance = new DataStore();
                                                        masterTargetServerInstance.DataStores.Add(dataStoreInstance);
                                                        
                                                        JToken symbolicNameValue = dataStoresValue["symbolicName"];
                                                        if (symbolicNameValue != null && symbolicNameValue.Type != JTokenType.Null)
                                                        {
                                                            string symbolicNameInstance = ((string)symbolicNameValue);
                                                            dataStoreInstance.SymbolicName = symbolicNameInstance;
                                                        }
                                                        
                                                        JToken uuidValue = dataStoresValue["uuid"];
                                                        if (uuidValue != null && uuidValue.Type != JTokenType.Null)
                                                        {
                                                            string uuidInstance = ((string)uuidValue);
                                                            dataStoreInstance.Uuid = uuidInstance;
                                                        }
                                                        
                                                        JToken capacityValue = dataStoresValue["capacity"];
                                                        if (capacityValue != null && capacityValue.Type != JTokenType.Null)
                                                        {
                                                            string capacityInstance = ((string)capacityValue);
                                                            dataStoreInstance.Capacity = capacityInstance;
                                                        }
                                                        
                                                        JToken freeSpaceValue = dataStoresValue["freeSpace"];
                                                        if (freeSpaceValue != null && freeSpaceValue.Type != JTokenType.Null)
                                                        {
                                                            string freeSpaceInstance = ((string)freeSpaceValue);
                                                            dataStoreInstance.FreeSpace = freeSpaceInstance;
                                                        }
                                                        
                                                        JToken typeValue = dataStoresValue["type"];
                                                        if (typeValue != null && typeValue.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance = ((string)typeValue);
                                                            dataStoreInstance.Type = typeInstance;
                                                        }
                                                    }
                                                }
                                                
                                                JToken validationErrorsArray = masterTargetServersValue["validationErrors"];
                                                if (validationErrorsArray != null && validationErrorsArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken validationErrorsValue in ((JArray)validationErrorsArray))
                                                    {
                                                        HealthError healthErrorInstance2 = new HealthError();
                                                        masterTargetServerInstance.ValidationErrors.Add(healthErrorInstance2);
                                                        
                                                        JToken errorSourceValue3 = validationErrorsValue["errorSource"];
                                                        if (errorSourceValue3 != null && errorSourceValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance3 = ((string)errorSourceValue3);
                                                            healthErrorInstance2.ErrorSource = errorSourceInstance3;
                                                        }
                                                        
                                                        JToken errorTypeValue3 = validationErrorsValue["errorType"];
                                                        if (errorTypeValue3 != null && errorTypeValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance3 = ((string)errorTypeValue3);
                                                            healthErrorInstance2.ErrorType = errorTypeInstance3;
                                                        }
                                                        
                                                        JToken errorLevelValue3 = validationErrorsValue["errorLevel"];
                                                        if (errorLevelValue3 != null && errorLevelValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance3 = ((string)errorLevelValue3);
                                                            healthErrorInstance2.ErrorLevel = errorLevelInstance3;
                                                        }
                                                        
                                                        JToken errorCategoryValue3 = validationErrorsValue["errorCategory"];
                                                        if (errorCategoryValue3 != null && errorCategoryValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance3 = ((string)errorCategoryValue3);
                                                            healthErrorInstance2.ErrorCategory = errorCategoryInstance3;
                                                        }
                                                        
                                                        JToken errorCodeValue3 = validationErrorsValue["errorCode"];
                                                        if (errorCodeValue3 != null && errorCodeValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance3 = ((string)errorCodeValue3);
                                                            healthErrorInstance2.ErrorCode = errorCodeInstance3;
                                                        }
                                                        
                                                        JToken errorMessageValue3 = validationErrorsValue["errorMessage"];
                                                        if (errorMessageValue3 != null && errorMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance3 = ((string)errorMessageValue3);
                                                            healthErrorInstance2.ErrorMessage = errorMessageInstance3;
                                                        }
                                                        
                                                        JToken summaryMessageValue3 = validationErrorsValue["summaryMessage"];
                                                        if (summaryMessageValue3 != null && summaryMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance3 = ((string)summaryMessageValue3);
                                                            healthErrorInstance2.SummaryMessage = summaryMessageInstance3;
                                                        }
                                                        
                                                        JToken possibleCausesValue3 = validationErrorsValue["possibleCauses"];
                                                        if (possibleCausesValue3 != null && possibleCausesValue3.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance3 = ((string)possibleCausesValue3);
                                                            healthErrorInstance2.PossibleCauses = possibleCausesInstance3;
                                                        }
                                                        
                                                        JToken recommendedActionValue3 = validationErrorsValue["recommendedAction"];
                                                        if (recommendedActionValue3 != null && recommendedActionValue3.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance3 = ((string)recommendedActionValue3);
                                                            healthErrorInstance2.RecommendedAction = recommendedActionInstance3;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue3 = validationErrorsValue["creationTimeUtc"];
                                                        if (creationTimeUtcValue3 != null && creationTimeUtcValue3.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance3 = ((DateTime)creationTimeUtcValue3);
                                                            healthErrorInstance2.CreationTimeUtc = creationTimeUtcInstance3;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue3 = validationErrorsValue["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue3 != null && recoveryProviderErrorMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance3 = ((string)recoveryProviderErrorMessageValue3);
                                                            healthErrorInstance2.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance3;
                                                        }
                                                        
                                                        JToken entityIdValue3 = validationErrorsValue["entityId"];
                                                        if (entityIdValue3 != null && entityIdValue3.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance3 = ((string)entityIdValue3);
                                                            healthErrorInstance2.EntityId = entityIdInstance3;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray2 = validationErrorsValue["innerHealthErrors"];
                                                        if (innerHealthErrorsArray2 != null && innerHealthErrorsArray2.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue2 in ((JArray)innerHealthErrorsArray2))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance2 = new InnerHealthError();
                                                                healthErrorInstance2.InnerHealthErrors.Add(innerHealthErrorInstance2);
                                                                
                                                                JToken errorSourceValue4 = innerHealthErrorsValue2["errorSource"];
                                                                if (errorSourceValue4 != null && errorSourceValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance4 = ((string)errorSourceValue4);
                                                                    innerHealthErrorInstance2.ErrorSource = errorSourceInstance4;
                                                                }
                                                                
                                                                JToken errorTypeValue4 = innerHealthErrorsValue2["errorType"];
                                                                if (errorTypeValue4 != null && errorTypeValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance4 = ((string)errorTypeValue4);
                                                                    innerHealthErrorInstance2.ErrorType = errorTypeInstance4;
                                                                }
                                                                
                                                                JToken errorLevelValue4 = innerHealthErrorsValue2["errorLevel"];
                                                                if (errorLevelValue4 != null && errorLevelValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance4 = ((string)errorLevelValue4);
                                                                    innerHealthErrorInstance2.ErrorLevel = errorLevelInstance4;
                                                                }
                                                                
                                                                JToken errorCategoryValue4 = innerHealthErrorsValue2["errorCategory"];
                                                                if (errorCategoryValue4 != null && errorCategoryValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance4 = ((string)errorCategoryValue4);
                                                                    innerHealthErrorInstance2.ErrorCategory = errorCategoryInstance4;
                                                                }
                                                                
                                                                JToken errorCodeValue4 = innerHealthErrorsValue2["errorCode"];
                                                                if (errorCodeValue4 != null && errorCodeValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance4 = ((string)errorCodeValue4);
                                                                    innerHealthErrorInstance2.ErrorCode = errorCodeInstance4;
                                                                }
                                                                
                                                                JToken errorMessageValue4 = innerHealthErrorsValue2["errorMessage"];
                                                                if (errorMessageValue4 != null && errorMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance4 = ((string)errorMessageValue4);
                                                                    innerHealthErrorInstance2.ErrorMessage = errorMessageInstance4;
                                                                }
                                                                
                                                                JToken summaryMessageValue4 = innerHealthErrorsValue2["summaryMessage"];
                                                                if (summaryMessageValue4 != null && summaryMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance4 = ((string)summaryMessageValue4);
                                                                    innerHealthErrorInstance2.SummaryMessage = summaryMessageInstance4;
                                                                }
                                                                
                                                                JToken possibleCausesValue4 = innerHealthErrorsValue2["possibleCauses"];
                                                                if (possibleCausesValue4 != null && possibleCausesValue4.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance4 = ((string)possibleCausesValue4);
                                                                    innerHealthErrorInstance2.PossibleCauses = possibleCausesInstance4;
                                                                }
                                                                
                                                                JToken recommendedActionValue4 = innerHealthErrorsValue2["recommendedAction"];
                                                                if (recommendedActionValue4 != null && recommendedActionValue4.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance4 = ((string)recommendedActionValue4);
                                                                    innerHealthErrorInstance2.RecommendedAction = recommendedActionInstance4;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue4 = innerHealthErrorsValue2["creationTimeUtc"];
                                                                if (creationTimeUtcValue4 != null && creationTimeUtcValue4.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance4 = ((DateTime)creationTimeUtcValue4);
                                                                    innerHealthErrorInstance2.CreationTimeUtc = creationTimeUtcInstance4;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue4 = innerHealthErrorsValue2["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue4 != null && recoveryProviderErrorMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance4 = ((string)recoveryProviderErrorMessageValue4);
                                                                    innerHealthErrorInstance2.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance4;
                                                                }
                                                                
                                                                JToken entityIdValue4 = innerHealthErrorsValue2["entityId"];
                                                                if (entityIdValue4 != null && entityIdValue4.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance4 = ((string)entityIdValue4);
                                                                    innerHealthErrorInstance2.EntityId = entityIdInstance4;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken healthErrorsArray2 = masterTargetServersValue["healthErrors"];
                                                if (healthErrorsArray2 != null && healthErrorsArray2.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken healthErrorsValue2 in ((JArray)healthErrorsArray2))
                                                    {
                                                        HealthError healthErrorInstance3 = new HealthError();
                                                        masterTargetServerInstance.HealthErrors.Add(healthErrorInstance3);
                                                        
                                                        JToken errorSourceValue5 = healthErrorsValue2["errorSource"];
                                                        if (errorSourceValue5 != null && errorSourceValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance5 = ((string)errorSourceValue5);
                                                            healthErrorInstance3.ErrorSource = errorSourceInstance5;
                                                        }
                                                        
                                                        JToken errorTypeValue5 = healthErrorsValue2["errorType"];
                                                        if (errorTypeValue5 != null && errorTypeValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance5 = ((string)errorTypeValue5);
                                                            healthErrorInstance3.ErrorType = errorTypeInstance5;
                                                        }
                                                        
                                                        JToken errorLevelValue5 = healthErrorsValue2["errorLevel"];
                                                        if (errorLevelValue5 != null && errorLevelValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance5 = ((string)errorLevelValue5);
                                                            healthErrorInstance3.ErrorLevel = errorLevelInstance5;
                                                        }
                                                        
                                                        JToken errorCategoryValue5 = healthErrorsValue2["errorCategory"];
                                                        if (errorCategoryValue5 != null && errorCategoryValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance5 = ((string)errorCategoryValue5);
                                                            healthErrorInstance3.ErrorCategory = errorCategoryInstance5;
                                                        }
                                                        
                                                        JToken errorCodeValue5 = healthErrorsValue2["errorCode"];
                                                        if (errorCodeValue5 != null && errorCodeValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance5 = ((string)errorCodeValue5);
                                                            healthErrorInstance3.ErrorCode = errorCodeInstance5;
                                                        }
                                                        
                                                        JToken errorMessageValue5 = healthErrorsValue2["errorMessage"];
                                                        if (errorMessageValue5 != null && errorMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance5 = ((string)errorMessageValue5);
                                                            healthErrorInstance3.ErrorMessage = errorMessageInstance5;
                                                        }
                                                        
                                                        JToken summaryMessageValue5 = healthErrorsValue2["summaryMessage"];
                                                        if (summaryMessageValue5 != null && summaryMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance5 = ((string)summaryMessageValue5);
                                                            healthErrorInstance3.SummaryMessage = summaryMessageInstance5;
                                                        }
                                                        
                                                        JToken possibleCausesValue5 = healthErrorsValue2["possibleCauses"];
                                                        if (possibleCausesValue5 != null && possibleCausesValue5.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance5 = ((string)possibleCausesValue5);
                                                            healthErrorInstance3.PossibleCauses = possibleCausesInstance5;
                                                        }
                                                        
                                                        JToken recommendedActionValue5 = healthErrorsValue2["recommendedAction"];
                                                        if (recommendedActionValue5 != null && recommendedActionValue5.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance5 = ((string)recommendedActionValue5);
                                                            healthErrorInstance3.RecommendedAction = recommendedActionInstance5;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue5 = healthErrorsValue2["creationTimeUtc"];
                                                        if (creationTimeUtcValue5 != null && creationTimeUtcValue5.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance5 = ((DateTime)creationTimeUtcValue5);
                                                            healthErrorInstance3.CreationTimeUtc = creationTimeUtcInstance5;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue5 = healthErrorsValue2["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue5 != null && recoveryProviderErrorMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance5 = ((string)recoveryProviderErrorMessageValue5);
                                                            healthErrorInstance3.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance5;
                                                        }
                                                        
                                                        JToken entityIdValue5 = healthErrorsValue2["entityId"];
                                                        if (entityIdValue5 != null && entityIdValue5.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance5 = ((string)entityIdValue5);
                                                            healthErrorInstance3.EntityId = entityIdInstance5;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray3 = healthErrorsValue2["innerHealthErrors"];
                                                        if (innerHealthErrorsArray3 != null && innerHealthErrorsArray3.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue3 in ((JArray)innerHealthErrorsArray3))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance3 = new InnerHealthError();
                                                                healthErrorInstance3.InnerHealthErrors.Add(innerHealthErrorInstance3);
                                                                
                                                                JToken errorSourceValue6 = innerHealthErrorsValue3["errorSource"];
                                                                if (errorSourceValue6 != null && errorSourceValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance6 = ((string)errorSourceValue6);
                                                                    innerHealthErrorInstance3.ErrorSource = errorSourceInstance6;
                                                                }
                                                                
                                                                JToken errorTypeValue6 = innerHealthErrorsValue3["errorType"];
                                                                if (errorTypeValue6 != null && errorTypeValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance6 = ((string)errorTypeValue6);
                                                                    innerHealthErrorInstance3.ErrorType = errorTypeInstance6;
                                                                }
                                                                
                                                                JToken errorLevelValue6 = innerHealthErrorsValue3["errorLevel"];
                                                                if (errorLevelValue6 != null && errorLevelValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance6 = ((string)errorLevelValue6);
                                                                    innerHealthErrorInstance3.ErrorLevel = errorLevelInstance6;
                                                                }
                                                                
                                                                JToken errorCategoryValue6 = innerHealthErrorsValue3["errorCategory"];
                                                                if (errorCategoryValue6 != null && errorCategoryValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance6 = ((string)errorCategoryValue6);
                                                                    innerHealthErrorInstance3.ErrorCategory = errorCategoryInstance6;
                                                                }
                                                                
                                                                JToken errorCodeValue6 = innerHealthErrorsValue3["errorCode"];
                                                                if (errorCodeValue6 != null && errorCodeValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance6 = ((string)errorCodeValue6);
                                                                    innerHealthErrorInstance3.ErrorCode = errorCodeInstance6;
                                                                }
                                                                
                                                                JToken errorMessageValue6 = innerHealthErrorsValue3["errorMessage"];
                                                                if (errorMessageValue6 != null && errorMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance6 = ((string)errorMessageValue6);
                                                                    innerHealthErrorInstance3.ErrorMessage = errorMessageInstance6;
                                                                }
                                                                
                                                                JToken summaryMessageValue6 = innerHealthErrorsValue3["summaryMessage"];
                                                                if (summaryMessageValue6 != null && summaryMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance6 = ((string)summaryMessageValue6);
                                                                    innerHealthErrorInstance3.SummaryMessage = summaryMessageInstance6;
                                                                }
                                                                
                                                                JToken possibleCausesValue6 = innerHealthErrorsValue3["possibleCauses"];
                                                                if (possibleCausesValue6 != null && possibleCausesValue6.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance6 = ((string)possibleCausesValue6);
                                                                    innerHealthErrorInstance3.PossibleCauses = possibleCausesInstance6;
                                                                }
                                                                
                                                                JToken recommendedActionValue6 = innerHealthErrorsValue3["recommendedAction"];
                                                                if (recommendedActionValue6 != null && recommendedActionValue6.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance6 = ((string)recommendedActionValue6);
                                                                    innerHealthErrorInstance3.RecommendedAction = recommendedActionInstance6;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue6 = innerHealthErrorsValue3["creationTimeUtc"];
                                                                if (creationTimeUtcValue6 != null && creationTimeUtcValue6.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance6 = ((DateTime)creationTimeUtcValue6);
                                                                    innerHealthErrorInstance3.CreationTimeUtc = creationTimeUtcInstance6;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue6 = innerHealthErrorsValue3["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue6 != null && recoveryProviderErrorMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance6 = ((string)recoveryProviderErrorMessageValue6);
                                                                    innerHealthErrorInstance3.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance6;
                                                                }
                                                                
                                                                JToken entityIdValue6 = innerHealthErrorsValue3["entityId"];
                                                                if (entityIdValue6 != null && entityIdValue6.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance6 = ((string)entityIdValue6);
                                                                    innerHealthErrorInstance3.EntityId = entityIdInstance6;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken diskCountValue = masterTargetServersValue["diskCount"];
                                                if (diskCountValue != null && diskCountValue.Type != JTokenType.Null)
                                                {
                                                    int diskCountInstance = ((int)diskCountValue);
                                                    masterTargetServerInstance.DiskCount = diskCountInstance;
                                                }
                                                
                                                JToken osVersionValue2 = masterTargetServersValue["osVersion"];
                                                if (osVersionValue2 != null && osVersionValue2.Type != JTokenType.Null)
                                                {
                                                    string osVersionInstance2 = ((string)osVersionValue2);
                                                    masterTargetServerInstance.OsVersion = osVersionInstance2;
                                                }
                                                
                                                JToken agentExpiryDateValue2 = masterTargetServersValue["agentExpiryDate"];
                                                if (agentExpiryDateValue2 != null && agentExpiryDateValue2.Type != JTokenType.Null)
                                                {
                                                    DateTime agentExpiryDateInstance2 = ((DateTime)agentExpiryDateValue2);
                                                    masterTargetServerInstance.AgentExpiryDate = agentExpiryDateInstance2;
                                                }
                                                
                                                JToken marsAgentVersionValue = masterTargetServersValue["marsAgentVersion"];
                                                if (marsAgentVersionValue != null && marsAgentVersionValue.Type != JTokenType.Null)
                                                {
                                                    string marsAgentVersionInstance = ((string)marsAgentVersionValue);
                                                    masterTargetServerInstance.MarsAgentVersion = marsAgentVersionInstance;
                                                }
                                                
                                                JToken marsAgentExpiryDateValue = masterTargetServersValue["marsAgentExpiryDate"];
                                                if (marsAgentExpiryDateValue != null && marsAgentExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime marsAgentExpiryDateInstance = ((DateTime)marsAgentExpiryDateValue);
                                                    masterTargetServerInstance.MarsAgentExpiryDate = marsAgentExpiryDateInstance;
                                                }
                                                
                                                JToken agentVersionDetailsValue2 = masterTargetServersValue["agentVersionDetails"];
                                                if (agentVersionDetailsValue2 != null && agentVersionDetailsValue2.Type != JTokenType.Null)
                                                {
                                                    VersionDetails agentVersionDetailsInstance2 = new VersionDetails();
                                                    masterTargetServerInstance.AgentVersionDetails = agentVersionDetailsInstance2;
                                                    
                                                    JToken versionValue3 = agentVersionDetailsValue2["version"];
                                                    if (versionValue3 != null && versionValue3.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance3 = ((string)versionValue3);
                                                        agentVersionDetailsInstance2.Version = versionInstance3;
                                                    }
                                                    
                                                    JToken expiryDateValue2 = agentVersionDetailsValue2["expiryDate"];
                                                    if (expiryDateValue2 != null && expiryDateValue2.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance2 = ((DateTime)expiryDateValue2);
                                                        agentVersionDetailsInstance2.ExpiryDate = expiryDateInstance2;
                                                    }
                                                    
                                                    JToken statusValue2 = agentVersionDetailsValue2["status"];
                                                    if (statusValue2 != null && statusValue2.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance2 = ((string)statusValue2);
                                                        agentVersionDetailsInstance2.Status = statusInstance2;
                                                    }
                                                }
                                                
                                                JToken marsAgentVersionDetailsValue = masterTargetServersValue["marsAgentVersionDetails"];
                                                if (marsAgentVersionDetailsValue != null && marsAgentVersionDetailsValue.Type != JTokenType.Null)
                                                {
                                                    VersionDetails marsAgentVersionDetailsInstance = new VersionDetails();
                                                    masterTargetServerInstance.MarsAgentVersionDetails = marsAgentVersionDetailsInstance;
                                                    
                                                    JToken versionValue4 = marsAgentVersionDetailsValue["version"];
                                                    if (versionValue4 != null && versionValue4.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance4 = ((string)versionValue4);
                                                        marsAgentVersionDetailsInstance.Version = versionInstance4;
                                                    }
                                                    
                                                    JToken expiryDateValue3 = marsAgentVersionDetailsValue["expiryDate"];
                                                    if (expiryDateValue3 != null && expiryDateValue3.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance3 = ((DateTime)expiryDateValue3);
                                                        marsAgentVersionDetailsInstance.ExpiryDate = expiryDateInstance3;
                                                    }
                                                    
                                                    JToken statusValue3 = marsAgentVersionDetailsValue["status"];
                                                    if (statusValue3 != null && statusValue3.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance3 = ((string)statusValue3);
                                                        marsAgentVersionDetailsInstance.Status = statusInstance3;
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken runAsAccountsArray = customDetailsValue["runAsAccounts"];
                                        if (runAsAccountsArray != null && runAsAccountsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken runAsAccountsValue in ((JArray)runAsAccountsArray))
                                            {
                                                RunAsAccount runAsAccountInstance = new RunAsAccount();
                                                vMwareFabricDetailsInstance.RunAsAccounts.Add(runAsAccountInstance);
                                                
                                                JToken accountIdValue = runAsAccountsValue["accountId"];
                                                if (accountIdValue != null && accountIdValue.Type != JTokenType.Null)
                                                {
                                                    string accountIdInstance = ((string)accountIdValue);
                                                    runAsAccountInstance.AccountId = accountIdInstance;
                                                }
                                                
                                                JToken accountNameValue = runAsAccountsValue["accountName"];
                                                if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                                                {
                                                    string accountNameInstance = ((string)accountNameValue);
                                                    runAsAccountInstance.AccountName = accountNameInstance;
                                                }
                                            }
                                        }
                                        
                                        JToken replicationPairCountValue2 = customDetailsValue["replicationPairCount"];
                                        if (replicationPairCountValue2 != null && replicationPairCountValue2.Type != JTokenType.Null)
                                        {
                                            string replicationPairCountInstance2 = ((string)replicationPairCountValue2);
                                            vMwareFabricDetailsInstance.ReplicationPairCount = replicationPairCountInstance2;
                                        }
                                        
                                        JToken processServerCountValue = customDetailsValue["processServerCount"];
                                        if (processServerCountValue != null && processServerCountValue.Type != JTokenType.Null)
                                        {
                                            string processServerCountInstance = ((string)processServerCountValue);
                                            vMwareFabricDetailsInstance.ProcessServerCount = processServerCountInstance;
                                        }
                                        
                                        JToken agentCountValue = customDetailsValue["agentCount"];
                                        if (agentCountValue != null && agentCountValue.Type != JTokenType.Null)
                                        {
                                            string agentCountInstance = ((string)agentCountValue);
                                            vMwareFabricDetailsInstance.AgentCount = agentCountInstance;
                                        }
                                        
                                        JToken protectedServersValue = customDetailsValue["protectedServers"];
                                        if (protectedServersValue != null && protectedServersValue.Type != JTokenType.Null)
                                        {
                                            string protectedServersInstance = ((string)protectedServersValue);
                                            vMwareFabricDetailsInstance.ProtectedServers = protectedServersInstance;
                                        }
                                        
                                        JToken systemLoadValue2 = customDetailsValue["systemLoad"];
                                        if (systemLoadValue2 != null && systemLoadValue2.Type != JTokenType.Null)
                                        {
                                            string systemLoadInstance2 = ((string)systemLoadValue2);
                                            vMwareFabricDetailsInstance.SystemLoad = systemLoadInstance2;
                                        }
                                        
                                        JToken systemLoadStatusValue2 = customDetailsValue["systemLoadStatus"];
                                        if (systemLoadStatusValue2 != null && systemLoadStatusValue2.Type != JTokenType.Null)
                                        {
                                            string systemLoadStatusInstance2 = ((string)systemLoadStatusValue2);
                                            vMwareFabricDetailsInstance.SystemLoadStatus = systemLoadStatusInstance2;
                                        }
                                        
                                        JToken cpuLoadValue2 = customDetailsValue["cpuLoad"];
                                        if (cpuLoadValue2 != null && cpuLoadValue2.Type != JTokenType.Null)
                                        {
                                            string cpuLoadInstance2 = ((string)cpuLoadValue2);
                                            vMwareFabricDetailsInstance.CpuLoad = cpuLoadInstance2;
                                        }
                                        
                                        JToken cpuLoadStatusValue2 = customDetailsValue["cpuLoadStatus"];
                                        if (cpuLoadStatusValue2 != null && cpuLoadStatusValue2.Type != JTokenType.Null)
                                        {
                                            string cpuLoadStatusInstance2 = ((string)cpuLoadStatusValue2);
                                            vMwareFabricDetailsInstance.CpuLoadStatus = cpuLoadStatusInstance2;
                                        }
                                        
                                        JToken totalMemoryInBytesValue2 = customDetailsValue["totalMemoryInBytes"];
                                        if (totalMemoryInBytesValue2 != null && totalMemoryInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long totalMemoryInBytesInstance2 = ((long)totalMemoryInBytesValue2);
                                            vMwareFabricDetailsInstance.TotalMemoryInBytes = totalMemoryInBytesInstance2;
                                        }
                                        
                                        JToken availableMemoryInBytesValue2 = customDetailsValue["availableMemoryInBytes"];
                                        if (availableMemoryInBytesValue2 != null && availableMemoryInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long availableMemoryInBytesInstance2 = ((long)availableMemoryInBytesValue2);
                                            vMwareFabricDetailsInstance.AvailableMemoryInBytes = availableMemoryInBytesInstance2;
                                        }
                                        
                                        JToken memoryUsageStatusValue2 = customDetailsValue["memoryUsageStatus"];
                                        if (memoryUsageStatusValue2 != null && memoryUsageStatusValue2.Type != JTokenType.Null)
                                        {
                                            string memoryUsageStatusInstance2 = ((string)memoryUsageStatusValue2);
                                            vMwareFabricDetailsInstance.MemoryUsageStatus = memoryUsageStatusInstance2;
                                        }
                                        
                                        JToken totalSpaceInBytesValue2 = customDetailsValue["totalSpaceInBytes"];
                                        if (totalSpaceInBytesValue2 != null && totalSpaceInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long totalSpaceInBytesInstance2 = ((long)totalSpaceInBytesValue2);
                                            vMwareFabricDetailsInstance.TotalSpaceInBytes = totalSpaceInBytesInstance2;
                                        }
                                        
                                        JToken availableSpaceInBytesValue2 = customDetailsValue["availableSpaceInBytes"];
                                        if (availableSpaceInBytesValue2 != null && availableSpaceInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long availableSpaceInBytesInstance2 = ((long)availableSpaceInBytesValue2);
                                            vMwareFabricDetailsInstance.AvailableSpaceInBytes = availableSpaceInBytesInstance2;
                                        }
                                        
                                        JToken spaceUsageStatusValue2 = customDetailsValue["spaceUsageStatus"];
                                        if (spaceUsageStatusValue2 != null && spaceUsageStatusValue2.Type != JTokenType.Null)
                                        {
                                            string spaceUsageStatusInstance2 = ((string)spaceUsageStatusValue2);
                                            vMwareFabricDetailsInstance.SpaceUsageStatus = spaceUsageStatusInstance2;
                                        }
                                        
                                        JToken webLoadValue = customDetailsValue["webLoad"];
                                        if (webLoadValue != null && webLoadValue.Type != JTokenType.Null)
                                        {
                                            string webLoadInstance = ((string)webLoadValue);
                                            vMwareFabricDetailsInstance.WebLoad = webLoadInstance;
                                        }
                                        
                                        JToken webLoadStatusValue = customDetailsValue["webLoadStatus"];
                                        if (webLoadStatusValue != null && webLoadStatusValue.Type != JTokenType.Null)
                                        {
                                            string webLoadStatusInstance = ((string)webLoadStatusValue);
                                            vMwareFabricDetailsInstance.WebLoadStatus = webLoadStatusInstance;
                                        }
                                        
                                        JToken databaseServerLoadValue = customDetailsValue["databaseServerLoad"];
                                        if (databaseServerLoadValue != null && databaseServerLoadValue.Type != JTokenType.Null)
                                        {
                                            string databaseServerLoadInstance = ((string)databaseServerLoadValue);
                                            vMwareFabricDetailsInstance.DatabaseServerLoad = databaseServerLoadInstance;
                                        }
                                        
                                        JToken databaseServerLoadStatusValue = customDetailsValue["databaseServerLoadStatus"];
                                        if (databaseServerLoadStatusValue != null && databaseServerLoadStatusValue.Type != JTokenType.Null)
                                        {
                                            string databaseServerLoadStatusInstance = ((string)databaseServerLoadStatusValue);
                                            vMwareFabricDetailsInstance.DatabaseServerLoadStatus = databaseServerLoadStatusInstance;
                                        }
                                        
                                        JToken csServiceStatusValue = customDetailsValue["csServiceStatus"];
                                        if (csServiceStatusValue != null && csServiceStatusValue.Type != JTokenType.Null)
                                        {
                                            string csServiceStatusInstance = ((string)csServiceStatusValue);
                                            vMwareFabricDetailsInstance.CsServiceStatus = csServiceStatusInstance;
                                        }
                                        
                                        JToken ipAddressValue3 = customDetailsValue["ipAddress"];
                                        if (ipAddressValue3 != null && ipAddressValue3.Type != JTokenType.Null)
                                        {
                                            string ipAddressInstance3 = ((string)ipAddressValue3);
                                            vMwareFabricDetailsInstance.IpAddress = ipAddressInstance3;
                                        }
                                        
                                        JToken agentVersionValue3 = customDetailsValue["agentVersion"];
                                        if (agentVersionValue3 != null && agentVersionValue3.Type != JTokenType.Null)
                                        {
                                            string agentVersionInstance3 = ((string)agentVersionValue3);
                                            vMwareFabricDetailsInstance.AgentVersion = agentVersionInstance3;
                                        }
                                        
                                        JToken hostNameValue = customDetailsValue["hostName"];
                                        if (hostNameValue != null && hostNameValue.Type != JTokenType.Null)
                                        {
                                            string hostNameInstance = ((string)hostNameValue);
                                            vMwareFabricDetailsInstance.HostName = hostNameInstance;
                                        }
                                        
                                        JToken lastHeartbeatValue3 = customDetailsValue["lastHeartbeat"];
                                        if (lastHeartbeatValue3 != null && lastHeartbeatValue3.Type != JTokenType.Null)
                                        {
                                            DateTime lastHeartbeatInstance3 = ((DateTime)lastHeartbeatValue3);
                                            vMwareFabricDetailsInstance.LastHeartbeat = lastHeartbeatInstance3;
                                        }
                                        
                                        JToken versionStatusValue3 = customDetailsValue["versionStatus"];
                                        if (versionStatusValue3 != null && versionStatusValue3.Type != JTokenType.Null)
                                        {
                                            string versionStatusInstance3 = ((string)versionStatusValue3);
                                            vMwareFabricDetailsInstance.VersionStatus = versionStatusInstance3;
                                        }
                                        
                                        JToken sslCertExpiryDateValue2 = customDetailsValue["sslCertExpiryDate"];
                                        if (sslCertExpiryDateValue2 != null && sslCertExpiryDateValue2.Type != JTokenType.Null)
                                        {
                                            DateTime sslCertExpiryDateInstance2 = ((DateTime)sslCertExpiryDateValue2);
                                            vMwareFabricDetailsInstance.SslCertExpiryDate = sslCertExpiryDateInstance2;
                                        }
                                        
                                        JToken sslCertExpiryRemainingDaysValue2 = customDetailsValue["sslCertExpiryRemainingDays"];
                                        if (sslCertExpiryRemainingDaysValue2 != null && sslCertExpiryRemainingDaysValue2.Type != JTokenType.Null)
                                        {
                                            int sslCertExpiryRemainingDaysInstance2 = ((int)sslCertExpiryRemainingDaysValue2);
                                            vMwareFabricDetailsInstance.SslCertExpiryRemainingDays = sslCertExpiryRemainingDaysInstance2;
                                        }
                                        
                                        JToken psTemplateVersionValue = customDetailsValue["psTemplateVersion"];
                                        if (psTemplateVersionValue != null && psTemplateVersionValue.Type != JTokenType.Null)
                                        {
                                            string psTemplateVersionInstance = ((string)psTemplateVersionValue);
                                            vMwareFabricDetailsInstance.PsTemplateVersion = psTemplateVersionInstance;
                                        }
                                        
                                        JToken agentExpiryDateValue3 = customDetailsValue["agentExpiryDate"];
                                        if (agentExpiryDateValue3 != null && agentExpiryDateValue3.Type != JTokenType.Null)
                                        {
                                            DateTime agentExpiryDateInstance3 = ((DateTime)agentExpiryDateValue3);
                                            vMwareFabricDetailsInstance.AgentExpiryDate = agentExpiryDateInstance3;
                                        }
                                        
                                        JToken agentVersionDetailsValue3 = customDetailsValue["agentVersionDetails"];
                                        if (agentVersionDetailsValue3 != null && agentVersionDetailsValue3.Type != JTokenType.Null)
                                        {
                                            VersionDetails agentVersionDetailsInstance3 = new VersionDetails();
                                            vMwareFabricDetailsInstance.AgentVersionDetails = agentVersionDetailsInstance3;
                                            
                                            JToken versionValue5 = agentVersionDetailsValue3["version"];
                                            if (versionValue5 != null && versionValue5.Type != JTokenType.Null)
                                            {
                                                string versionInstance5 = ((string)versionValue5);
                                                agentVersionDetailsInstance3.Version = versionInstance5;
                                            }
                                            
                                            JToken expiryDateValue4 = agentVersionDetailsValue3["expiryDate"];
                                            if (expiryDateValue4 != null && expiryDateValue4.Type != JTokenType.Null)
                                            {
                                                DateTime expiryDateInstance4 = ((DateTime)expiryDateValue4);
                                                agentVersionDetailsInstance3.ExpiryDate = expiryDateInstance4;
                                            }
                                            
                                            JToken statusValue4 = agentVersionDetailsValue3["status"];
                                            if (statusValue4 != null && statusValue4.Type != JTokenType.Null)
                                            {
                                                string statusInstance4 = ((string)statusValue4);
                                                agentVersionDetailsInstance3.Status = statusInstance4;
                                            }
                                        }
                                        
                                        JToken instanceTypeValue4 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue4 != null && instanceTypeValue4.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance4 = ((string)instanceTypeValue4);
                                            vMwareFabricDetailsInstance.InstanceType = instanceTypeInstance4;
                                        }
                                        propertiesInstance.CustomDetails = vMwareFabricDetailsInstance;
                                    }
                                    if (typeName == "VMwareV2")
                                    {
                                        VMwareV2FabricSpecificDetails vMwareV2FabricSpecificDetailsInstance = new VMwareV2FabricSpecificDetails();
                                        
                                        JToken vmwareSiteIdValue = customDetailsValue["vmwareSiteId"];
                                        if (vmwareSiteIdValue != null && vmwareSiteIdValue.Type != JTokenType.Null)
                                        {
                                            string vmwareSiteIdInstance = ((string)vmwareSiteIdValue);
                                            vMwareV2FabricSpecificDetailsInstance.VMwareSiteId = vmwareSiteIdInstance;
                                        }
                                        
                                        JToken migrationSolutionIdValue = customDetailsValue["migrationSolutionId"];
                                        if (migrationSolutionIdValue != null && migrationSolutionIdValue.Type != JTokenType.Null)
                                        {
                                            string migrationSolutionIdInstance = ((string)migrationSolutionIdValue);
                                            vMwareV2FabricSpecificDetailsInstance.MigrationSolutionId = migrationSolutionIdInstance;
                                        }
                                        
                                        JToken serviceEndpointValue = customDetailsValue["serviceEndpoint"];
                                        if (serviceEndpointValue != null && serviceEndpointValue.Type != JTokenType.Null)
                                        {
                                            string serviceEndpointInstance = ((string)serviceEndpointValue);
                                            vMwareV2FabricSpecificDetailsInstance.ServiceEndpoint = serviceEndpointInstance;
                                        }
                                        
                                        JToken instanceTypeValue5 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue5 != null && instanceTypeValue5.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance5 = ((string)instanceTypeValue5);
                                            vMwareV2FabricSpecificDetailsInstance.InstanceType = instanceTypeInstance5;
                                        }
                                        propertiesInstance.CustomDetails = vMwareV2FabricSpecificDetailsInstance;
                                    }
                                }
                                
                                JToken healthErrorDetailsArray = propertiesValue["healthErrorDetails"];
                                if (healthErrorDetailsArray != null && healthErrorDetailsArray.Type != JTokenType.Null)
                                {
                                    foreach (JToken healthErrorDetailsValue in ((JArray)healthErrorDetailsArray))
                                    {
                                        HealthError healthErrorInstance4 = new HealthError();
                                        propertiesInstance.HealthErrorDetails.Add(healthErrorInstance4);
                                        
                                        JToken errorSourceValue7 = healthErrorDetailsValue["errorSource"];
                                        if (errorSourceValue7 != null && errorSourceValue7.Type != JTokenType.Null)
                                        {
                                            string errorSourceInstance7 = ((string)errorSourceValue7);
                                            healthErrorInstance4.ErrorSource = errorSourceInstance7;
                                        }
                                        
                                        JToken errorTypeValue7 = healthErrorDetailsValue["errorType"];
                                        if (errorTypeValue7 != null && errorTypeValue7.Type != JTokenType.Null)
                                        {
                                            string errorTypeInstance7 = ((string)errorTypeValue7);
                                            healthErrorInstance4.ErrorType = errorTypeInstance7;
                                        }
                                        
                                        JToken errorLevelValue7 = healthErrorDetailsValue["errorLevel"];
                                        if (errorLevelValue7 != null && errorLevelValue7.Type != JTokenType.Null)
                                        {
                                            string errorLevelInstance7 = ((string)errorLevelValue7);
                                            healthErrorInstance4.ErrorLevel = errorLevelInstance7;
                                        }
                                        
                                        JToken errorCategoryValue7 = healthErrorDetailsValue["errorCategory"];
                                        if (errorCategoryValue7 != null && errorCategoryValue7.Type != JTokenType.Null)
                                        {
                                            string errorCategoryInstance7 = ((string)errorCategoryValue7);
                                            healthErrorInstance4.ErrorCategory = errorCategoryInstance7;
                                        }
                                        
                                        JToken errorCodeValue7 = healthErrorDetailsValue["errorCode"];
                                        if (errorCodeValue7 != null && errorCodeValue7.Type != JTokenType.Null)
                                        {
                                            string errorCodeInstance7 = ((string)errorCodeValue7);
                                            healthErrorInstance4.ErrorCode = errorCodeInstance7;
                                        }
                                        
                                        JToken errorMessageValue7 = healthErrorDetailsValue["errorMessage"];
                                        if (errorMessageValue7 != null && errorMessageValue7.Type != JTokenType.Null)
                                        {
                                            string errorMessageInstance7 = ((string)errorMessageValue7);
                                            healthErrorInstance4.ErrorMessage = errorMessageInstance7;
                                        }
                                        
                                        JToken summaryMessageValue7 = healthErrorDetailsValue["summaryMessage"];
                                        if (summaryMessageValue7 != null && summaryMessageValue7.Type != JTokenType.Null)
                                        {
                                            string summaryMessageInstance7 = ((string)summaryMessageValue7);
                                            healthErrorInstance4.SummaryMessage = summaryMessageInstance7;
                                        }
                                        
                                        JToken possibleCausesValue7 = healthErrorDetailsValue["possibleCauses"];
                                        if (possibleCausesValue7 != null && possibleCausesValue7.Type != JTokenType.Null)
                                        {
                                            string possibleCausesInstance7 = ((string)possibleCausesValue7);
                                            healthErrorInstance4.PossibleCauses = possibleCausesInstance7;
                                        }
                                        
                                        JToken recommendedActionValue7 = healthErrorDetailsValue["recommendedAction"];
                                        if (recommendedActionValue7 != null && recommendedActionValue7.Type != JTokenType.Null)
                                        {
                                            string recommendedActionInstance7 = ((string)recommendedActionValue7);
                                            healthErrorInstance4.RecommendedAction = recommendedActionInstance7;
                                        }
                                        
                                        JToken creationTimeUtcValue7 = healthErrorDetailsValue["creationTimeUtc"];
                                        if (creationTimeUtcValue7 != null && creationTimeUtcValue7.Type != JTokenType.Null)
                                        {
                                            DateTime creationTimeUtcInstance7 = ((DateTime)creationTimeUtcValue7);
                                            healthErrorInstance4.CreationTimeUtc = creationTimeUtcInstance7;
                                        }
                                        
                                        JToken recoveryProviderErrorMessageValue7 = healthErrorDetailsValue["recoveryProviderErrorMessage"];
                                        if (recoveryProviderErrorMessageValue7 != null && recoveryProviderErrorMessageValue7.Type != JTokenType.Null)
                                        {
                                            string recoveryProviderErrorMessageInstance7 = ((string)recoveryProviderErrorMessageValue7);
                                            healthErrorInstance4.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance7;
                                        }
                                        
                                        JToken entityIdValue7 = healthErrorDetailsValue["entityId"];
                                        if (entityIdValue7 != null && entityIdValue7.Type != JTokenType.Null)
                                        {
                                            string entityIdInstance7 = ((string)entityIdValue7);
                                            healthErrorInstance4.EntityId = entityIdInstance7;
                                        }
                                        
                                        JToken innerHealthErrorsArray4 = healthErrorDetailsValue["innerHealthErrors"];
                                        if (innerHealthErrorsArray4 != null && innerHealthErrorsArray4.Type != JTokenType.Null)
                                        {
                                            foreach (JToken innerHealthErrorsValue4 in ((JArray)innerHealthErrorsArray4))
                                            {
                                                InnerHealthError innerHealthErrorInstance4 = new InnerHealthError();
                                                healthErrorInstance4.InnerHealthErrors.Add(innerHealthErrorInstance4);
                                                
                                                JToken errorSourceValue8 = innerHealthErrorsValue4["errorSource"];
                                                if (errorSourceValue8 != null && errorSourceValue8.Type != JTokenType.Null)
                                                {
                                                    string errorSourceInstance8 = ((string)errorSourceValue8);
                                                    innerHealthErrorInstance4.ErrorSource = errorSourceInstance8;
                                                }
                                                
                                                JToken errorTypeValue8 = innerHealthErrorsValue4["errorType"];
                                                if (errorTypeValue8 != null && errorTypeValue8.Type != JTokenType.Null)
                                                {
                                                    string errorTypeInstance8 = ((string)errorTypeValue8);
                                                    innerHealthErrorInstance4.ErrorType = errorTypeInstance8;
                                                }
                                                
                                                JToken errorLevelValue8 = innerHealthErrorsValue4["errorLevel"];
                                                if (errorLevelValue8 != null && errorLevelValue8.Type != JTokenType.Null)
                                                {
                                                    string errorLevelInstance8 = ((string)errorLevelValue8);
                                                    innerHealthErrorInstance4.ErrorLevel = errorLevelInstance8;
                                                }
                                                
                                                JToken errorCategoryValue8 = innerHealthErrorsValue4["errorCategory"];
                                                if (errorCategoryValue8 != null && errorCategoryValue8.Type != JTokenType.Null)
                                                {
                                                    string errorCategoryInstance8 = ((string)errorCategoryValue8);
                                                    innerHealthErrorInstance4.ErrorCategory = errorCategoryInstance8;
                                                }
                                                
                                                JToken errorCodeValue8 = innerHealthErrorsValue4["errorCode"];
                                                if (errorCodeValue8 != null && errorCodeValue8.Type != JTokenType.Null)
                                                {
                                                    string errorCodeInstance8 = ((string)errorCodeValue8);
                                                    innerHealthErrorInstance4.ErrorCode = errorCodeInstance8;
                                                }
                                                
                                                JToken errorMessageValue8 = innerHealthErrorsValue4["errorMessage"];
                                                if (errorMessageValue8 != null && errorMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string errorMessageInstance8 = ((string)errorMessageValue8);
                                                    innerHealthErrorInstance4.ErrorMessage = errorMessageInstance8;
                                                }
                                                
                                                JToken summaryMessageValue8 = innerHealthErrorsValue4["summaryMessage"];
                                                if (summaryMessageValue8 != null && summaryMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string summaryMessageInstance8 = ((string)summaryMessageValue8);
                                                    innerHealthErrorInstance4.SummaryMessage = summaryMessageInstance8;
                                                }
                                                
                                                JToken possibleCausesValue8 = innerHealthErrorsValue4["possibleCauses"];
                                                if (possibleCausesValue8 != null && possibleCausesValue8.Type != JTokenType.Null)
                                                {
                                                    string possibleCausesInstance8 = ((string)possibleCausesValue8);
                                                    innerHealthErrorInstance4.PossibleCauses = possibleCausesInstance8;
                                                }
                                                
                                                JToken recommendedActionValue8 = innerHealthErrorsValue4["recommendedAction"];
                                                if (recommendedActionValue8 != null && recommendedActionValue8.Type != JTokenType.Null)
                                                {
                                                    string recommendedActionInstance8 = ((string)recommendedActionValue8);
                                                    innerHealthErrorInstance4.RecommendedAction = recommendedActionInstance8;
                                                }
                                                
                                                JToken creationTimeUtcValue8 = innerHealthErrorsValue4["creationTimeUtc"];
                                                if (creationTimeUtcValue8 != null && creationTimeUtcValue8.Type != JTokenType.Null)
                                                {
                                                    DateTime creationTimeUtcInstance8 = ((DateTime)creationTimeUtcValue8);
                                                    innerHealthErrorInstance4.CreationTimeUtc = creationTimeUtcInstance8;
                                                }
                                                
                                                JToken recoveryProviderErrorMessageValue8 = innerHealthErrorsValue4["recoveryProviderErrorMessage"];
                                                if (recoveryProviderErrorMessageValue8 != null && recoveryProviderErrorMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string recoveryProviderErrorMessageInstance8 = ((string)recoveryProviderErrorMessageValue8);
                                                    innerHealthErrorInstance4.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance8;
                                                }
                                                
                                                JToken entityIdValue8 = innerHealthErrorsValue4["entityId"];
                                                if (entityIdValue8 != null && entityIdValue8.Type != JTokenType.Null)
                                                {
                                                    string entityIdInstance8 = ((string)entityIdValue8);
                                                    innerHealthErrorInstance4.EntityId = entityIdInstance8;
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                JToken healthValue = propertiesValue["health"];
                                if (healthValue != null && healthValue.Type != JTokenType.Null)
                                {
                                    string healthInstance = ((string)healthValue);
                                    propertiesInstance.Health = healthInstance;
                                }
                            }
                            
                            JToken idValue3 = responseDoc["id"];
                            if (idValue3 != null && idValue3.Type != JTokenType.Null)
                            {
                                string idInstance3 = ((string)idValue3);
                                fabricInstance.Id = idInstance3;
                            }
                            
                            JToken nameValue2 = responseDoc["name"];
                            if (nameValue2 != null && nameValue2.Type != JTokenType.Null)
                            {
                                string nameInstance2 = ((string)nameValue2);
                                fabricInstance.Name = nameInstance2;
                            }
                            
                            JToken typeValue2 = responseDoc["type"];
                            if (typeValue2 != null && typeValue2.Type != JTokenType.Null)
                            {
                                string typeInstance2 = ((string)typeValue2);
                                fabricInstance.Type = typeInstance2;
                            }
                            
                            JToken locationValue2 = responseDoc["location"];
                            if (locationValue2 != null && locationValue2.Type != JTokenType.Null)
                            {
                                string locationInstance2 = ((string)locationValue2);
                                fabricInstance.Location = locationInstance2;
                            }
                            
                            JToken tagsSequenceElement = ((JToken)responseDoc["tags"]);
                            if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)
                            {
                                foreach (JProperty property in tagsSequenceElement)
                                {
                                    string tagsKey = ((string)property.Name);
                                    string tagsValue = ((string)property.Value);
                                    fabricInstance.Tags.Add(tagsKey, tagsValue);
                                }
                            }
                            
                            JToken locationValue3 = responseDoc["Location"];
                            if (locationValue3 != null && locationValue3.Type != JTokenType.Null)
                            {
                                string locationInstance3 = ((string)locationValue3);
                                result.Location = locationInstance3;
                            }
                            
                            JToken retryAfterValue = responseDoc["RetryAfter"];
                            if (retryAfterValue != null && retryAfterValue.Type != JTokenType.Null)
                            {
                                int retryAfterInstance = ((int)retryAfterValue);
                                result.RetryAfter = retryAfterInstance;
                            }
                            
                            JToken asyncOperationValue = responseDoc["AsyncOperation"];
                            if (asyncOperationValue != null && asyncOperationValue.Type != JTokenType.Null)
                            {
                                string asyncOperationInstance = ((string)asyncOperationValue);
                                result.AsyncOperation = asyncOperationInstance;
                            }
                            
                            JToken statusValue5 = responseDoc["Status"];
                            if (statusValue5 != null && statusValue5.Type != JTokenType.Null)
                            {
                                OperationStatus statusInstance5 = ((OperationStatus)Enum.Parse(typeof(OperationStatus), ((string)statusValue5), true));
                                result.Status = statusInstance5;
                            }
                            
                            JToken cultureValue = responseDoc["Culture"];
                            if (cultureValue != null && cultureValue.Type != JTokenType.Null)
                            {
                                string cultureInstance = ((string)cultureValue);
                                result.Culture = cultureInstance;
                            }
                            
                            JToken clientRequestIdValue = responseDoc["ClientRequestId"];
                            if (clientRequestIdValue != null && clientRequestIdValue.Type != JTokenType.Null)
                            {
                                string clientRequestIdInstance = ((string)clientRequestIdValue);
                                result.ClientRequestId = clientRequestIdInstance;
                            }
                            
                            JToken correlationRequestIdValue = responseDoc["CorrelationRequestId"];
                            if (correlationRequestIdValue != null && correlationRequestIdValue.Type != JTokenType.Null)
                            {
                                string correlationRequestIdInstance = ((string)correlationRequestIdValue);
                                result.CorrelationRequestId = correlationRequestIdInstance;
                            }
                            
                            JToken dateValue = responseDoc["Date"];
                            if (dateValue != null && dateValue.Type != JTokenType.Null)
                            {
                                string dateInstance = ((string)dateValue);
                                result.Date = dateInstance;
                            }
                            
                            JToken contentTypeValue = responseDoc["ContentType"];
                            if (contentTypeValue != null && contentTypeValue.Type != JTokenType.Null)
                            {
                                string contentTypeInstance = ((string)contentTypeValue);
                                result.ContentType = contentTypeInstance;
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    if (statusCode == HttpStatusCode.NoContent)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.Accepted)
                    {
                        result.Status = OperationStatus.InProgress;
                    }
                    if (statusCode == HttpStatusCode.OK)
                    {
                        result.Status = OperationStatus.Succeeded;
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// The Get Operation Status operation returns the status of the
        /// specified operation. After calling an asynchronous operation, you
        /// can call Get Operation Status to determine whether the operation
        /// has succeeded, failed, or is still in progress.
        /// </summary>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> GetMigrateToAadStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
        {
            // Validate
            if (operationStatusLink == null)
            {
                throw new ArgumentNullException("operationStatusLink");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("operationStatusLink", operationStatusLink);
                TracingAdapter.Enter(invocationId, this, "GetMigrateToAadStatusAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + operationStatusLink;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK || statusCode == HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new LongRunningOperationResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            JToken locationValue = responseDoc["Location"];
                            if (locationValue != null && locationValue.Type != JTokenType.Null)
                            {
                                string locationInstance = ((string)locationValue);
                                result.Location = locationInstance;
                            }
                            
                            JToken retryAfterValue = responseDoc["RetryAfter"];
                            if (retryAfterValue != null && retryAfterValue.Type != JTokenType.Null)
                            {
                                int retryAfterInstance = ((int)retryAfterValue);
                                result.RetryAfter = retryAfterInstance;
                            }
                            
                            JToken asyncOperationValue = responseDoc["AsyncOperation"];
                            if (asyncOperationValue != null && asyncOperationValue.Type != JTokenType.Null)
                            {
                                string asyncOperationInstance = ((string)asyncOperationValue);
                                result.AsyncOperation = asyncOperationInstance;
                            }
                            
                            JToken statusValue = responseDoc["Status"];
                            if (statusValue != null && statusValue.Type != JTokenType.Null)
                            {
                                OperationStatus statusInstance = ((OperationStatus)Enum.Parse(typeof(OperationStatus), ((string)statusValue), true));
                                result.Status = statusInstance;
                            }
                            
                            JToken cultureValue = responseDoc["Culture"];
                            if (cultureValue != null && cultureValue.Type != JTokenType.Null)
                            {
                                string cultureInstance = ((string)cultureValue);
                                result.Culture = cultureInstance;
                            }
                            
                            JToken clientRequestIdValue = responseDoc["ClientRequestId"];
                            if (clientRequestIdValue != null && clientRequestIdValue.Type != JTokenType.Null)
                            {
                                string clientRequestIdInstance = ((string)clientRequestIdValue);
                                result.ClientRequestId = clientRequestIdInstance;
                            }
                            
                            JToken correlationRequestIdValue = responseDoc["CorrelationRequestId"];
                            if (correlationRequestIdValue != null && correlationRequestIdValue.Type != JTokenType.Null)
                            {
                                string correlationRequestIdInstance = ((string)correlationRequestIdValue);
                                result.CorrelationRequestId = correlationRequestIdInstance;
                            }
                            
                            JToken dateValue = responseDoc["Date"];
                            if (dateValue != null && dateValue.Type != JTokenType.Null)
                            {
                                string dateInstance = ((string)dateValue);
                                result.Date = dateInstance;
                            }
                            
                            JToken contentTypeValue = responseDoc["ContentType"];
                            if (contentTypeValue != null && contentTypeValue.Type != JTokenType.Null)
                            {
                                string contentTypeInstance = ((string)contentTypeValue);
                                result.ContentType = contentTypeInstance;
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    if (statusCode == HttpStatusCode.NoContent)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.Accepted)
                    {
                        result.Status = OperationStatus.InProgress;
                    }
                    if (statusCode == HttpStatusCode.OK)
                    {
                        result.Status = OperationStatus.Succeeded;
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// The Get Operation Status operation returns the status of the
        /// specified operation. After calling an asynchronous operation, you
        /// can call Get Operation Status to determine whether the operation
        /// has succeeded, failed, or is still in progress.
        /// </summary>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> GetPurgeStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
        {
            // Validate
            if (operationStatusLink == null)
            {
                throw new ArgumentNullException("operationStatusLink");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("operationStatusLink", operationStatusLink);
                TracingAdapter.Enter(invocationId, this, "GetPurgeStatusAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + operationStatusLink;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.Accepted && statusCode != HttpStatusCode.NoContent)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.Accepted || statusCode == HttpStatusCode.NoContent)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new LongRunningOperationResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            JToken locationValue = responseDoc["Location"];
                            if (locationValue != null && locationValue.Type != JTokenType.Null)
                            {
                                string locationInstance = ((string)locationValue);
                                result.Location = locationInstance;
                            }
                            
                            JToken retryAfterValue = responseDoc["RetryAfter"];
                            if (retryAfterValue != null && retryAfterValue.Type != JTokenType.Null)
                            {
                                int retryAfterInstance = ((int)retryAfterValue);
                                result.RetryAfter = retryAfterInstance;
                            }
                            
                            JToken asyncOperationValue = responseDoc["AsyncOperation"];
                            if (asyncOperationValue != null && asyncOperationValue.Type != JTokenType.Null)
                            {
                                string asyncOperationInstance = ((string)asyncOperationValue);
                                result.AsyncOperation = asyncOperationInstance;
                            }
                            
                            JToken statusValue = responseDoc["Status"];
                            if (statusValue != null && statusValue.Type != JTokenType.Null)
                            {
                                OperationStatus statusInstance = ((OperationStatus)Enum.Parse(typeof(OperationStatus), ((string)statusValue), true));
                                result.Status = statusInstance;
                            }
                            
                            JToken cultureValue = responseDoc["Culture"];
                            if (cultureValue != null && cultureValue.Type != JTokenType.Null)
                            {
                                string cultureInstance = ((string)cultureValue);
                                result.Culture = cultureInstance;
                            }
                            
                            JToken clientRequestIdValue = responseDoc["ClientRequestId"];
                            if (clientRequestIdValue != null && clientRequestIdValue.Type != JTokenType.Null)
                            {
                                string clientRequestIdInstance = ((string)clientRequestIdValue);
                                result.ClientRequestId = clientRequestIdInstance;
                            }
                            
                            JToken correlationRequestIdValue = responseDoc["CorrelationRequestId"];
                            if (correlationRequestIdValue != null && correlationRequestIdValue.Type != JTokenType.Null)
                            {
                                string correlationRequestIdInstance = ((string)correlationRequestIdValue);
                                result.CorrelationRequestId = correlationRequestIdInstance;
                            }
                            
                            JToken dateValue = responseDoc["Date"];
                            if (dateValue != null && dateValue.Type != JTokenType.Null)
                            {
                                string dateInstance = ((string)dateValue);
                                result.Date = dateInstance;
                            }
                            
                            JToken contentTypeValue = responseDoc["ContentType"];
                            if (contentTypeValue != null && contentTypeValue.Type != JTokenType.Null)
                            {
                                string contentTypeInstance = ((string)contentTypeValue);
                                result.ContentType = contentTypeInstance;
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    if (statusCode == HttpStatusCode.OK)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.Accepted)
                    {
                        result.Status = OperationStatus.InProgress;
                    }
                    if (statusCode == HttpStatusCode.NoContent)
                    {
                        result.Status = OperationStatus.Succeeded;
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// The Get Operation Status operation returns the status of the
        /// specified operation. After calling an asynchronous operation, you
        /// can call Get Operation Status to determine whether the operation
        /// has succeeded, failed, or is still in progress.
        /// </summary>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<ReassociateGatewayOperationResponse> GetReassociateGatewayStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
        {
            // Validate
            if (operationStatusLink == null)
            {
                throw new ArgumentNullException("operationStatusLink");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("operationStatusLink", operationStatusLink);
                TracingAdapter.Enter(invocationId, this, "GetReassociateGatewayStatusAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + operationStatusLink;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    ReassociateGatewayOperationResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK || statusCode == HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new ReassociateGatewayOperationResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            Fabric fabricInstance = new Fabric();
                            result.Fabric = fabricInstance;
                            
                            JToken propertiesValue = responseDoc["properties"];
                            if (propertiesValue != null && propertiesValue.Type != JTokenType.Null)
                            {
                                FabricProperties propertiesInstance = new FabricProperties();
                                fabricInstance.Properties = propertiesInstance;
                                
                                JToken friendlyNameValue = propertiesValue["friendlyName"];
                                if (friendlyNameValue != null && friendlyNameValue.Type != JTokenType.Null)
                                {
                                    string friendlyNameInstance = ((string)friendlyNameValue);
                                    propertiesInstance.FriendlyName = friendlyNameInstance;
                                }
                                
                                JToken internalIdentifierValue = propertiesValue["internalIdentifier"];
                                if (internalIdentifierValue != null && internalIdentifierValue.Type != JTokenType.Null)
                                {
                                    string internalIdentifierInstance = ((string)internalIdentifierValue);
                                    propertiesInstance.InternalIdentifier = internalIdentifierInstance;
                                }
                                
                                JToken bcdrStateValue = propertiesValue["bcdrState"];
                                if (bcdrStateValue != null && bcdrStateValue.Type != JTokenType.Null)
                                {
                                    string bcdrStateInstance = ((string)bcdrStateValue);
                                    propertiesInstance.BcdrState = bcdrStateInstance;
                                }
                                
                                JToken encryptionDetailsValue = propertiesValue["encryptionDetails"];
                                if (encryptionDetailsValue != null && encryptionDetailsValue.Type != JTokenType.Null)
                                {
                                    EncryptionDetails encryptionDetailsInstance = new EncryptionDetails();
                                    propertiesInstance.EncryptionDetails = encryptionDetailsInstance;
                                    
                                    JToken kekStateValue = encryptionDetailsValue["kekState"];
                                    if (kekStateValue != null && kekStateValue.Type != JTokenType.Null)
                                    {
                                        string kekStateInstance = ((string)kekStateValue);
                                        encryptionDetailsInstance.KekState = kekStateInstance;
                                    }
                                    
                                    JToken kekCertThumbprintValue = encryptionDetailsValue["kekCertThumbprint"];
                                    if (kekCertThumbprintValue != null && kekCertThumbprintValue.Type != JTokenType.Null)
                                    {
                                        string kekCertThumbprintInstance = ((string)kekCertThumbprintValue);
                                        encryptionDetailsInstance.KekCertThumbprint = kekCertThumbprintInstance;
                                    }
                                    
                                    JToken kekCertExpiryDateValue = encryptionDetailsValue["kekCertExpiryDate"];
                                    if (kekCertExpiryDateValue != null && kekCertExpiryDateValue.Type != JTokenType.Null)
                                    {
                                        DateTime kekCertExpiryDateInstance = ((DateTime)kekCertExpiryDateValue);
                                        encryptionDetailsInstance.KekCertExpiryDate = kekCertExpiryDateInstance;
                                    }
                                }
                                
                                JToken rolloverEncryptionDetailsValue = propertiesValue["rolloverEncryptionDetails"];
                                if (rolloverEncryptionDetailsValue != null && rolloverEncryptionDetailsValue.Type != JTokenType.Null)
                                {
                                    EncryptionDetails rolloverEncryptionDetailsInstance = new EncryptionDetails();
                                    propertiesInstance.RolloverEncryptionDetails = rolloverEncryptionDetailsInstance;
                                    
                                    JToken kekStateValue2 = rolloverEncryptionDetailsValue["kekState"];
                                    if (kekStateValue2 != null && kekStateValue2.Type != JTokenType.Null)
                                    {
                                        string kekStateInstance2 = ((string)kekStateValue2);
                                        rolloverEncryptionDetailsInstance.KekState = kekStateInstance2;
                                    }
                                    
                                    JToken kekCertThumbprintValue2 = rolloverEncryptionDetailsValue["kekCertThumbprint"];
                                    if (kekCertThumbprintValue2 != null && kekCertThumbprintValue2.Type != JTokenType.Null)
                                    {
                                        string kekCertThumbprintInstance2 = ((string)kekCertThumbprintValue2);
                                        rolloverEncryptionDetailsInstance.KekCertThumbprint = kekCertThumbprintInstance2;
                                    }
                                    
                                    JToken kekCertExpiryDateValue2 = rolloverEncryptionDetailsValue["kekCertExpiryDate"];
                                    if (kekCertExpiryDateValue2 != null && kekCertExpiryDateValue2.Type != JTokenType.Null)
                                    {
                                        DateTime kekCertExpiryDateInstance2 = ((DateTime)kekCertExpiryDateValue2);
                                        rolloverEncryptionDetailsInstance.KekCertExpiryDate = kekCertExpiryDateInstance2;
                                    }
                                }
                                
                                JToken customDetailsValue = propertiesValue["customDetails"];
                                if (customDetailsValue != null && customDetailsValue.Type != JTokenType.Null)
                                {
                                    string typeName = ((string)customDetailsValue["instanceType"]);
                                    if (typeName == "VMM")
                                    {
                                        VmmDetails vmmDetailsInstance = new VmmDetails();
                                        
                                        JToken instanceTypeValue = customDetailsValue["instanceType"];
                                        if (instanceTypeValue != null && instanceTypeValue.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance = ((string)instanceTypeValue);
                                            vmmDetailsInstance.InstanceType = instanceTypeInstance;
                                        }
                                        propertiesInstance.CustomDetails = vmmDetailsInstance;
                                    }
                                    if (typeName == "HyperVSite")
                                    {
                                        HyperVSiteDetails hyperVSiteDetailsInstance = new HyperVSiteDetails();
                                        
                                        JToken instanceTypeValue2 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue2 != null && instanceTypeValue2.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance2 = ((string)instanceTypeValue2);
                                            hyperVSiteDetailsInstance.InstanceType = instanceTypeInstance2;
                                        }
                                        propertiesInstance.CustomDetails = hyperVSiteDetailsInstance;
                                    }
                                    if (typeName == "Azure")
                                    {
                                        AzureFabricSpecificDetails azureFabricSpecificDetailsInstance = new AzureFabricSpecificDetails();
                                        
                                        JToken locationValue = customDetailsValue["location"];
                                        if (locationValue != null && locationValue.Type != JTokenType.Null)
                                        {
                                            string locationInstance = ((string)locationValue);
                                            azureFabricSpecificDetailsInstance.Location = locationInstance;
                                        }
                                        
                                        JToken containerIdsArray = customDetailsValue["containerIds"];
                                        if (containerIdsArray != null && containerIdsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken containerIdsValue in ((JArray)containerIdsArray))
                                            {
                                                azureFabricSpecificDetailsInstance.ContainerIds.Add(((string)containerIdsValue));
                                            }
                                        }
                                        
                                        JToken instanceTypeValue3 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue3 != null && instanceTypeValue3.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance3 = ((string)instanceTypeValue3);
                                            azureFabricSpecificDetailsInstance.InstanceType = instanceTypeInstance3;
                                        }
                                        propertiesInstance.CustomDetails = azureFabricSpecificDetailsInstance;
                                    }
                                    if (typeName == "VMware")
                                    {
                                        VMwareFabricDetails vMwareFabricDetailsInstance = new VMwareFabricDetails();
                                        
                                        JToken processServersArray = customDetailsValue["processServers"];
                                        if (processServersArray != null && processServersArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken processServersValue in ((JArray)processServersArray))
                                            {
                                                ProcessServer processServerInstance = new ProcessServer();
                                                vMwareFabricDetailsInstance.ProcessServers.Add(processServerInstance);
                                                
                                                JToken friendlyNameValue2 = processServersValue["friendlyName"];
                                                if (friendlyNameValue2 != null && friendlyNameValue2.Type != JTokenType.Null)
                                                {
                                                    string friendlyNameInstance2 = ((string)friendlyNameValue2);
                                                    processServerInstance.FriendlyName = friendlyNameInstance2;
                                                }
                                                
                                                JToken idValue = processServersValue["id"];
                                                if (idValue != null && idValue.Type != JTokenType.Null)
                                                {
                                                    string idInstance = ((string)idValue);
                                                    processServerInstance.Id = idInstance;
                                                }
                                                
                                                JToken ipAddressValue = processServersValue["ipAddress"];
                                                if (ipAddressValue != null && ipAddressValue.Type != JTokenType.Null)
                                                {
                                                    string ipAddressInstance = ((string)ipAddressValue);
                                                    processServerInstance.IpAddress = ipAddressInstance;
                                                }
                                                
                                                JToken osTypeValue = processServersValue["osType"];
                                                if (osTypeValue != null && osTypeValue.Type != JTokenType.Null)
                                                {
                                                    string osTypeInstance = ((string)osTypeValue);
                                                    processServerInstance.OsType = osTypeInstance;
                                                }
                                                
                                                JToken agentVersionValue = processServersValue["agentVersion"];
                                                if (agentVersionValue != null && agentVersionValue.Type != JTokenType.Null)
                                                {
                                                    string agentVersionInstance = ((string)agentVersionValue);
                                                    processServerInstance.AgentVersion = agentVersionInstance;
                                                }
                                                
                                                JToken lastHeartbeatValue = processServersValue["lastHeartbeat"];
                                                if (lastHeartbeatValue != null && lastHeartbeatValue.Type != JTokenType.Null)
                                                {
                                                    DateTime lastHeartbeatInstance = ((DateTime)lastHeartbeatValue);
                                                    processServerInstance.LastHeartbeat = lastHeartbeatInstance;
                                                }
                                                
                                                JToken versionStatusValue = processServersValue["versionStatus"];
                                                if (versionStatusValue != null && versionStatusValue.Type != JTokenType.Null)
                                                {
                                                    string versionStatusInstance = ((string)versionStatusValue);
                                                    processServerInstance.VersionStatus = versionStatusInstance;
                                                }
                                                
                                                JToken mobilityServiceUpdatesArray = processServersValue["mobilityServiceUpdates"];
                                                if (mobilityServiceUpdatesArray != null && mobilityServiceUpdatesArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken mobilityServiceUpdatesValue in ((JArray)mobilityServiceUpdatesArray))
                                                    {
                                                        MobilityServiceUpdate mobilityServiceUpdateInstance = new MobilityServiceUpdate();
                                                        processServerInstance.Updates.Add(mobilityServiceUpdateInstance);
                                                        
                                                        JToken versionValue = mobilityServiceUpdatesValue["version"];
                                                        if (versionValue != null && versionValue.Type != JTokenType.Null)
                                                        {
                                                            string versionInstance = ((string)versionValue);
                                                            mobilityServiceUpdateInstance.Version = versionInstance;
                                                        }
                                                        
                                                        JToken rebootStatusValue = mobilityServiceUpdatesValue["rebootStatus"];
                                                        if (rebootStatusValue != null && rebootStatusValue.Type != JTokenType.Null)
                                                        {
                                                            string rebootStatusInstance = ((string)rebootStatusValue);
                                                            mobilityServiceUpdateInstance.RebootStatus = rebootStatusInstance;
                                                        }
                                                        
                                                        JToken osTypeValue2 = mobilityServiceUpdatesValue["osType"];
                                                        if (osTypeValue2 != null && osTypeValue2.Type != JTokenType.Null)
                                                        {
                                                            string osTypeInstance2 = ((string)osTypeValue2);
                                                            mobilityServiceUpdateInstance.OsType = osTypeInstance2;
                                                        }
                                                    }
                                                }
                                                
                                                JToken hostIdValue = processServersValue["hostId"];
                                                if (hostIdValue != null && hostIdValue.Type != JTokenType.Null)
                                                {
                                                    string hostIdInstance = ((string)hostIdValue);
                                                    processServerInstance.HostId = hostIdInstance;
                                                }
                                                
                                                JToken machineCountValue = processServersValue["machineCount"];
                                                if (machineCountValue != null && machineCountValue.Type != JTokenType.Null)
                                                {
                                                    string machineCountInstance = ((string)machineCountValue);
                                                    processServerInstance.ServerCount = machineCountInstance;
                                                }
                                                
                                                JToken replicationPairCountValue = processServersValue["replicationPairCount"];
                                                if (replicationPairCountValue != null && replicationPairCountValue.Type != JTokenType.Null)
                                                {
                                                    string replicationPairCountInstance = ((string)replicationPairCountValue);
                                                    processServerInstance.ReplicationPairCount = replicationPairCountInstance;
                                                }
                                                
                                                JToken systemLoadValue = processServersValue["systemLoad"];
                                                if (systemLoadValue != null && systemLoadValue.Type != JTokenType.Null)
                                                {
                                                    string systemLoadInstance = ((string)systemLoadValue);
                                                    processServerInstance.SystemLoad = systemLoadInstance;
                                                }
                                                
                                                JToken systemLoadStatusValue = processServersValue["systemLoadStatus"];
                                                if (systemLoadStatusValue != null && systemLoadStatusValue.Type != JTokenType.Null)
                                                {
                                                    string systemLoadStatusInstance = ((string)systemLoadStatusValue);
                                                    processServerInstance.SystemLoadStatus = systemLoadStatusInstance;
                                                }
                                                
                                                JToken cpuLoadValue = processServersValue["cpuLoad"];
                                                if (cpuLoadValue != null && cpuLoadValue.Type != JTokenType.Null)
                                                {
                                                    string cpuLoadInstance = ((string)cpuLoadValue);
                                                    processServerInstance.CpuLoad = cpuLoadInstance;
                                                }
                                                
                                                JToken cpuLoadStatusValue = processServersValue["cpuLoadStatus"];
                                                if (cpuLoadStatusValue != null && cpuLoadStatusValue.Type != JTokenType.Null)
                                                {
                                                    string cpuLoadStatusInstance = ((string)cpuLoadStatusValue);
                                                    processServerInstance.CpuLoadStatus = cpuLoadStatusInstance;
                                                }
                                                
                                                JToken totalMemoryInBytesValue = processServersValue["totalMemoryInBytes"];
                                                if (totalMemoryInBytesValue != null && totalMemoryInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long totalMemoryInBytesInstance = ((long)totalMemoryInBytesValue);
                                                    processServerInstance.TotalMemoryInBytes = totalMemoryInBytesInstance;
                                                }
                                                
                                                JToken availableMemoryInBytesValue = processServersValue["availableMemoryInBytes"];
                                                if (availableMemoryInBytesValue != null && availableMemoryInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long availableMemoryInBytesInstance = ((long)availableMemoryInBytesValue);
                                                    processServerInstance.AvailableMemoryInBytes = availableMemoryInBytesInstance;
                                                }
                                                
                                                JToken memoryUsageStatusValue = processServersValue["memoryUsageStatus"];
                                                if (memoryUsageStatusValue != null && memoryUsageStatusValue.Type != JTokenType.Null)
                                                {
                                                    string memoryUsageStatusInstance = ((string)memoryUsageStatusValue);
                                                    processServerInstance.MemoryUsageStatus = memoryUsageStatusInstance;
                                                }
                                                
                                                JToken totalSpaceInBytesValue = processServersValue["totalSpaceInBytes"];
                                                if (totalSpaceInBytesValue != null && totalSpaceInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long totalSpaceInBytesInstance = ((long)totalSpaceInBytesValue);
                                                    processServerInstance.TotalSpaceInBytes = totalSpaceInBytesInstance;
                                                }
                                                
                                                JToken availableSpaceInBytesValue = processServersValue["availableSpaceInBytes"];
                                                if (availableSpaceInBytesValue != null && availableSpaceInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long availableSpaceInBytesInstance = ((long)availableSpaceInBytesValue);
                                                    processServerInstance.AvailableSpaceInBytes = availableSpaceInBytesInstance;
                                                }
                                                
                                                JToken spaceUsageStatusValue = processServersValue["spaceUsageStatus"];
                                                if (spaceUsageStatusValue != null && spaceUsageStatusValue.Type != JTokenType.Null)
                                                {
                                                    string spaceUsageStatusInstance = ((string)spaceUsageStatusValue);
                                                    processServerInstance.SpaceUsageStatus = spaceUsageStatusInstance;
                                                }
                                                
                                                JToken psServiceStatusValue = processServersValue["psServiceStatus"];
                                                if (psServiceStatusValue != null && psServiceStatusValue.Type != JTokenType.Null)
                                                {
                                                    string psServiceStatusInstance = ((string)psServiceStatusValue);
                                                    processServerInstance.PsServiceStatus = psServiceStatusInstance;
                                                }
                                                
                                                JToken sslCertExpiryDateValue = processServersValue["sslCertExpiryDate"];
                                                if (sslCertExpiryDateValue != null && sslCertExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime sslCertExpiryDateInstance = ((DateTime)sslCertExpiryDateValue);
                                                    processServerInstance.SslCertExpiryDate = sslCertExpiryDateInstance;
                                                }
                                                
                                                JToken sslCertExpiryRemainingDaysValue = processServersValue["sslCertExpiryRemainingDays"];
                                                if (sslCertExpiryRemainingDaysValue != null && sslCertExpiryRemainingDaysValue.Type != JTokenType.Null)
                                                {
                                                    int sslCertExpiryRemainingDaysInstance = ((int)sslCertExpiryRemainingDaysValue);
                                                    processServerInstance.SslCertExpiryRemainingDays = sslCertExpiryRemainingDaysInstance;
                                                }
                                                
                                                JToken osVersionValue = processServersValue["osVersion"];
                                                if (osVersionValue != null && osVersionValue.Type != JTokenType.Null)
                                                {
                                                    string osVersionInstance = ((string)osVersionValue);
                                                    processServerInstance.OsVersion = osVersionInstance;
                                                }
                                                
                                                JToken healthErrorsArray = processServersValue["healthErrors"];
                                                if (healthErrorsArray != null && healthErrorsArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken healthErrorsValue in ((JArray)healthErrorsArray))
                                                    {
                                                        HealthError healthErrorInstance = new HealthError();
                                                        processServerInstance.HealthErrors.Add(healthErrorInstance);
                                                        
                                                        JToken errorSourceValue = healthErrorsValue["errorSource"];
                                                        if (errorSourceValue != null && errorSourceValue.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance = ((string)errorSourceValue);
                                                            healthErrorInstance.ErrorSource = errorSourceInstance;
                                                        }
                                                        
                                                        JToken errorTypeValue = healthErrorsValue["errorType"];
                                                        if (errorTypeValue != null && errorTypeValue.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance = ((string)errorTypeValue);
                                                            healthErrorInstance.ErrorType = errorTypeInstance;
                                                        }
                                                        
                                                        JToken errorLevelValue = healthErrorsValue["errorLevel"];
                                                        if (errorLevelValue != null && errorLevelValue.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance = ((string)errorLevelValue);
                                                            healthErrorInstance.ErrorLevel = errorLevelInstance;
                                                        }
                                                        
                                                        JToken errorCategoryValue = healthErrorsValue["errorCategory"];
                                                        if (errorCategoryValue != null && errorCategoryValue.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance = ((string)errorCategoryValue);
                                                            healthErrorInstance.ErrorCategory = errorCategoryInstance;
                                                        }
                                                        
                                                        JToken errorCodeValue = healthErrorsValue["errorCode"];
                                                        if (errorCodeValue != null && errorCodeValue.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance = ((string)errorCodeValue);
                                                            healthErrorInstance.ErrorCode = errorCodeInstance;
                                                        }
                                                        
                                                        JToken errorMessageValue = healthErrorsValue["errorMessage"];
                                                        if (errorMessageValue != null && errorMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance = ((string)errorMessageValue);
                                                            healthErrorInstance.ErrorMessage = errorMessageInstance;
                                                        }
                                                        
                                                        JToken summaryMessageValue = healthErrorsValue["summaryMessage"];
                                                        if (summaryMessageValue != null && summaryMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance = ((string)summaryMessageValue);
                                                            healthErrorInstance.SummaryMessage = summaryMessageInstance;
                                                        }
                                                        
                                                        JToken possibleCausesValue = healthErrorsValue["possibleCauses"];
                                                        if (possibleCausesValue != null && possibleCausesValue.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance = ((string)possibleCausesValue);
                                                            healthErrorInstance.PossibleCauses = possibleCausesInstance;
                                                        }
                                                        
                                                        JToken recommendedActionValue = healthErrorsValue["recommendedAction"];
                                                        if (recommendedActionValue != null && recommendedActionValue.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance = ((string)recommendedActionValue);
                                                            healthErrorInstance.RecommendedAction = recommendedActionInstance;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue = healthErrorsValue["creationTimeUtc"];
                                                        if (creationTimeUtcValue != null && creationTimeUtcValue.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance = ((DateTime)creationTimeUtcValue);
                                                            healthErrorInstance.CreationTimeUtc = creationTimeUtcInstance;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue = healthErrorsValue["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue != null && recoveryProviderErrorMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance = ((string)recoveryProviderErrorMessageValue);
                                                            healthErrorInstance.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance;
                                                        }
                                                        
                                                        JToken entityIdValue = healthErrorsValue["entityId"];
                                                        if (entityIdValue != null && entityIdValue.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance = ((string)entityIdValue);
                                                            healthErrorInstance.EntityId = entityIdInstance;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray = healthErrorsValue["innerHealthErrors"];
                                                        if (innerHealthErrorsArray != null && innerHealthErrorsArray.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue in ((JArray)innerHealthErrorsArray))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance = new InnerHealthError();
                                                                healthErrorInstance.InnerHealthErrors.Add(innerHealthErrorInstance);
                                                                
                                                                JToken errorSourceValue2 = innerHealthErrorsValue["errorSource"];
                                                                if (errorSourceValue2 != null && errorSourceValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance2 = ((string)errorSourceValue2);
                                                                    innerHealthErrorInstance.ErrorSource = errorSourceInstance2;
                                                                }
                                                                
                                                                JToken errorTypeValue2 = innerHealthErrorsValue["errorType"];
                                                                if (errorTypeValue2 != null && errorTypeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance2 = ((string)errorTypeValue2);
                                                                    innerHealthErrorInstance.ErrorType = errorTypeInstance2;
                                                                }
                                                                
                                                                JToken errorLevelValue2 = innerHealthErrorsValue["errorLevel"];
                                                                if (errorLevelValue2 != null && errorLevelValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance2 = ((string)errorLevelValue2);
                                                                    innerHealthErrorInstance.ErrorLevel = errorLevelInstance2;
                                                                }
                                                                
                                                                JToken errorCategoryValue2 = innerHealthErrorsValue["errorCategory"];
                                                                if (errorCategoryValue2 != null && errorCategoryValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance2 = ((string)errorCategoryValue2);
                                                                    innerHealthErrorInstance.ErrorCategory = errorCategoryInstance2;
                                                                }
                                                                
                                                                JToken errorCodeValue2 = innerHealthErrorsValue["errorCode"];
                                                                if (errorCodeValue2 != null && errorCodeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance2 = ((string)errorCodeValue2);
                                                                    innerHealthErrorInstance.ErrorCode = errorCodeInstance2;
                                                                }
                                                                
                                                                JToken errorMessageValue2 = innerHealthErrorsValue["errorMessage"];
                                                                if (errorMessageValue2 != null && errorMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance2 = ((string)errorMessageValue2);
                                                                    innerHealthErrorInstance.ErrorMessage = errorMessageInstance2;
                                                                }
                                                                
                                                                JToken summaryMessageValue2 = innerHealthErrorsValue["summaryMessage"];
                                                                if (summaryMessageValue2 != null && summaryMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance2 = ((string)summaryMessageValue2);
                                                                    innerHealthErrorInstance.SummaryMessage = summaryMessageInstance2;
                                                                }
                                                                
                                                                JToken possibleCausesValue2 = innerHealthErrorsValue["possibleCauses"];
                                                                if (possibleCausesValue2 != null && possibleCausesValue2.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance2 = ((string)possibleCausesValue2);
                                                                    innerHealthErrorInstance.PossibleCauses = possibleCausesInstance2;
                                                                }
                                                                
                                                                JToken recommendedActionValue2 = innerHealthErrorsValue["recommendedAction"];
                                                                if (recommendedActionValue2 != null && recommendedActionValue2.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance2 = ((string)recommendedActionValue2);
                                                                    innerHealthErrorInstance.RecommendedAction = recommendedActionInstance2;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue2 = innerHealthErrorsValue["creationTimeUtc"];
                                                                if (creationTimeUtcValue2 != null && creationTimeUtcValue2.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance2 = ((DateTime)creationTimeUtcValue2);
                                                                    innerHealthErrorInstance.CreationTimeUtc = creationTimeUtcInstance2;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue2 = innerHealthErrorsValue["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue2 != null && recoveryProviderErrorMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance2 = ((string)recoveryProviderErrorMessageValue2);
                                                                    innerHealthErrorInstance.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance2;
                                                                }
                                                                
                                                                JToken entityIdValue2 = innerHealthErrorsValue["entityId"];
                                                                if (entityIdValue2 != null && entityIdValue2.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance2 = ((string)entityIdValue2);
                                                                    innerHealthErrorInstance.EntityId = entityIdInstance2;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken agentExpiryDateValue = processServersValue["agentExpiryDate"];
                                                if (agentExpiryDateValue != null && agentExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime agentExpiryDateInstance = ((DateTime)agentExpiryDateValue);
                                                    processServerInstance.AgentExpiryDate = agentExpiryDateInstance;
                                                }
                                                
                                                JToken agentVersionDetailsValue = processServersValue["agentVersionDetails"];
                                                if (agentVersionDetailsValue != null && agentVersionDetailsValue.Type != JTokenType.Null)
                                                {
                                                    VersionDetails agentVersionDetailsInstance = new VersionDetails();
                                                    processServerInstance.AgentVersionDetails = agentVersionDetailsInstance;
                                                    
                                                    JToken versionValue2 = agentVersionDetailsValue["version"];
                                                    if (versionValue2 != null && versionValue2.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance2 = ((string)versionValue2);
                                                        agentVersionDetailsInstance.Version = versionInstance2;
                                                    }
                                                    
                                                    JToken expiryDateValue = agentVersionDetailsValue["expiryDate"];
                                                    if (expiryDateValue != null && expiryDateValue.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance = ((DateTime)expiryDateValue);
                                                        agentVersionDetailsInstance.ExpiryDate = expiryDateInstance;
                                                    }
                                                    
                                                    JToken statusValue = agentVersionDetailsValue["status"];
                                                    if (statusValue != null && statusValue.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance = ((string)statusValue);
                                                        agentVersionDetailsInstance.Status = statusInstance;
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken masterTargetServersArray = customDetailsValue["masterTargetServers"];
                                        if (masterTargetServersArray != null && masterTargetServersArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken masterTargetServersValue in ((JArray)masterTargetServersArray))
                                            {
                                                MasterTargetServer masterTargetServerInstance = new MasterTargetServer();
                                                vMwareFabricDetailsInstance.MasterTargetServers.Add(masterTargetServerInstance);
                                                
                                                JToken idValue2 = masterTargetServersValue["id"];
                                                if (idValue2 != null && idValue2.Type != JTokenType.Null)
                                                {
                                                    string idInstance2 = ((string)idValue2);
                                                    masterTargetServerInstance.Id = idInstance2;
                                                }
                                                
                                                JToken ipAddressValue2 = masterTargetServersValue["ipAddress"];
                                                if (ipAddressValue2 != null && ipAddressValue2.Type != JTokenType.Null)
                                                {
                                                    string ipAddressInstance2 = ((string)ipAddressValue2);
                                                    masterTargetServerInstance.IpAddress = ipAddressInstance2;
                                                }
                                                
                                                JToken nameValue = masterTargetServersValue["name"];
                                                if (nameValue != null && nameValue.Type != JTokenType.Null)
                                                {
                                                    string nameInstance = ((string)nameValue);
                                                    masterTargetServerInstance.Name = nameInstance;
                                                }
                                                
                                                JToken osTypeValue3 = masterTargetServersValue["osType"];
                                                if (osTypeValue3 != null && osTypeValue3.Type != JTokenType.Null)
                                                {
                                                    string osTypeInstance3 = ((string)osTypeValue3);
                                                    masterTargetServerInstance.OsType = osTypeInstance3;
                                                }
                                                
                                                JToken agentVersionValue2 = masterTargetServersValue["agentVersion"];
                                                if (agentVersionValue2 != null && agentVersionValue2.Type != JTokenType.Null)
                                                {
                                                    string agentVersionInstance2 = ((string)agentVersionValue2);
                                                    masterTargetServerInstance.AgentVersion = agentVersionInstance2;
                                                }
                                                
                                                JToken lastHeartbeatValue2 = masterTargetServersValue["lastHeartbeat"];
                                                if (lastHeartbeatValue2 != null && lastHeartbeatValue2.Type != JTokenType.Null)
                                                {
                                                    DateTime lastHeartbeatInstance2 = ((DateTime)lastHeartbeatValue2);
                                                    masterTargetServerInstance.LastHeartbeat = lastHeartbeatInstance2;
                                                }
                                                
                                                JToken versionStatusValue2 = masterTargetServersValue["versionStatus"];
                                                if (versionStatusValue2 != null && versionStatusValue2.Type != JTokenType.Null)
                                                {
                                                    string versionStatusInstance2 = ((string)versionStatusValue2);
                                                    masterTargetServerInstance.VersionStatus = versionStatusInstance2;
                                                }
                                                
                                                JToken retentionVolumesArray = masterTargetServersValue["retentionVolumes"];
                                                if (retentionVolumesArray != null && retentionVolumesArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken retentionVolumesValue in ((JArray)retentionVolumesArray))
                                                    {
                                                        RetentionVolume retentionVolumeInstance = new RetentionVolume();
                                                        masterTargetServerInstance.RetentionVolumes.Add(retentionVolumeInstance);
                                                        
                                                        JToken volumeNameValue = retentionVolumesValue["volumeName"];
                                                        if (volumeNameValue != null && volumeNameValue.Type != JTokenType.Null)
                                                        {
                                                            string volumeNameInstance = ((string)volumeNameValue);
                                                            retentionVolumeInstance.VolumeName = volumeNameInstance;
                                                        }
                                                        
                                                        JToken capacityInBytesValue = retentionVolumesValue["capacityInBytes"];
                                                        if (capacityInBytesValue != null && capacityInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long capacityInBytesInstance = ((long)capacityInBytesValue);
                                                            retentionVolumeInstance.CapacityInBytes = capacityInBytesInstance;
                                                        }
                                                        
                                                        JToken freeSpaceInBytesValue = retentionVolumesValue["freeSpaceInBytes"];
                                                        if (freeSpaceInBytesValue != null && freeSpaceInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long freeSpaceInBytesInstance = ((long)freeSpaceInBytesValue);
                                                            retentionVolumeInstance.FreeSpaceInBytes = freeSpaceInBytesInstance;
                                                        }
                                                        
                                                        JToken thresholdPercentageValue = retentionVolumesValue["thresholdPercentage"];
                                                        if (thresholdPercentageValue != null && thresholdPercentageValue.Type != JTokenType.Null)
                                                        {
                                                            int thresholdPercentageInstance = ((int)thresholdPercentageValue);
                                                            retentionVolumeInstance.ThresholdPercentage = thresholdPercentageInstance;
                                                        }
                                                    }
                                                }
                                                
                                                JToken dataStoresArray = masterTargetServersValue["dataStores"];
                                                if (dataStoresArray != null && dataStoresArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken dataStoresValue in ((JArray)dataStoresArray))
                                                    {
                                                        DataStore dataStoreInstance = new DataStore();
                                                        masterTargetServerInstance.DataStores.Add(dataStoreInstance);
                                                        
                                                        JToken symbolicNameValue = dataStoresValue["symbolicName"];
                                                        if (symbolicNameValue != null && symbolicNameValue.Type != JTokenType.Null)
                                                        {
                                                            string symbolicNameInstance = ((string)symbolicNameValue);
                                                            dataStoreInstance.SymbolicName = symbolicNameInstance;
                                                        }
                                                        
                                                        JToken uuidValue = dataStoresValue["uuid"];
                                                        if (uuidValue != null && uuidValue.Type != JTokenType.Null)
                                                        {
                                                            string uuidInstance = ((string)uuidValue);
                                                            dataStoreInstance.Uuid = uuidInstance;
                                                        }
                                                        
                                                        JToken capacityValue = dataStoresValue["capacity"];
                                                        if (capacityValue != null && capacityValue.Type != JTokenType.Null)
                                                        {
                                                            string capacityInstance = ((string)capacityValue);
                                                            dataStoreInstance.Capacity = capacityInstance;
                                                        }
                                                        
                                                        JToken freeSpaceValue = dataStoresValue["freeSpace"];
                                                        if (freeSpaceValue != null && freeSpaceValue.Type != JTokenType.Null)
                                                        {
                                                            string freeSpaceInstance = ((string)freeSpaceValue);
                                                            dataStoreInstance.FreeSpace = freeSpaceInstance;
                                                        }
                                                        
                                                        JToken typeValue = dataStoresValue["type"];
                                                        if (typeValue != null && typeValue.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance = ((string)typeValue);
                                                            dataStoreInstance.Type = typeInstance;
                                                        }
                                                    }
                                                }
                                                
                                                JToken validationErrorsArray = masterTargetServersValue["validationErrors"];
                                                if (validationErrorsArray != null && validationErrorsArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken validationErrorsValue in ((JArray)validationErrorsArray))
                                                    {
                                                        HealthError healthErrorInstance2 = new HealthError();
                                                        masterTargetServerInstance.ValidationErrors.Add(healthErrorInstance2);
                                                        
                                                        JToken errorSourceValue3 = validationErrorsValue["errorSource"];
                                                        if (errorSourceValue3 != null && errorSourceValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance3 = ((string)errorSourceValue3);
                                                            healthErrorInstance2.ErrorSource = errorSourceInstance3;
                                                        }
                                                        
                                                        JToken errorTypeValue3 = validationErrorsValue["errorType"];
                                                        if (errorTypeValue3 != null && errorTypeValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance3 = ((string)errorTypeValue3);
                                                            healthErrorInstance2.ErrorType = errorTypeInstance3;
                                                        }
                                                        
                                                        JToken errorLevelValue3 = validationErrorsValue["errorLevel"];
                                                        if (errorLevelValue3 != null && errorLevelValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance3 = ((string)errorLevelValue3);
                                                            healthErrorInstance2.ErrorLevel = errorLevelInstance3;
                                                        }
                                                        
                                                        JToken errorCategoryValue3 = validationErrorsValue["errorCategory"];
                                                        if (errorCategoryValue3 != null && errorCategoryValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance3 = ((string)errorCategoryValue3);
                                                            healthErrorInstance2.ErrorCategory = errorCategoryInstance3;
                                                        }
                                                        
                                                        JToken errorCodeValue3 = validationErrorsValue["errorCode"];
                                                        if (errorCodeValue3 != null && errorCodeValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance3 = ((string)errorCodeValue3);
                                                            healthErrorInstance2.ErrorCode = errorCodeInstance3;
                                                        }
                                                        
                                                        JToken errorMessageValue3 = validationErrorsValue["errorMessage"];
                                                        if (errorMessageValue3 != null && errorMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance3 = ((string)errorMessageValue3);
                                                            healthErrorInstance2.ErrorMessage = errorMessageInstance3;
                                                        }
                                                        
                                                        JToken summaryMessageValue3 = validationErrorsValue["summaryMessage"];
                                                        if (summaryMessageValue3 != null && summaryMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance3 = ((string)summaryMessageValue3);
                                                            healthErrorInstance2.SummaryMessage = summaryMessageInstance3;
                                                        }
                                                        
                                                        JToken possibleCausesValue3 = validationErrorsValue["possibleCauses"];
                                                        if (possibleCausesValue3 != null && possibleCausesValue3.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance3 = ((string)possibleCausesValue3);
                                                            healthErrorInstance2.PossibleCauses = possibleCausesInstance3;
                                                        }
                                                        
                                                        JToken recommendedActionValue3 = validationErrorsValue["recommendedAction"];
                                                        if (recommendedActionValue3 != null && recommendedActionValue3.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance3 = ((string)recommendedActionValue3);
                                                            healthErrorInstance2.RecommendedAction = recommendedActionInstance3;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue3 = validationErrorsValue["creationTimeUtc"];
                                                        if (creationTimeUtcValue3 != null && creationTimeUtcValue3.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance3 = ((DateTime)creationTimeUtcValue3);
                                                            healthErrorInstance2.CreationTimeUtc = creationTimeUtcInstance3;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue3 = validationErrorsValue["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue3 != null && recoveryProviderErrorMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance3 = ((string)recoveryProviderErrorMessageValue3);
                                                            healthErrorInstance2.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance3;
                                                        }
                                                        
                                                        JToken entityIdValue3 = validationErrorsValue["entityId"];
                                                        if (entityIdValue3 != null && entityIdValue3.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance3 = ((string)entityIdValue3);
                                                            healthErrorInstance2.EntityId = entityIdInstance3;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray2 = validationErrorsValue["innerHealthErrors"];
                                                        if (innerHealthErrorsArray2 != null && innerHealthErrorsArray2.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue2 in ((JArray)innerHealthErrorsArray2))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance2 = new InnerHealthError();
                                                                healthErrorInstance2.InnerHealthErrors.Add(innerHealthErrorInstance2);
                                                                
                                                                JToken errorSourceValue4 = innerHealthErrorsValue2["errorSource"];
                                                                if (errorSourceValue4 != null && errorSourceValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance4 = ((string)errorSourceValue4);
                                                                    innerHealthErrorInstance2.ErrorSource = errorSourceInstance4;
                                                                }
                                                                
                                                                JToken errorTypeValue4 = innerHealthErrorsValue2["errorType"];
                                                                if (errorTypeValue4 != null && errorTypeValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance4 = ((string)errorTypeValue4);
                                                                    innerHealthErrorInstance2.ErrorType = errorTypeInstance4;
                                                                }
                                                                
                                                                JToken errorLevelValue4 = innerHealthErrorsValue2["errorLevel"];
                                                                if (errorLevelValue4 != null && errorLevelValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance4 = ((string)errorLevelValue4);
                                                                    innerHealthErrorInstance2.ErrorLevel = errorLevelInstance4;
                                                                }
                                                                
                                                                JToken errorCategoryValue4 = innerHealthErrorsValue2["errorCategory"];
                                                                if (errorCategoryValue4 != null && errorCategoryValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance4 = ((string)errorCategoryValue4);
                                                                    innerHealthErrorInstance2.ErrorCategory = errorCategoryInstance4;
                                                                }
                                                                
                                                                JToken errorCodeValue4 = innerHealthErrorsValue2["errorCode"];
                                                                if (errorCodeValue4 != null && errorCodeValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance4 = ((string)errorCodeValue4);
                                                                    innerHealthErrorInstance2.ErrorCode = errorCodeInstance4;
                                                                }
                                                                
                                                                JToken errorMessageValue4 = innerHealthErrorsValue2["errorMessage"];
                                                                if (errorMessageValue4 != null && errorMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance4 = ((string)errorMessageValue4);
                                                                    innerHealthErrorInstance2.ErrorMessage = errorMessageInstance4;
                                                                }
                                                                
                                                                JToken summaryMessageValue4 = innerHealthErrorsValue2["summaryMessage"];
                                                                if (summaryMessageValue4 != null && summaryMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance4 = ((string)summaryMessageValue4);
                                                                    innerHealthErrorInstance2.SummaryMessage = summaryMessageInstance4;
                                                                }
                                                                
                                                                JToken possibleCausesValue4 = innerHealthErrorsValue2["possibleCauses"];
                                                                if (possibleCausesValue4 != null && possibleCausesValue4.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance4 = ((string)possibleCausesValue4);
                                                                    innerHealthErrorInstance2.PossibleCauses = possibleCausesInstance4;
                                                                }
                                                                
                                                                JToken recommendedActionValue4 = innerHealthErrorsValue2["recommendedAction"];
                                                                if (recommendedActionValue4 != null && recommendedActionValue4.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance4 = ((string)recommendedActionValue4);
                                                                    innerHealthErrorInstance2.RecommendedAction = recommendedActionInstance4;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue4 = innerHealthErrorsValue2["creationTimeUtc"];
                                                                if (creationTimeUtcValue4 != null && creationTimeUtcValue4.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance4 = ((DateTime)creationTimeUtcValue4);
                                                                    innerHealthErrorInstance2.CreationTimeUtc = creationTimeUtcInstance4;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue4 = innerHealthErrorsValue2["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue4 != null && recoveryProviderErrorMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance4 = ((string)recoveryProviderErrorMessageValue4);
                                                                    innerHealthErrorInstance2.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance4;
                                                                }
                                                                
                                                                JToken entityIdValue4 = innerHealthErrorsValue2["entityId"];
                                                                if (entityIdValue4 != null && entityIdValue4.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance4 = ((string)entityIdValue4);
                                                                    innerHealthErrorInstance2.EntityId = entityIdInstance4;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken healthErrorsArray2 = masterTargetServersValue["healthErrors"];
                                                if (healthErrorsArray2 != null && healthErrorsArray2.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken healthErrorsValue2 in ((JArray)healthErrorsArray2))
                                                    {
                                                        HealthError healthErrorInstance3 = new HealthError();
                                                        masterTargetServerInstance.HealthErrors.Add(healthErrorInstance3);
                                                        
                                                        JToken errorSourceValue5 = healthErrorsValue2["errorSource"];
                                                        if (errorSourceValue5 != null && errorSourceValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance5 = ((string)errorSourceValue5);
                                                            healthErrorInstance3.ErrorSource = errorSourceInstance5;
                                                        }
                                                        
                                                        JToken errorTypeValue5 = healthErrorsValue2["errorType"];
                                                        if (errorTypeValue5 != null && errorTypeValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance5 = ((string)errorTypeValue5);
                                                            healthErrorInstance3.ErrorType = errorTypeInstance5;
                                                        }
                                                        
                                                        JToken errorLevelValue5 = healthErrorsValue2["errorLevel"];
                                                        if (errorLevelValue5 != null && errorLevelValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance5 = ((string)errorLevelValue5);
                                                            healthErrorInstance3.ErrorLevel = errorLevelInstance5;
                                                        }
                                                        
                                                        JToken errorCategoryValue5 = healthErrorsValue2["errorCategory"];
                                                        if (errorCategoryValue5 != null && errorCategoryValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance5 = ((string)errorCategoryValue5);
                                                            healthErrorInstance3.ErrorCategory = errorCategoryInstance5;
                                                        }
                                                        
                                                        JToken errorCodeValue5 = healthErrorsValue2["errorCode"];
                                                        if (errorCodeValue5 != null && errorCodeValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance5 = ((string)errorCodeValue5);
                                                            healthErrorInstance3.ErrorCode = errorCodeInstance5;
                                                        }
                                                        
                                                        JToken errorMessageValue5 = healthErrorsValue2["errorMessage"];
                                                        if (errorMessageValue5 != null && errorMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance5 = ((string)errorMessageValue5);
                                                            healthErrorInstance3.ErrorMessage = errorMessageInstance5;
                                                        }
                                                        
                                                        JToken summaryMessageValue5 = healthErrorsValue2["summaryMessage"];
                                                        if (summaryMessageValue5 != null && summaryMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance5 = ((string)summaryMessageValue5);
                                                            healthErrorInstance3.SummaryMessage = summaryMessageInstance5;
                                                        }
                                                        
                                                        JToken possibleCausesValue5 = healthErrorsValue2["possibleCauses"];
                                                        if (possibleCausesValue5 != null && possibleCausesValue5.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance5 = ((string)possibleCausesValue5);
                                                            healthErrorInstance3.PossibleCauses = possibleCausesInstance5;
                                                        }
                                                        
                                                        JToken recommendedActionValue5 = healthErrorsValue2["recommendedAction"];
                                                        if (recommendedActionValue5 != null && recommendedActionValue5.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance5 = ((string)recommendedActionValue5);
                                                            healthErrorInstance3.RecommendedAction = recommendedActionInstance5;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue5 = healthErrorsValue2["creationTimeUtc"];
                                                        if (creationTimeUtcValue5 != null && creationTimeUtcValue5.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance5 = ((DateTime)creationTimeUtcValue5);
                                                            healthErrorInstance3.CreationTimeUtc = creationTimeUtcInstance5;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue5 = healthErrorsValue2["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue5 != null && recoveryProviderErrorMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance5 = ((string)recoveryProviderErrorMessageValue5);
                                                            healthErrorInstance3.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance5;
                                                        }
                                                        
                                                        JToken entityIdValue5 = healthErrorsValue2["entityId"];
                                                        if (entityIdValue5 != null && entityIdValue5.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance5 = ((string)entityIdValue5);
                                                            healthErrorInstance3.EntityId = entityIdInstance5;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray3 = healthErrorsValue2["innerHealthErrors"];
                                                        if (innerHealthErrorsArray3 != null && innerHealthErrorsArray3.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue3 in ((JArray)innerHealthErrorsArray3))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance3 = new InnerHealthError();
                                                                healthErrorInstance3.InnerHealthErrors.Add(innerHealthErrorInstance3);
                                                                
                                                                JToken errorSourceValue6 = innerHealthErrorsValue3["errorSource"];
                                                                if (errorSourceValue6 != null && errorSourceValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance6 = ((string)errorSourceValue6);
                                                                    innerHealthErrorInstance3.ErrorSource = errorSourceInstance6;
                                                                }
                                                                
                                                                JToken errorTypeValue6 = innerHealthErrorsValue3["errorType"];
                                                                if (errorTypeValue6 != null && errorTypeValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance6 = ((string)errorTypeValue6);
                                                                    innerHealthErrorInstance3.ErrorType = errorTypeInstance6;
                                                                }
                                                                
                                                                JToken errorLevelValue6 = innerHealthErrorsValue3["errorLevel"];
                                                                if (errorLevelValue6 != null && errorLevelValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance6 = ((string)errorLevelValue6);
                                                                    innerHealthErrorInstance3.ErrorLevel = errorLevelInstance6;
                                                                }
                                                                
                                                                JToken errorCategoryValue6 = innerHealthErrorsValue3["errorCategory"];
                                                                if (errorCategoryValue6 != null && errorCategoryValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance6 = ((string)errorCategoryValue6);
                                                                    innerHealthErrorInstance3.ErrorCategory = errorCategoryInstance6;
                                                                }
                                                                
                                                                JToken errorCodeValue6 = innerHealthErrorsValue3["errorCode"];
                                                                if (errorCodeValue6 != null && errorCodeValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance6 = ((string)errorCodeValue6);
                                                                    innerHealthErrorInstance3.ErrorCode = errorCodeInstance6;
                                                                }
                                                                
                                                                JToken errorMessageValue6 = innerHealthErrorsValue3["errorMessage"];
                                                                if (errorMessageValue6 != null && errorMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance6 = ((string)errorMessageValue6);
                                                                    innerHealthErrorInstance3.ErrorMessage = errorMessageInstance6;
                                                                }
                                                                
                                                                JToken summaryMessageValue6 = innerHealthErrorsValue3["summaryMessage"];
                                                                if (summaryMessageValue6 != null && summaryMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance6 = ((string)summaryMessageValue6);
                                                                    innerHealthErrorInstance3.SummaryMessage = summaryMessageInstance6;
                                                                }
                                                                
                                                                JToken possibleCausesValue6 = innerHealthErrorsValue3["possibleCauses"];
                                                                if (possibleCausesValue6 != null && possibleCausesValue6.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance6 = ((string)possibleCausesValue6);
                                                                    innerHealthErrorInstance3.PossibleCauses = possibleCausesInstance6;
                                                                }
                                                                
                                                                JToken recommendedActionValue6 = innerHealthErrorsValue3["recommendedAction"];
                                                                if (recommendedActionValue6 != null && recommendedActionValue6.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance6 = ((string)recommendedActionValue6);
                                                                    innerHealthErrorInstance3.RecommendedAction = recommendedActionInstance6;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue6 = innerHealthErrorsValue3["creationTimeUtc"];
                                                                if (creationTimeUtcValue6 != null && creationTimeUtcValue6.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance6 = ((DateTime)creationTimeUtcValue6);
                                                                    innerHealthErrorInstance3.CreationTimeUtc = creationTimeUtcInstance6;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue6 = innerHealthErrorsValue3["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue6 != null && recoveryProviderErrorMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance6 = ((string)recoveryProviderErrorMessageValue6);
                                                                    innerHealthErrorInstance3.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance6;
                                                                }
                                                                
                                                                JToken entityIdValue6 = innerHealthErrorsValue3["entityId"];
                                                                if (entityIdValue6 != null && entityIdValue6.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance6 = ((string)entityIdValue6);
                                                                    innerHealthErrorInstance3.EntityId = entityIdInstance6;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken diskCountValue = masterTargetServersValue["diskCount"];
                                                if (diskCountValue != null && diskCountValue.Type != JTokenType.Null)
                                                {
                                                    int diskCountInstance = ((int)diskCountValue);
                                                    masterTargetServerInstance.DiskCount = diskCountInstance;
                                                }
                                                
                                                JToken osVersionValue2 = masterTargetServersValue["osVersion"];
                                                if (osVersionValue2 != null && osVersionValue2.Type != JTokenType.Null)
                                                {
                                                    string osVersionInstance2 = ((string)osVersionValue2);
                                                    masterTargetServerInstance.OsVersion = osVersionInstance2;
                                                }
                                                
                                                JToken agentExpiryDateValue2 = masterTargetServersValue["agentExpiryDate"];
                                                if (agentExpiryDateValue2 != null && agentExpiryDateValue2.Type != JTokenType.Null)
                                                {
                                                    DateTime agentExpiryDateInstance2 = ((DateTime)agentExpiryDateValue2);
                                                    masterTargetServerInstance.AgentExpiryDate = agentExpiryDateInstance2;
                                                }
                                                
                                                JToken marsAgentVersionValue = masterTargetServersValue["marsAgentVersion"];
                                                if (marsAgentVersionValue != null && marsAgentVersionValue.Type != JTokenType.Null)
                                                {
                                                    string marsAgentVersionInstance = ((string)marsAgentVersionValue);
                                                    masterTargetServerInstance.MarsAgentVersion = marsAgentVersionInstance;
                                                }
                                                
                                                JToken marsAgentExpiryDateValue = masterTargetServersValue["marsAgentExpiryDate"];
                                                if (marsAgentExpiryDateValue != null && marsAgentExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime marsAgentExpiryDateInstance = ((DateTime)marsAgentExpiryDateValue);
                                                    masterTargetServerInstance.MarsAgentExpiryDate = marsAgentExpiryDateInstance;
                                                }
                                                
                                                JToken agentVersionDetailsValue2 = masterTargetServersValue["agentVersionDetails"];
                                                if (agentVersionDetailsValue2 != null && agentVersionDetailsValue2.Type != JTokenType.Null)
                                                {
                                                    VersionDetails agentVersionDetailsInstance2 = new VersionDetails();
                                                    masterTargetServerInstance.AgentVersionDetails = agentVersionDetailsInstance2;
                                                    
                                                    JToken versionValue3 = agentVersionDetailsValue2["version"];
                                                    if (versionValue3 != null && versionValue3.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance3 = ((string)versionValue3);
                                                        agentVersionDetailsInstance2.Version = versionInstance3;
                                                    }
                                                    
                                                    JToken expiryDateValue2 = agentVersionDetailsValue2["expiryDate"];
                                                    if (expiryDateValue2 != null && expiryDateValue2.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance2 = ((DateTime)expiryDateValue2);
                                                        agentVersionDetailsInstance2.ExpiryDate = expiryDateInstance2;
                                                    }
                                                    
                                                    JToken statusValue2 = agentVersionDetailsValue2["status"];
                                                    if (statusValue2 != null && statusValue2.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance2 = ((string)statusValue2);
                                                        agentVersionDetailsInstance2.Status = statusInstance2;
                                                    }
                                                }
                                                
                                                JToken marsAgentVersionDetailsValue = masterTargetServersValue["marsAgentVersionDetails"];
                                                if (marsAgentVersionDetailsValue != null && marsAgentVersionDetailsValue.Type != JTokenType.Null)
                                                {
                                                    VersionDetails marsAgentVersionDetailsInstance = new VersionDetails();
                                                    masterTargetServerInstance.MarsAgentVersionDetails = marsAgentVersionDetailsInstance;
                                                    
                                                    JToken versionValue4 = marsAgentVersionDetailsValue["version"];
                                                    if (versionValue4 != null && versionValue4.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance4 = ((string)versionValue4);
                                                        marsAgentVersionDetailsInstance.Version = versionInstance4;
                                                    }
                                                    
                                                    JToken expiryDateValue3 = marsAgentVersionDetailsValue["expiryDate"];
                                                    if (expiryDateValue3 != null && expiryDateValue3.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance3 = ((DateTime)expiryDateValue3);
                                                        marsAgentVersionDetailsInstance.ExpiryDate = expiryDateInstance3;
                                                    }
                                                    
                                                    JToken statusValue3 = marsAgentVersionDetailsValue["status"];
                                                    if (statusValue3 != null && statusValue3.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance3 = ((string)statusValue3);
                                                        marsAgentVersionDetailsInstance.Status = statusInstance3;
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken runAsAccountsArray = customDetailsValue["runAsAccounts"];
                                        if (runAsAccountsArray != null && runAsAccountsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken runAsAccountsValue in ((JArray)runAsAccountsArray))
                                            {
                                                RunAsAccount runAsAccountInstance = new RunAsAccount();
                                                vMwareFabricDetailsInstance.RunAsAccounts.Add(runAsAccountInstance);
                                                
                                                JToken accountIdValue = runAsAccountsValue["accountId"];
                                                if (accountIdValue != null && accountIdValue.Type != JTokenType.Null)
                                                {
                                                    string accountIdInstance = ((string)accountIdValue);
                                                    runAsAccountInstance.AccountId = accountIdInstance;
                                                }
                                                
                                                JToken accountNameValue = runAsAccountsValue["accountName"];
                                                if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                                                {
                                                    string accountNameInstance = ((string)accountNameValue);
                                                    runAsAccountInstance.AccountName = accountNameInstance;
                                                }
                                            }
                                        }
                                        
                                        JToken replicationPairCountValue2 = customDetailsValue["replicationPairCount"];
                                        if (replicationPairCountValue2 != null && replicationPairCountValue2.Type != JTokenType.Null)
                                        {
                                            string replicationPairCountInstance2 = ((string)replicationPairCountValue2);
                                            vMwareFabricDetailsInstance.ReplicationPairCount = replicationPairCountInstance2;
                                        }
                                        
                                        JToken processServerCountValue = customDetailsValue["processServerCount"];
                                        if (processServerCountValue != null && processServerCountValue.Type != JTokenType.Null)
                                        {
                                            string processServerCountInstance = ((string)processServerCountValue);
                                            vMwareFabricDetailsInstance.ProcessServerCount = processServerCountInstance;
                                        }
                                        
                                        JToken agentCountValue = customDetailsValue["agentCount"];
                                        if (agentCountValue != null && agentCountValue.Type != JTokenType.Null)
                                        {
                                            string agentCountInstance = ((string)agentCountValue);
                                            vMwareFabricDetailsInstance.AgentCount = agentCountInstance;
                                        }
                                        
                                        JToken protectedServersValue = customDetailsValue["protectedServers"];
                                        if (protectedServersValue != null && protectedServersValue.Type != JTokenType.Null)
                                        {
                                            string protectedServersInstance = ((string)protectedServersValue);
                                            vMwareFabricDetailsInstance.ProtectedServers = protectedServersInstance;
                                        }
                                        
                                        JToken systemLoadValue2 = customDetailsValue["systemLoad"];
                                        if (systemLoadValue2 != null && systemLoadValue2.Type != JTokenType.Null)
                                        {
                                            string systemLoadInstance2 = ((string)systemLoadValue2);
                                            vMwareFabricDetailsInstance.SystemLoad = systemLoadInstance2;
                                        }
                                        
                                        JToken systemLoadStatusValue2 = customDetailsValue["systemLoadStatus"];
                                        if (systemLoadStatusValue2 != null && systemLoadStatusValue2.Type != JTokenType.Null)
                                        {
                                            string systemLoadStatusInstance2 = ((string)systemLoadStatusValue2);
                                            vMwareFabricDetailsInstance.SystemLoadStatus = systemLoadStatusInstance2;
                                        }
                                        
                                        JToken cpuLoadValue2 = customDetailsValue["cpuLoad"];
                                        if (cpuLoadValue2 != null && cpuLoadValue2.Type != JTokenType.Null)
                                        {
                                            string cpuLoadInstance2 = ((string)cpuLoadValue2);
                                            vMwareFabricDetailsInstance.CpuLoad = cpuLoadInstance2;
                                        }
                                        
                                        JToken cpuLoadStatusValue2 = customDetailsValue["cpuLoadStatus"];
                                        if (cpuLoadStatusValue2 != null && cpuLoadStatusValue2.Type != JTokenType.Null)
                                        {
                                            string cpuLoadStatusInstance2 = ((string)cpuLoadStatusValue2);
                                            vMwareFabricDetailsInstance.CpuLoadStatus = cpuLoadStatusInstance2;
                                        }
                                        
                                        JToken totalMemoryInBytesValue2 = customDetailsValue["totalMemoryInBytes"];
                                        if (totalMemoryInBytesValue2 != null && totalMemoryInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long totalMemoryInBytesInstance2 = ((long)totalMemoryInBytesValue2);
                                            vMwareFabricDetailsInstance.TotalMemoryInBytes = totalMemoryInBytesInstance2;
                                        }
                                        
                                        JToken availableMemoryInBytesValue2 = customDetailsValue["availableMemoryInBytes"];
                                        if (availableMemoryInBytesValue2 != null && availableMemoryInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long availableMemoryInBytesInstance2 = ((long)availableMemoryInBytesValue2);
                                            vMwareFabricDetailsInstance.AvailableMemoryInBytes = availableMemoryInBytesInstance2;
                                        }
                                        
                                        JToken memoryUsageStatusValue2 = customDetailsValue["memoryUsageStatus"];
                                        if (memoryUsageStatusValue2 != null && memoryUsageStatusValue2.Type != JTokenType.Null)
                                        {
                                            string memoryUsageStatusInstance2 = ((string)memoryUsageStatusValue2);
                                            vMwareFabricDetailsInstance.MemoryUsageStatus = memoryUsageStatusInstance2;
                                        }
                                        
                                        JToken totalSpaceInBytesValue2 = customDetailsValue["totalSpaceInBytes"];
                                        if (totalSpaceInBytesValue2 != null && totalSpaceInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long totalSpaceInBytesInstance2 = ((long)totalSpaceInBytesValue2);
                                            vMwareFabricDetailsInstance.TotalSpaceInBytes = totalSpaceInBytesInstance2;
                                        }
                                        
                                        JToken availableSpaceInBytesValue2 = customDetailsValue["availableSpaceInBytes"];
                                        if (availableSpaceInBytesValue2 != null && availableSpaceInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long availableSpaceInBytesInstance2 = ((long)availableSpaceInBytesValue2);
                                            vMwareFabricDetailsInstance.AvailableSpaceInBytes = availableSpaceInBytesInstance2;
                                        }
                                        
                                        JToken spaceUsageStatusValue2 = customDetailsValue["spaceUsageStatus"];
                                        if (spaceUsageStatusValue2 != null && spaceUsageStatusValue2.Type != JTokenType.Null)
                                        {
                                            string spaceUsageStatusInstance2 = ((string)spaceUsageStatusValue2);
                                            vMwareFabricDetailsInstance.SpaceUsageStatus = spaceUsageStatusInstance2;
                                        }
                                        
                                        JToken webLoadValue = customDetailsValue["webLoad"];
                                        if (webLoadValue != null && webLoadValue.Type != JTokenType.Null)
                                        {
                                            string webLoadInstance = ((string)webLoadValue);
                                            vMwareFabricDetailsInstance.WebLoad = webLoadInstance;
                                        }
                                        
                                        JToken webLoadStatusValue = customDetailsValue["webLoadStatus"];
                                        if (webLoadStatusValue != null && webLoadStatusValue.Type != JTokenType.Null)
                                        {
                                            string webLoadStatusInstance = ((string)webLoadStatusValue);
                                            vMwareFabricDetailsInstance.WebLoadStatus = webLoadStatusInstance;
                                        }
                                        
                                        JToken databaseServerLoadValue = customDetailsValue["databaseServerLoad"];
                                        if (databaseServerLoadValue != null && databaseServerLoadValue.Type != JTokenType.Null)
                                        {
                                            string databaseServerLoadInstance = ((string)databaseServerLoadValue);
                                            vMwareFabricDetailsInstance.DatabaseServerLoad = databaseServerLoadInstance;
                                        }
                                        
                                        JToken databaseServerLoadStatusValue = customDetailsValue["databaseServerLoadStatus"];
                                        if (databaseServerLoadStatusValue != null && databaseServerLoadStatusValue.Type != JTokenType.Null)
                                        {
                                            string databaseServerLoadStatusInstance = ((string)databaseServerLoadStatusValue);
                                            vMwareFabricDetailsInstance.DatabaseServerLoadStatus = databaseServerLoadStatusInstance;
                                        }
                                        
                                        JToken csServiceStatusValue = customDetailsValue["csServiceStatus"];
                                        if (csServiceStatusValue != null && csServiceStatusValue.Type != JTokenType.Null)
                                        {
                                            string csServiceStatusInstance = ((string)csServiceStatusValue);
                                            vMwareFabricDetailsInstance.CsServiceStatus = csServiceStatusInstance;
                                        }
                                        
                                        JToken ipAddressValue3 = customDetailsValue["ipAddress"];
                                        if (ipAddressValue3 != null && ipAddressValue3.Type != JTokenType.Null)
                                        {
                                            string ipAddressInstance3 = ((string)ipAddressValue3);
                                            vMwareFabricDetailsInstance.IpAddress = ipAddressInstance3;
                                        }
                                        
                                        JToken agentVersionValue3 = customDetailsValue["agentVersion"];
                                        if (agentVersionValue3 != null && agentVersionValue3.Type != JTokenType.Null)
                                        {
                                            string agentVersionInstance3 = ((string)agentVersionValue3);
                                            vMwareFabricDetailsInstance.AgentVersion = agentVersionInstance3;
                                        }
                                        
                                        JToken hostNameValue = customDetailsValue["hostName"];
                                        if (hostNameValue != null && hostNameValue.Type != JTokenType.Null)
                                        {
                                            string hostNameInstance = ((string)hostNameValue);
                                            vMwareFabricDetailsInstance.HostName = hostNameInstance;
                                        }
                                        
                                        JToken lastHeartbeatValue3 = customDetailsValue["lastHeartbeat"];
                                        if (lastHeartbeatValue3 != null && lastHeartbeatValue3.Type != JTokenType.Null)
                                        {
                                            DateTime lastHeartbeatInstance3 = ((DateTime)lastHeartbeatValue3);
                                            vMwareFabricDetailsInstance.LastHeartbeat = lastHeartbeatInstance3;
                                        }
                                        
                                        JToken versionStatusValue3 = customDetailsValue["versionStatus"];
                                        if (versionStatusValue3 != null && versionStatusValue3.Type != JTokenType.Null)
                                        {
                                            string versionStatusInstance3 = ((string)versionStatusValue3);
                                            vMwareFabricDetailsInstance.VersionStatus = versionStatusInstance3;
                                        }
                                        
                                        JToken sslCertExpiryDateValue2 = customDetailsValue["sslCertExpiryDate"];
                                        if (sslCertExpiryDateValue2 != null && sslCertExpiryDateValue2.Type != JTokenType.Null)
                                        {
                                            DateTime sslCertExpiryDateInstance2 = ((DateTime)sslCertExpiryDateValue2);
                                            vMwareFabricDetailsInstance.SslCertExpiryDate = sslCertExpiryDateInstance2;
                                        }
                                        
                                        JToken sslCertExpiryRemainingDaysValue2 = customDetailsValue["sslCertExpiryRemainingDays"];
                                        if (sslCertExpiryRemainingDaysValue2 != null && sslCertExpiryRemainingDaysValue2.Type != JTokenType.Null)
                                        {
                                            int sslCertExpiryRemainingDaysInstance2 = ((int)sslCertExpiryRemainingDaysValue2);
                                            vMwareFabricDetailsInstance.SslCertExpiryRemainingDays = sslCertExpiryRemainingDaysInstance2;
                                        }
                                        
                                        JToken psTemplateVersionValue = customDetailsValue["psTemplateVersion"];
                                        if (psTemplateVersionValue != null && psTemplateVersionValue.Type != JTokenType.Null)
                                        {
                                            string psTemplateVersionInstance = ((string)psTemplateVersionValue);
                                            vMwareFabricDetailsInstance.PsTemplateVersion = psTemplateVersionInstance;
                                        }
                                        
                                        JToken agentExpiryDateValue3 = customDetailsValue["agentExpiryDate"];
                                        if (agentExpiryDateValue3 != null && agentExpiryDateValue3.Type != JTokenType.Null)
                                        {
                                            DateTime agentExpiryDateInstance3 = ((DateTime)agentExpiryDateValue3);
                                            vMwareFabricDetailsInstance.AgentExpiryDate = agentExpiryDateInstance3;
                                        }
                                        
                                        JToken agentVersionDetailsValue3 = customDetailsValue["agentVersionDetails"];
                                        if (agentVersionDetailsValue3 != null && agentVersionDetailsValue3.Type != JTokenType.Null)
                                        {
                                            VersionDetails agentVersionDetailsInstance3 = new VersionDetails();
                                            vMwareFabricDetailsInstance.AgentVersionDetails = agentVersionDetailsInstance3;
                                            
                                            JToken versionValue5 = agentVersionDetailsValue3["version"];
                                            if (versionValue5 != null && versionValue5.Type != JTokenType.Null)
                                            {
                                                string versionInstance5 = ((string)versionValue5);
                                                agentVersionDetailsInstance3.Version = versionInstance5;
                                            }
                                            
                                            JToken expiryDateValue4 = agentVersionDetailsValue3["expiryDate"];
                                            if (expiryDateValue4 != null && expiryDateValue4.Type != JTokenType.Null)
                                            {
                                                DateTime expiryDateInstance4 = ((DateTime)expiryDateValue4);
                                                agentVersionDetailsInstance3.ExpiryDate = expiryDateInstance4;
                                            }
                                            
                                            JToken statusValue4 = agentVersionDetailsValue3["status"];
                                            if (statusValue4 != null && statusValue4.Type != JTokenType.Null)
                                            {
                                                string statusInstance4 = ((string)statusValue4);
                                                agentVersionDetailsInstance3.Status = statusInstance4;
                                            }
                                        }
                                        
                                        JToken instanceTypeValue4 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue4 != null && instanceTypeValue4.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance4 = ((string)instanceTypeValue4);
                                            vMwareFabricDetailsInstance.InstanceType = instanceTypeInstance4;
                                        }
                                        propertiesInstance.CustomDetails = vMwareFabricDetailsInstance;
                                    }
                                    if (typeName == "VMwareV2")
                                    {
                                        VMwareV2FabricSpecificDetails vMwareV2FabricSpecificDetailsInstance = new VMwareV2FabricSpecificDetails();
                                        
                                        JToken vmwareSiteIdValue = customDetailsValue["vmwareSiteId"];
                                        if (vmwareSiteIdValue != null && vmwareSiteIdValue.Type != JTokenType.Null)
                                        {
                                            string vmwareSiteIdInstance = ((string)vmwareSiteIdValue);
                                            vMwareV2FabricSpecificDetailsInstance.VMwareSiteId = vmwareSiteIdInstance;
                                        }
                                        
                                        JToken migrationSolutionIdValue = customDetailsValue["migrationSolutionId"];
                                        if (migrationSolutionIdValue != null && migrationSolutionIdValue.Type != JTokenType.Null)
                                        {
                                            string migrationSolutionIdInstance = ((string)migrationSolutionIdValue);
                                            vMwareV2FabricSpecificDetailsInstance.MigrationSolutionId = migrationSolutionIdInstance;
                                        }
                                        
                                        JToken serviceEndpointValue = customDetailsValue["serviceEndpoint"];
                                        if (serviceEndpointValue != null && serviceEndpointValue.Type != JTokenType.Null)
                                        {
                                            string serviceEndpointInstance = ((string)serviceEndpointValue);
                                            vMwareV2FabricSpecificDetailsInstance.ServiceEndpoint = serviceEndpointInstance;
                                        }
                                        
                                        JToken instanceTypeValue5 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue5 != null && instanceTypeValue5.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance5 = ((string)instanceTypeValue5);
                                            vMwareV2FabricSpecificDetailsInstance.InstanceType = instanceTypeInstance5;
                                        }
                                        propertiesInstance.CustomDetails = vMwareV2FabricSpecificDetailsInstance;
                                    }
                                }
                                
                                JToken healthErrorDetailsArray = propertiesValue["healthErrorDetails"];
                                if (healthErrorDetailsArray != null && healthErrorDetailsArray.Type != JTokenType.Null)
                                {
                                    foreach (JToken healthErrorDetailsValue in ((JArray)healthErrorDetailsArray))
                                    {
                                        HealthError healthErrorInstance4 = new HealthError();
                                        propertiesInstance.HealthErrorDetails.Add(healthErrorInstance4);
                                        
                                        JToken errorSourceValue7 = healthErrorDetailsValue["errorSource"];
                                        if (errorSourceValue7 != null && errorSourceValue7.Type != JTokenType.Null)
                                        {
                                            string errorSourceInstance7 = ((string)errorSourceValue7);
                                            healthErrorInstance4.ErrorSource = errorSourceInstance7;
                                        }
                                        
                                        JToken errorTypeValue7 = healthErrorDetailsValue["errorType"];
                                        if (errorTypeValue7 != null && errorTypeValue7.Type != JTokenType.Null)
                                        {
                                            string errorTypeInstance7 = ((string)errorTypeValue7);
                                            healthErrorInstance4.ErrorType = errorTypeInstance7;
                                        }
                                        
                                        JToken errorLevelValue7 = healthErrorDetailsValue["errorLevel"];
                                        if (errorLevelValue7 != null && errorLevelValue7.Type != JTokenType.Null)
                                        {
                                            string errorLevelInstance7 = ((string)errorLevelValue7);
                                            healthErrorInstance4.ErrorLevel = errorLevelInstance7;
                                        }
                                        
                                        JToken errorCategoryValue7 = healthErrorDetailsValue["errorCategory"];
                                        if (errorCategoryValue7 != null && errorCategoryValue7.Type != JTokenType.Null)
                                        {
                                            string errorCategoryInstance7 = ((string)errorCategoryValue7);
                                            healthErrorInstance4.ErrorCategory = errorCategoryInstance7;
                                        }
                                        
                                        JToken errorCodeValue7 = healthErrorDetailsValue["errorCode"];
                                        if (errorCodeValue7 != null && errorCodeValue7.Type != JTokenType.Null)
                                        {
                                            string errorCodeInstance7 = ((string)errorCodeValue7);
                                            healthErrorInstance4.ErrorCode = errorCodeInstance7;
                                        }
                                        
                                        JToken errorMessageValue7 = healthErrorDetailsValue["errorMessage"];
                                        if (errorMessageValue7 != null && errorMessageValue7.Type != JTokenType.Null)
                                        {
                                            string errorMessageInstance7 = ((string)errorMessageValue7);
                                            healthErrorInstance4.ErrorMessage = errorMessageInstance7;
                                        }
                                        
                                        JToken summaryMessageValue7 = healthErrorDetailsValue["summaryMessage"];
                                        if (summaryMessageValue7 != null && summaryMessageValue7.Type != JTokenType.Null)
                                        {
                                            string summaryMessageInstance7 = ((string)summaryMessageValue7);
                                            healthErrorInstance4.SummaryMessage = summaryMessageInstance7;
                                        }
                                        
                                        JToken possibleCausesValue7 = healthErrorDetailsValue["possibleCauses"];
                                        if (possibleCausesValue7 != null && possibleCausesValue7.Type != JTokenType.Null)
                                        {
                                            string possibleCausesInstance7 = ((string)possibleCausesValue7);
                                            healthErrorInstance4.PossibleCauses = possibleCausesInstance7;
                                        }
                                        
                                        JToken recommendedActionValue7 = healthErrorDetailsValue["recommendedAction"];
                                        if (recommendedActionValue7 != null && recommendedActionValue7.Type != JTokenType.Null)
                                        {
                                            string recommendedActionInstance7 = ((string)recommendedActionValue7);
                                            healthErrorInstance4.RecommendedAction = recommendedActionInstance7;
                                        }
                                        
                                        JToken creationTimeUtcValue7 = healthErrorDetailsValue["creationTimeUtc"];
                                        if (creationTimeUtcValue7 != null && creationTimeUtcValue7.Type != JTokenType.Null)
                                        {
                                            DateTime creationTimeUtcInstance7 = ((DateTime)creationTimeUtcValue7);
                                            healthErrorInstance4.CreationTimeUtc = creationTimeUtcInstance7;
                                        }
                                        
                                        JToken recoveryProviderErrorMessageValue7 = healthErrorDetailsValue["recoveryProviderErrorMessage"];
                                        if (recoveryProviderErrorMessageValue7 != null && recoveryProviderErrorMessageValue7.Type != JTokenType.Null)
                                        {
                                            string recoveryProviderErrorMessageInstance7 = ((string)recoveryProviderErrorMessageValue7);
                                            healthErrorInstance4.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance7;
                                        }
                                        
                                        JToken entityIdValue7 = healthErrorDetailsValue["entityId"];
                                        if (entityIdValue7 != null && entityIdValue7.Type != JTokenType.Null)
                                        {
                                            string entityIdInstance7 = ((string)entityIdValue7);
                                            healthErrorInstance4.EntityId = entityIdInstance7;
                                        }
                                        
                                        JToken innerHealthErrorsArray4 = healthErrorDetailsValue["innerHealthErrors"];
                                        if (innerHealthErrorsArray4 != null && innerHealthErrorsArray4.Type != JTokenType.Null)
                                        {
                                            foreach (JToken innerHealthErrorsValue4 in ((JArray)innerHealthErrorsArray4))
                                            {
                                                InnerHealthError innerHealthErrorInstance4 = new InnerHealthError();
                                                healthErrorInstance4.InnerHealthErrors.Add(innerHealthErrorInstance4);
                                                
                                                JToken errorSourceValue8 = innerHealthErrorsValue4["errorSource"];
                                                if (errorSourceValue8 != null && errorSourceValue8.Type != JTokenType.Null)
                                                {
                                                    string errorSourceInstance8 = ((string)errorSourceValue8);
                                                    innerHealthErrorInstance4.ErrorSource = errorSourceInstance8;
                                                }
                                                
                                                JToken errorTypeValue8 = innerHealthErrorsValue4["errorType"];
                                                if (errorTypeValue8 != null && errorTypeValue8.Type != JTokenType.Null)
                                                {
                                                    string errorTypeInstance8 = ((string)errorTypeValue8);
                                                    innerHealthErrorInstance4.ErrorType = errorTypeInstance8;
                                                }
                                                
                                                JToken errorLevelValue8 = innerHealthErrorsValue4["errorLevel"];
                                                if (errorLevelValue8 != null && errorLevelValue8.Type != JTokenType.Null)
                                                {
                                                    string errorLevelInstance8 = ((string)errorLevelValue8);
                                                    innerHealthErrorInstance4.ErrorLevel = errorLevelInstance8;
                                                }
                                                
                                                JToken errorCategoryValue8 = innerHealthErrorsValue4["errorCategory"];
                                                if (errorCategoryValue8 != null && errorCategoryValue8.Type != JTokenType.Null)
                                                {
                                                    string errorCategoryInstance8 = ((string)errorCategoryValue8);
                                                    innerHealthErrorInstance4.ErrorCategory = errorCategoryInstance8;
                                                }
                                                
                                                JToken errorCodeValue8 = innerHealthErrorsValue4["errorCode"];
                                                if (errorCodeValue8 != null && errorCodeValue8.Type != JTokenType.Null)
                                                {
                                                    string errorCodeInstance8 = ((string)errorCodeValue8);
                                                    innerHealthErrorInstance4.ErrorCode = errorCodeInstance8;
                                                }
                                                
                                                JToken errorMessageValue8 = innerHealthErrorsValue4["errorMessage"];
                                                if (errorMessageValue8 != null && errorMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string errorMessageInstance8 = ((string)errorMessageValue8);
                                                    innerHealthErrorInstance4.ErrorMessage = errorMessageInstance8;
                                                }
                                                
                                                JToken summaryMessageValue8 = innerHealthErrorsValue4["summaryMessage"];
                                                if (summaryMessageValue8 != null && summaryMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string summaryMessageInstance8 = ((string)summaryMessageValue8);
                                                    innerHealthErrorInstance4.SummaryMessage = summaryMessageInstance8;
                                                }
                                                
                                                JToken possibleCausesValue8 = innerHealthErrorsValue4["possibleCauses"];
                                                if (possibleCausesValue8 != null && possibleCausesValue8.Type != JTokenType.Null)
                                                {
                                                    string possibleCausesInstance8 = ((string)possibleCausesValue8);
                                                    innerHealthErrorInstance4.PossibleCauses = possibleCausesInstance8;
                                                }
                                                
                                                JToken recommendedActionValue8 = innerHealthErrorsValue4["recommendedAction"];
                                                if (recommendedActionValue8 != null && recommendedActionValue8.Type != JTokenType.Null)
                                                {
                                                    string recommendedActionInstance8 = ((string)recommendedActionValue8);
                                                    innerHealthErrorInstance4.RecommendedAction = recommendedActionInstance8;
                                                }
                                                
                                                JToken creationTimeUtcValue8 = innerHealthErrorsValue4["creationTimeUtc"];
                                                if (creationTimeUtcValue8 != null && creationTimeUtcValue8.Type != JTokenType.Null)
                                                {
                                                    DateTime creationTimeUtcInstance8 = ((DateTime)creationTimeUtcValue8);
                                                    innerHealthErrorInstance4.CreationTimeUtc = creationTimeUtcInstance8;
                                                }
                                                
                                                JToken recoveryProviderErrorMessageValue8 = innerHealthErrorsValue4["recoveryProviderErrorMessage"];
                                                if (recoveryProviderErrorMessageValue8 != null && recoveryProviderErrorMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string recoveryProviderErrorMessageInstance8 = ((string)recoveryProviderErrorMessageValue8);
                                                    innerHealthErrorInstance4.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance8;
                                                }
                                                
                                                JToken entityIdValue8 = innerHealthErrorsValue4["entityId"];
                                                if (entityIdValue8 != null && entityIdValue8.Type != JTokenType.Null)
                                                {
                                                    string entityIdInstance8 = ((string)entityIdValue8);
                                                    innerHealthErrorInstance4.EntityId = entityIdInstance8;
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                JToken healthValue = propertiesValue["health"];
                                if (healthValue != null && healthValue.Type != JTokenType.Null)
                                {
                                    string healthInstance = ((string)healthValue);
                                    propertiesInstance.Health = healthInstance;
                                }
                            }
                            
                            JToken idValue3 = responseDoc["id"];
                            if (idValue3 != null && idValue3.Type != JTokenType.Null)
                            {
                                string idInstance3 = ((string)idValue3);
                                fabricInstance.Id = idInstance3;
                            }
                            
                            JToken nameValue2 = responseDoc["name"];
                            if (nameValue2 != null && nameValue2.Type != JTokenType.Null)
                            {
                                string nameInstance2 = ((string)nameValue2);
                                fabricInstance.Name = nameInstance2;
                            }
                            
                            JToken typeValue2 = responseDoc["type"];
                            if (typeValue2 != null && typeValue2.Type != JTokenType.Null)
                            {
                                string typeInstance2 = ((string)typeValue2);
                                fabricInstance.Type = typeInstance2;
                            }
                            
                            JToken locationValue2 = responseDoc["location"];
                            if (locationValue2 != null && locationValue2.Type != JTokenType.Null)
                            {
                                string locationInstance2 = ((string)locationValue2);
                                fabricInstance.Location = locationInstance2;
                            }
                            
                            JToken tagsSequenceElement = ((JToken)responseDoc["tags"]);
                            if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)
                            {
                                foreach (JProperty property in tagsSequenceElement)
                                {
                                    string tagsKey = ((string)property.Name);
                                    string tagsValue = ((string)property.Value);
                                    fabricInstance.Tags.Add(tagsKey, tagsValue);
                                }
                            }
                            
                            JToken locationValue3 = responseDoc["Location"];
                            if (locationValue3 != null && locationValue3.Type != JTokenType.Null)
                            {
                                string locationInstance3 = ((string)locationValue3);
                                result.Location = locationInstance3;
                            }
                            
                            JToken retryAfterValue = responseDoc["RetryAfter"];
                            if (retryAfterValue != null && retryAfterValue.Type != JTokenType.Null)
                            {
                                int retryAfterInstance = ((int)retryAfterValue);
                                result.RetryAfter = retryAfterInstance;
                            }
                            
                            JToken asyncOperationValue = responseDoc["AsyncOperation"];
                            if (asyncOperationValue != null && asyncOperationValue.Type != JTokenType.Null)
                            {
                                string asyncOperationInstance = ((string)asyncOperationValue);
                                result.AsyncOperation = asyncOperationInstance;
                            }
                            
                            JToken statusValue5 = responseDoc["Status"];
                            if (statusValue5 != null && statusValue5.Type != JTokenType.Null)
                            {
                                OperationStatus statusInstance5 = ((OperationStatus)Enum.Parse(typeof(OperationStatus), ((string)statusValue5), true));
                                result.Status = statusInstance5;
                            }
                            
                            JToken cultureValue = responseDoc["Culture"];
                            if (cultureValue != null && cultureValue.Type != JTokenType.Null)
                            {
                                string cultureInstance = ((string)cultureValue);
                                result.Culture = cultureInstance;
                            }
                            
                            JToken clientRequestIdValue = responseDoc["ClientRequestId"];
                            if (clientRequestIdValue != null && clientRequestIdValue.Type != JTokenType.Null)
                            {
                                string clientRequestIdInstance = ((string)clientRequestIdValue);
                                result.ClientRequestId = clientRequestIdInstance;
                            }
                            
                            JToken correlationRequestIdValue = responseDoc["CorrelationRequestId"];
                            if (correlationRequestIdValue != null && correlationRequestIdValue.Type != JTokenType.Null)
                            {
                                string correlationRequestIdInstance = ((string)correlationRequestIdValue);
                                result.CorrelationRequestId = correlationRequestIdInstance;
                            }
                            
                            JToken dateValue = responseDoc["Date"];
                            if (dateValue != null && dateValue.Type != JTokenType.Null)
                            {
                                string dateInstance = ((string)dateValue);
                                result.Date = dateInstance;
                            }
                            
                            JToken contentTypeValue = responseDoc["ContentType"];
                            if (contentTypeValue != null && contentTypeValue.Type != JTokenType.Null)
                            {
                                string contentTypeInstance = ((string)contentTypeValue);
                                result.ContentType = contentTypeInstance;
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    if (statusCode == HttpStatusCode.NoContent)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.Accepted)
                    {
                        result.Status = OperationStatus.InProgress;
                    }
                    if (statusCode == HttpStatusCode.OK)
                    {
                        result.Status = OperationStatus.Succeeded;
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// The Get Operation Status operation returns the status of the
        /// specified operation. After calling an asynchronous operation, you
        /// can call Get Operation Status to determine whether the operation
        /// has succeeded, failed, or is still in progress.
        /// </summary>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for fabric long running operations.
        /// </returns>
        public async Task<FabricOperationResponse> GetRenewCertificateStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
        {
            // Validate
            if (operationStatusLink == null)
            {
                throw new ArgumentNullException("operationStatusLink");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("operationStatusLink", operationStatusLink);
                TracingAdapter.Enter(invocationId, this, "GetRenewCertificateStatusAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + operationStatusLink;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    FabricOperationResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK || statusCode == HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new FabricOperationResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            Fabric fabricInstance = new Fabric();
                            result.Fabric = fabricInstance;
                            
                            JToken propertiesValue = responseDoc["properties"];
                            if (propertiesValue != null && propertiesValue.Type != JTokenType.Null)
                            {
                                FabricProperties propertiesInstance = new FabricProperties();
                                fabricInstance.Properties = propertiesInstance;
                                
                                JToken friendlyNameValue = propertiesValue["friendlyName"];
                                if (friendlyNameValue != null && friendlyNameValue.Type != JTokenType.Null)
                                {
                                    string friendlyNameInstance = ((string)friendlyNameValue);
                                    propertiesInstance.FriendlyName = friendlyNameInstance;
                                }
                                
                                JToken internalIdentifierValue = propertiesValue["internalIdentifier"];
                                if (internalIdentifierValue != null && internalIdentifierValue.Type != JTokenType.Null)
                                {
                                    string internalIdentifierInstance = ((string)internalIdentifierValue);
                                    propertiesInstance.InternalIdentifier = internalIdentifierInstance;
                                }
                                
                                JToken bcdrStateValue = propertiesValue["bcdrState"];
                                if (bcdrStateValue != null && bcdrStateValue.Type != JTokenType.Null)
                                {
                                    string bcdrStateInstance = ((string)bcdrStateValue);
                                    propertiesInstance.BcdrState = bcdrStateInstance;
                                }
                                
                                JToken encryptionDetailsValue = propertiesValue["encryptionDetails"];
                                if (encryptionDetailsValue != null && encryptionDetailsValue.Type != JTokenType.Null)
                                {
                                    EncryptionDetails encryptionDetailsInstance = new EncryptionDetails();
                                    propertiesInstance.EncryptionDetails = encryptionDetailsInstance;
                                    
                                    JToken kekStateValue = encryptionDetailsValue["kekState"];
                                    if (kekStateValue != null && kekStateValue.Type != JTokenType.Null)
                                    {
                                        string kekStateInstance = ((string)kekStateValue);
                                        encryptionDetailsInstance.KekState = kekStateInstance;
                                    }
                                    
                                    JToken kekCertThumbprintValue = encryptionDetailsValue["kekCertThumbprint"];
                                    if (kekCertThumbprintValue != null && kekCertThumbprintValue.Type != JTokenType.Null)
                                    {
                                        string kekCertThumbprintInstance = ((string)kekCertThumbprintValue);
                                        encryptionDetailsInstance.KekCertThumbprint = kekCertThumbprintInstance;
                                    }
                                    
                                    JToken kekCertExpiryDateValue = encryptionDetailsValue["kekCertExpiryDate"];
                                    if (kekCertExpiryDateValue != null && kekCertExpiryDateValue.Type != JTokenType.Null)
                                    {
                                        DateTime kekCertExpiryDateInstance = ((DateTime)kekCertExpiryDateValue);
                                        encryptionDetailsInstance.KekCertExpiryDate = kekCertExpiryDateInstance;
                                    }
                                }
                                
                                JToken rolloverEncryptionDetailsValue = propertiesValue["rolloverEncryptionDetails"];
                                if (rolloverEncryptionDetailsValue != null && rolloverEncryptionDetailsValue.Type != JTokenType.Null)
                                {
                                    EncryptionDetails rolloverEncryptionDetailsInstance = new EncryptionDetails();
                                    propertiesInstance.RolloverEncryptionDetails = rolloverEncryptionDetailsInstance;
                                    
                                    JToken kekStateValue2 = rolloverEncryptionDetailsValue["kekState"];
                                    if (kekStateValue2 != null && kekStateValue2.Type != JTokenType.Null)
                                    {
                                        string kekStateInstance2 = ((string)kekStateValue2);
                                        rolloverEncryptionDetailsInstance.KekState = kekStateInstance2;
                                    }
                                    
                                    JToken kekCertThumbprintValue2 = rolloverEncryptionDetailsValue["kekCertThumbprint"];
                                    if (kekCertThumbprintValue2 != null && kekCertThumbprintValue2.Type != JTokenType.Null)
                                    {
                                        string kekCertThumbprintInstance2 = ((string)kekCertThumbprintValue2);
                                        rolloverEncryptionDetailsInstance.KekCertThumbprint = kekCertThumbprintInstance2;
                                    }
                                    
                                    JToken kekCertExpiryDateValue2 = rolloverEncryptionDetailsValue["kekCertExpiryDate"];
                                    if (kekCertExpiryDateValue2 != null && kekCertExpiryDateValue2.Type != JTokenType.Null)
                                    {
                                        DateTime kekCertExpiryDateInstance2 = ((DateTime)kekCertExpiryDateValue2);
                                        rolloverEncryptionDetailsInstance.KekCertExpiryDate = kekCertExpiryDateInstance2;
                                    }
                                }
                                
                                JToken customDetailsValue = propertiesValue["customDetails"];
                                if (customDetailsValue != null && customDetailsValue.Type != JTokenType.Null)
                                {
                                    string typeName = ((string)customDetailsValue["instanceType"]);
                                    if (typeName == "VMM")
                                    {
                                        VmmDetails vmmDetailsInstance = new VmmDetails();
                                        
                                        JToken instanceTypeValue = customDetailsValue["instanceType"];
                                        if (instanceTypeValue != null && instanceTypeValue.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance = ((string)instanceTypeValue);
                                            vmmDetailsInstance.InstanceType = instanceTypeInstance;
                                        }
                                        propertiesInstance.CustomDetails = vmmDetailsInstance;
                                    }
                                    if (typeName == "HyperVSite")
                                    {
                                        HyperVSiteDetails hyperVSiteDetailsInstance = new HyperVSiteDetails();
                                        
                                        JToken instanceTypeValue2 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue2 != null && instanceTypeValue2.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance2 = ((string)instanceTypeValue2);
                                            hyperVSiteDetailsInstance.InstanceType = instanceTypeInstance2;
                                        }
                                        propertiesInstance.CustomDetails = hyperVSiteDetailsInstance;
                                    }
                                    if (typeName == "Azure")
                                    {
                                        AzureFabricSpecificDetails azureFabricSpecificDetailsInstance = new AzureFabricSpecificDetails();
                                        
                                        JToken locationValue = customDetailsValue["location"];
                                        if (locationValue != null && locationValue.Type != JTokenType.Null)
                                        {
                                            string locationInstance = ((string)locationValue);
                                            azureFabricSpecificDetailsInstance.Location = locationInstance;
                                        }
                                        
                                        JToken containerIdsArray = customDetailsValue["containerIds"];
                                        if (containerIdsArray != null && containerIdsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken containerIdsValue in ((JArray)containerIdsArray))
                                            {
                                                azureFabricSpecificDetailsInstance.ContainerIds.Add(((string)containerIdsValue));
                                            }
                                        }
                                        
                                        JToken instanceTypeValue3 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue3 != null && instanceTypeValue3.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance3 = ((string)instanceTypeValue3);
                                            azureFabricSpecificDetailsInstance.InstanceType = instanceTypeInstance3;
                                        }
                                        propertiesInstance.CustomDetails = azureFabricSpecificDetailsInstance;
                                    }
                                    if (typeName == "VMware")
                                    {
                                        VMwareFabricDetails vMwareFabricDetailsInstance = new VMwareFabricDetails();
                                        
                                        JToken processServersArray = customDetailsValue["processServers"];
                                        if (processServersArray != null && processServersArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken processServersValue in ((JArray)processServersArray))
                                            {
                                                ProcessServer processServerInstance = new ProcessServer();
                                                vMwareFabricDetailsInstance.ProcessServers.Add(processServerInstance);
                                                
                                                JToken friendlyNameValue2 = processServersValue["friendlyName"];
                                                if (friendlyNameValue2 != null && friendlyNameValue2.Type != JTokenType.Null)
                                                {
                                                    string friendlyNameInstance2 = ((string)friendlyNameValue2);
                                                    processServerInstance.FriendlyName = friendlyNameInstance2;
                                                }
                                                
                                                JToken idValue = processServersValue["id"];
                                                if (idValue != null && idValue.Type != JTokenType.Null)
                                                {
                                                    string idInstance = ((string)idValue);
                                                    processServerInstance.Id = idInstance;
                                                }
                                                
                                                JToken ipAddressValue = processServersValue["ipAddress"];
                                                if (ipAddressValue != null && ipAddressValue.Type != JTokenType.Null)
                                                {
                                                    string ipAddressInstance = ((string)ipAddressValue);
                                                    processServerInstance.IpAddress = ipAddressInstance;
                                                }
                                                
                                                JToken osTypeValue = processServersValue["osType"];
                                                if (osTypeValue != null && osTypeValue.Type != JTokenType.Null)
                                                {
                                                    string osTypeInstance = ((string)osTypeValue);
                                                    processServerInstance.OsType = osTypeInstance;
                                                }
                                                
                                                JToken agentVersionValue = processServersValue["agentVersion"];
                                                if (agentVersionValue != null && agentVersionValue.Type != JTokenType.Null)
                                                {
                                                    string agentVersionInstance = ((string)agentVersionValue);
                                                    processServerInstance.AgentVersion = agentVersionInstance;
                                                }
                                                
                                                JToken lastHeartbeatValue = processServersValue["lastHeartbeat"];
                                                if (lastHeartbeatValue != null && lastHeartbeatValue.Type != JTokenType.Null)
                                                {
                                                    DateTime lastHeartbeatInstance = ((DateTime)lastHeartbeatValue);
                                                    processServerInstance.LastHeartbeat = lastHeartbeatInstance;
                                                }
                                                
                                                JToken versionStatusValue = processServersValue["versionStatus"];
                                                if (versionStatusValue != null && versionStatusValue.Type != JTokenType.Null)
                                                {
                                                    string versionStatusInstance = ((string)versionStatusValue);
                                                    processServerInstance.VersionStatus = versionStatusInstance;
                                                }
                                                
                                                JToken mobilityServiceUpdatesArray = processServersValue["mobilityServiceUpdates"];
                                                if (mobilityServiceUpdatesArray != null && mobilityServiceUpdatesArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken mobilityServiceUpdatesValue in ((JArray)mobilityServiceUpdatesArray))
                                                    {
                                                        MobilityServiceUpdate mobilityServiceUpdateInstance = new MobilityServiceUpdate();
                                                        processServerInstance.Updates.Add(mobilityServiceUpdateInstance);
                                                        
                                                        JToken versionValue = mobilityServiceUpdatesValue["version"];
                                                        if (versionValue != null && versionValue.Type != JTokenType.Null)
                                                        {
                                                            string versionInstance = ((string)versionValue);
                                                            mobilityServiceUpdateInstance.Version = versionInstance;
                                                        }
                                                        
                                                        JToken rebootStatusValue = mobilityServiceUpdatesValue["rebootStatus"];
                                                        if (rebootStatusValue != null && rebootStatusValue.Type != JTokenType.Null)
                                                        {
                                                            string rebootStatusInstance = ((string)rebootStatusValue);
                                                            mobilityServiceUpdateInstance.RebootStatus = rebootStatusInstance;
                                                        }
                                                        
                                                        JToken osTypeValue2 = mobilityServiceUpdatesValue["osType"];
                                                        if (osTypeValue2 != null && osTypeValue2.Type != JTokenType.Null)
                                                        {
                                                            string osTypeInstance2 = ((string)osTypeValue2);
                                                            mobilityServiceUpdateInstance.OsType = osTypeInstance2;
                                                        }
                                                    }
                                                }
                                                
                                                JToken hostIdValue = processServersValue["hostId"];
                                                if (hostIdValue != null && hostIdValue.Type != JTokenType.Null)
                                                {
                                                    string hostIdInstance = ((string)hostIdValue);
                                                    processServerInstance.HostId = hostIdInstance;
                                                }
                                                
                                                JToken machineCountValue = processServersValue["machineCount"];
                                                if (machineCountValue != null && machineCountValue.Type != JTokenType.Null)
                                                {
                                                    string machineCountInstance = ((string)machineCountValue);
                                                    processServerInstance.ServerCount = machineCountInstance;
                                                }
                                                
                                                JToken replicationPairCountValue = processServersValue["replicationPairCount"];
                                                if (replicationPairCountValue != null && replicationPairCountValue.Type != JTokenType.Null)
                                                {
                                                    string replicationPairCountInstance = ((string)replicationPairCountValue);
                                                    processServerInstance.ReplicationPairCount = replicationPairCountInstance;
                                                }
                                                
                                                JToken systemLoadValue = processServersValue["systemLoad"];
                                                if (systemLoadValue != null && systemLoadValue.Type != JTokenType.Null)
                                                {
                                                    string systemLoadInstance = ((string)systemLoadValue);
                                                    processServerInstance.SystemLoad = systemLoadInstance;
                                                }
                                                
                                                JToken systemLoadStatusValue = processServersValue["systemLoadStatus"];
                                                if (systemLoadStatusValue != null && systemLoadStatusValue.Type != JTokenType.Null)
                                                {
                                                    string systemLoadStatusInstance = ((string)systemLoadStatusValue);
                                                    processServerInstance.SystemLoadStatus = systemLoadStatusInstance;
                                                }
                                                
                                                JToken cpuLoadValue = processServersValue["cpuLoad"];
                                                if (cpuLoadValue != null && cpuLoadValue.Type != JTokenType.Null)
                                                {
                                                    string cpuLoadInstance = ((string)cpuLoadValue);
                                                    processServerInstance.CpuLoad = cpuLoadInstance;
                                                }
                                                
                                                JToken cpuLoadStatusValue = processServersValue["cpuLoadStatus"];
                                                if (cpuLoadStatusValue != null && cpuLoadStatusValue.Type != JTokenType.Null)
                                                {
                                                    string cpuLoadStatusInstance = ((string)cpuLoadStatusValue);
                                                    processServerInstance.CpuLoadStatus = cpuLoadStatusInstance;
                                                }
                                                
                                                JToken totalMemoryInBytesValue = processServersValue["totalMemoryInBytes"];
                                                if (totalMemoryInBytesValue != null && totalMemoryInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long totalMemoryInBytesInstance = ((long)totalMemoryInBytesValue);
                                                    processServerInstance.TotalMemoryInBytes = totalMemoryInBytesInstance;
                                                }
                                                
                                                JToken availableMemoryInBytesValue = processServersValue["availableMemoryInBytes"];
                                                if (availableMemoryInBytesValue != null && availableMemoryInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long availableMemoryInBytesInstance = ((long)availableMemoryInBytesValue);
                                                    processServerInstance.AvailableMemoryInBytes = availableMemoryInBytesInstance;
                                                }
                                                
                                                JToken memoryUsageStatusValue = processServersValue["memoryUsageStatus"];
                                                if (memoryUsageStatusValue != null && memoryUsageStatusValue.Type != JTokenType.Null)
                                                {
                                                    string memoryUsageStatusInstance = ((string)memoryUsageStatusValue);
                                                    processServerInstance.MemoryUsageStatus = memoryUsageStatusInstance;
                                                }
                                                
                                                JToken totalSpaceInBytesValue = processServersValue["totalSpaceInBytes"];
                                                if (totalSpaceInBytesValue != null && totalSpaceInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long totalSpaceInBytesInstance = ((long)totalSpaceInBytesValue);
                                                    processServerInstance.TotalSpaceInBytes = totalSpaceInBytesInstance;
                                                }
                                                
                                                JToken availableSpaceInBytesValue = processServersValue["availableSpaceInBytes"];
                                                if (availableSpaceInBytesValue != null && availableSpaceInBytesValue.Type != JTokenType.Null)
                                                {
                                                    long availableSpaceInBytesInstance = ((long)availableSpaceInBytesValue);
                                                    processServerInstance.AvailableSpaceInBytes = availableSpaceInBytesInstance;
                                                }
                                                
                                                JToken spaceUsageStatusValue = processServersValue["spaceUsageStatus"];
                                                if (spaceUsageStatusValue != null && spaceUsageStatusValue.Type != JTokenType.Null)
                                                {
                                                    string spaceUsageStatusInstance = ((string)spaceUsageStatusValue);
                                                    processServerInstance.SpaceUsageStatus = spaceUsageStatusInstance;
                                                }
                                                
                                                JToken psServiceStatusValue = processServersValue["psServiceStatus"];
                                                if (psServiceStatusValue != null && psServiceStatusValue.Type != JTokenType.Null)
                                                {
                                                    string psServiceStatusInstance = ((string)psServiceStatusValue);
                                                    processServerInstance.PsServiceStatus = psServiceStatusInstance;
                                                }
                                                
                                                JToken sslCertExpiryDateValue = processServersValue["sslCertExpiryDate"];
                                                if (sslCertExpiryDateValue != null && sslCertExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime sslCertExpiryDateInstance = ((DateTime)sslCertExpiryDateValue);
                                                    processServerInstance.SslCertExpiryDate = sslCertExpiryDateInstance;
                                                }
                                                
                                                JToken sslCertExpiryRemainingDaysValue = processServersValue["sslCertExpiryRemainingDays"];
                                                if (sslCertExpiryRemainingDaysValue != null && sslCertExpiryRemainingDaysValue.Type != JTokenType.Null)
                                                {
                                                    int sslCertExpiryRemainingDaysInstance = ((int)sslCertExpiryRemainingDaysValue);
                                                    processServerInstance.SslCertExpiryRemainingDays = sslCertExpiryRemainingDaysInstance;
                                                }
                                                
                                                JToken osVersionValue = processServersValue["osVersion"];
                                                if (osVersionValue != null && osVersionValue.Type != JTokenType.Null)
                                                {
                                                    string osVersionInstance = ((string)osVersionValue);
                                                    processServerInstance.OsVersion = osVersionInstance;
                                                }
                                                
                                                JToken healthErrorsArray = processServersValue["healthErrors"];
                                                if (healthErrorsArray != null && healthErrorsArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken healthErrorsValue in ((JArray)healthErrorsArray))
                                                    {
                                                        HealthError healthErrorInstance = new HealthError();
                                                        processServerInstance.HealthErrors.Add(healthErrorInstance);
                                                        
                                                        JToken errorSourceValue = healthErrorsValue["errorSource"];
                                                        if (errorSourceValue != null && errorSourceValue.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance = ((string)errorSourceValue);
                                                            healthErrorInstance.ErrorSource = errorSourceInstance;
                                                        }
                                                        
                                                        JToken errorTypeValue = healthErrorsValue["errorType"];
                                                        if (errorTypeValue != null && errorTypeValue.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance = ((string)errorTypeValue);
                                                            healthErrorInstance.ErrorType = errorTypeInstance;
                                                        }
                                                        
                                                        JToken errorLevelValue = healthErrorsValue["errorLevel"];
                                                        if (errorLevelValue != null && errorLevelValue.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance = ((string)errorLevelValue);
                                                            healthErrorInstance.ErrorLevel = errorLevelInstance;
                                                        }
                                                        
                                                        JToken errorCategoryValue = healthErrorsValue["errorCategory"];
                                                        if (errorCategoryValue != null && errorCategoryValue.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance = ((string)errorCategoryValue);
                                                            healthErrorInstance.ErrorCategory = errorCategoryInstance;
                                                        }
                                                        
                                                        JToken errorCodeValue = healthErrorsValue["errorCode"];
                                                        if (errorCodeValue != null && errorCodeValue.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance = ((string)errorCodeValue);
                                                            healthErrorInstance.ErrorCode = errorCodeInstance;
                                                        }
                                                        
                                                        JToken errorMessageValue = healthErrorsValue["errorMessage"];
                                                        if (errorMessageValue != null && errorMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance = ((string)errorMessageValue);
                                                            healthErrorInstance.ErrorMessage = errorMessageInstance;
                                                        }
                                                        
                                                        JToken summaryMessageValue = healthErrorsValue["summaryMessage"];
                                                        if (summaryMessageValue != null && summaryMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance = ((string)summaryMessageValue);
                                                            healthErrorInstance.SummaryMessage = summaryMessageInstance;
                                                        }
                                                        
                                                        JToken possibleCausesValue = healthErrorsValue["possibleCauses"];
                                                        if (possibleCausesValue != null && possibleCausesValue.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance = ((string)possibleCausesValue);
                                                            healthErrorInstance.PossibleCauses = possibleCausesInstance;
                                                        }
                                                        
                                                        JToken recommendedActionValue = healthErrorsValue["recommendedAction"];
                                                        if (recommendedActionValue != null && recommendedActionValue.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance = ((string)recommendedActionValue);
                                                            healthErrorInstance.RecommendedAction = recommendedActionInstance;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue = healthErrorsValue["creationTimeUtc"];
                                                        if (creationTimeUtcValue != null && creationTimeUtcValue.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance = ((DateTime)creationTimeUtcValue);
                                                            healthErrorInstance.CreationTimeUtc = creationTimeUtcInstance;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue = healthErrorsValue["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue != null && recoveryProviderErrorMessageValue.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance = ((string)recoveryProviderErrorMessageValue);
                                                            healthErrorInstance.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance;
                                                        }
                                                        
                                                        JToken entityIdValue = healthErrorsValue["entityId"];
                                                        if (entityIdValue != null && entityIdValue.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance = ((string)entityIdValue);
                                                            healthErrorInstance.EntityId = entityIdInstance;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray = healthErrorsValue["innerHealthErrors"];
                                                        if (innerHealthErrorsArray != null && innerHealthErrorsArray.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue in ((JArray)innerHealthErrorsArray))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance = new InnerHealthError();
                                                                healthErrorInstance.InnerHealthErrors.Add(innerHealthErrorInstance);
                                                                
                                                                JToken errorSourceValue2 = innerHealthErrorsValue["errorSource"];
                                                                if (errorSourceValue2 != null && errorSourceValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance2 = ((string)errorSourceValue2);
                                                                    innerHealthErrorInstance.ErrorSource = errorSourceInstance2;
                                                                }
                                                                
                                                                JToken errorTypeValue2 = innerHealthErrorsValue["errorType"];
                                                                if (errorTypeValue2 != null && errorTypeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance2 = ((string)errorTypeValue2);
                                                                    innerHealthErrorInstance.ErrorType = errorTypeInstance2;
                                                                }
                                                                
                                                                JToken errorLevelValue2 = innerHealthErrorsValue["errorLevel"];
                                                                if (errorLevelValue2 != null && errorLevelValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance2 = ((string)errorLevelValue2);
                                                                    innerHealthErrorInstance.ErrorLevel = errorLevelInstance2;
                                                                }
                                                                
                                                                JToken errorCategoryValue2 = innerHealthErrorsValue["errorCategory"];
                                                                if (errorCategoryValue2 != null && errorCategoryValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance2 = ((string)errorCategoryValue2);
                                                                    innerHealthErrorInstance.ErrorCategory = errorCategoryInstance2;
                                                                }
                                                                
                                                                JToken errorCodeValue2 = innerHealthErrorsValue["errorCode"];
                                                                if (errorCodeValue2 != null && errorCodeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance2 = ((string)errorCodeValue2);
                                                                    innerHealthErrorInstance.ErrorCode = errorCodeInstance2;
                                                                }
                                                                
                                                                JToken errorMessageValue2 = innerHealthErrorsValue["errorMessage"];
                                                                if (errorMessageValue2 != null && errorMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance2 = ((string)errorMessageValue2);
                                                                    innerHealthErrorInstance.ErrorMessage = errorMessageInstance2;
                                                                }
                                                                
                                                                JToken summaryMessageValue2 = innerHealthErrorsValue["summaryMessage"];
                                                                if (summaryMessageValue2 != null && summaryMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance2 = ((string)summaryMessageValue2);
                                                                    innerHealthErrorInstance.SummaryMessage = summaryMessageInstance2;
                                                                }
                                                                
                                                                JToken possibleCausesValue2 = innerHealthErrorsValue["possibleCauses"];
                                                                if (possibleCausesValue2 != null && possibleCausesValue2.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance2 = ((string)possibleCausesValue2);
                                                                    innerHealthErrorInstance.PossibleCauses = possibleCausesInstance2;
                                                                }
                                                                
                                                                JToken recommendedActionValue2 = innerHealthErrorsValue["recommendedAction"];
                                                                if (recommendedActionValue2 != null && recommendedActionValue2.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance2 = ((string)recommendedActionValue2);
                                                                    innerHealthErrorInstance.RecommendedAction = recommendedActionInstance2;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue2 = innerHealthErrorsValue["creationTimeUtc"];
                                                                if (creationTimeUtcValue2 != null && creationTimeUtcValue2.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance2 = ((DateTime)creationTimeUtcValue2);
                                                                    innerHealthErrorInstance.CreationTimeUtc = creationTimeUtcInstance2;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue2 = innerHealthErrorsValue["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue2 != null && recoveryProviderErrorMessageValue2.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance2 = ((string)recoveryProviderErrorMessageValue2);
                                                                    innerHealthErrorInstance.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance2;
                                                                }
                                                                
                                                                JToken entityIdValue2 = innerHealthErrorsValue["entityId"];
                                                                if (entityIdValue2 != null && entityIdValue2.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance2 = ((string)entityIdValue2);
                                                                    innerHealthErrorInstance.EntityId = entityIdInstance2;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken agentExpiryDateValue = processServersValue["agentExpiryDate"];
                                                if (agentExpiryDateValue != null && agentExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime agentExpiryDateInstance = ((DateTime)agentExpiryDateValue);
                                                    processServerInstance.AgentExpiryDate = agentExpiryDateInstance;
                                                }
                                                
                                                JToken agentVersionDetailsValue = processServersValue["agentVersionDetails"];
                                                if (agentVersionDetailsValue != null && agentVersionDetailsValue.Type != JTokenType.Null)
                                                {
                                                    VersionDetails agentVersionDetailsInstance = new VersionDetails();
                                                    processServerInstance.AgentVersionDetails = agentVersionDetailsInstance;
                                                    
                                                    JToken versionValue2 = agentVersionDetailsValue["version"];
                                                    if (versionValue2 != null && versionValue2.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance2 = ((string)versionValue2);
                                                        agentVersionDetailsInstance.Version = versionInstance2;
                                                    }
                                                    
                                                    JToken expiryDateValue = agentVersionDetailsValue["expiryDate"];
                                                    if (expiryDateValue != null && expiryDateValue.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance = ((DateTime)expiryDateValue);
                                                        agentVersionDetailsInstance.ExpiryDate = expiryDateInstance;
                                                    }
                                                    
                                                    JToken statusValue = agentVersionDetailsValue["status"];
                                                    if (statusValue != null && statusValue.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance = ((string)statusValue);
                                                        agentVersionDetailsInstance.Status = statusInstance;
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken masterTargetServersArray = customDetailsValue["masterTargetServers"];
                                        if (masterTargetServersArray != null && masterTargetServersArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken masterTargetServersValue in ((JArray)masterTargetServersArray))
                                            {
                                                MasterTargetServer masterTargetServerInstance = new MasterTargetServer();
                                                vMwareFabricDetailsInstance.MasterTargetServers.Add(masterTargetServerInstance);
                                                
                                                JToken idValue2 = masterTargetServersValue["id"];
                                                if (idValue2 != null && idValue2.Type != JTokenType.Null)
                                                {
                                                    string idInstance2 = ((string)idValue2);
                                                    masterTargetServerInstance.Id = idInstance2;
                                                }
                                                
                                                JToken ipAddressValue2 = masterTargetServersValue["ipAddress"];
                                                if (ipAddressValue2 != null && ipAddressValue2.Type != JTokenType.Null)
                                                {
                                                    string ipAddressInstance2 = ((string)ipAddressValue2);
                                                    masterTargetServerInstance.IpAddress = ipAddressInstance2;
                                                }
                                                
                                                JToken nameValue = masterTargetServersValue["name"];
                                                if (nameValue != null && nameValue.Type != JTokenType.Null)
                                                {
                                                    string nameInstance = ((string)nameValue);
                                                    masterTargetServerInstance.Name = nameInstance;
                                                }
                                                
                                                JToken osTypeValue3 = masterTargetServersValue["osType"];
                                                if (osTypeValue3 != null && osTypeValue3.Type != JTokenType.Null)
                                                {
                                                    string osTypeInstance3 = ((string)osTypeValue3);
                                                    masterTargetServerInstance.OsType = osTypeInstance3;
                                                }
                                                
                                                JToken agentVersionValue2 = masterTargetServersValue["agentVersion"];
                                                if (agentVersionValue2 != null && agentVersionValue2.Type != JTokenType.Null)
                                                {
                                                    string agentVersionInstance2 = ((string)agentVersionValue2);
                                                    masterTargetServerInstance.AgentVersion = agentVersionInstance2;
                                                }
                                                
                                                JToken lastHeartbeatValue2 = masterTargetServersValue["lastHeartbeat"];
                                                if (lastHeartbeatValue2 != null && lastHeartbeatValue2.Type != JTokenType.Null)
                                                {
                                                    DateTime lastHeartbeatInstance2 = ((DateTime)lastHeartbeatValue2);
                                                    masterTargetServerInstance.LastHeartbeat = lastHeartbeatInstance2;
                                                }
                                                
                                                JToken versionStatusValue2 = masterTargetServersValue["versionStatus"];
                                                if (versionStatusValue2 != null && versionStatusValue2.Type != JTokenType.Null)
                                                {
                                                    string versionStatusInstance2 = ((string)versionStatusValue2);
                                                    masterTargetServerInstance.VersionStatus = versionStatusInstance2;
                                                }
                                                
                                                JToken retentionVolumesArray = masterTargetServersValue["retentionVolumes"];
                                                if (retentionVolumesArray != null && retentionVolumesArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken retentionVolumesValue in ((JArray)retentionVolumesArray))
                                                    {
                                                        RetentionVolume retentionVolumeInstance = new RetentionVolume();
                                                        masterTargetServerInstance.RetentionVolumes.Add(retentionVolumeInstance);
                                                        
                                                        JToken volumeNameValue = retentionVolumesValue["volumeName"];
                                                        if (volumeNameValue != null && volumeNameValue.Type != JTokenType.Null)
                                                        {
                                                            string volumeNameInstance = ((string)volumeNameValue);
                                                            retentionVolumeInstance.VolumeName = volumeNameInstance;
                                                        }
                                                        
                                                        JToken capacityInBytesValue = retentionVolumesValue["capacityInBytes"];
                                                        if (capacityInBytesValue != null && capacityInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long capacityInBytesInstance = ((long)capacityInBytesValue);
                                                            retentionVolumeInstance.CapacityInBytes = capacityInBytesInstance;
                                                        }
                                                        
                                                        JToken freeSpaceInBytesValue = retentionVolumesValue["freeSpaceInBytes"];
                                                        if (freeSpaceInBytesValue != null && freeSpaceInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long freeSpaceInBytesInstance = ((long)freeSpaceInBytesValue);
                                                            retentionVolumeInstance.FreeSpaceInBytes = freeSpaceInBytesInstance;
                                                        }
                                                        
                                                        JToken thresholdPercentageValue = retentionVolumesValue["thresholdPercentage"];
                                                        if (thresholdPercentageValue != null && thresholdPercentageValue.Type != JTokenType.Null)
                                                        {
                                                            int thresholdPercentageInstance = ((int)thresholdPercentageValue);
                                                            retentionVolumeInstance.ThresholdPercentage = thresholdPercentageInstance;
                                                        }
                                                    }
                                                }
                                                
                                                JToken dataStoresArray = masterTargetServersValue["dataStores"];
                                                if (dataStoresArray != null && dataStoresArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken dataStoresValue in ((JArray)dataStoresArray))
                                                    {
                                                        DataStore dataStoreInstance = new DataStore();
                                                        masterTargetServerInstance.DataStores.Add(dataStoreInstance);
                                                        
                                                        JToken symbolicNameValue = dataStoresValue["symbolicName"];
                                                        if (symbolicNameValue != null && symbolicNameValue.Type != JTokenType.Null)
                                                        {
                                                            string symbolicNameInstance = ((string)symbolicNameValue);
                                                            dataStoreInstance.SymbolicName = symbolicNameInstance;
                                                        }
                                                        
                                                        JToken uuidValue = dataStoresValue["uuid"];
                                                        if (uuidValue != null && uuidValue.Type != JTokenType.Null)
                                                        {
                                                            string uuidInstance = ((string)uuidValue);
                                                            dataStoreInstance.Uuid = uuidInstance;
                                                        }
                                                        
                                                        JToken capacityValue = dataStoresValue["capacity"];
                                                        if (capacityValue != null && capacityValue.Type != JTokenType.Null)
                                                        {
                                                            string capacityInstance = ((string)capacityValue);
                                                            dataStoreInstance.Capacity = capacityInstance;
                                                        }
                                                        
                                                        JToken freeSpaceValue = dataStoresValue["freeSpace"];
                                                        if (freeSpaceValue != null && freeSpaceValue.Type != JTokenType.Null)
                                                        {
                                                            string freeSpaceInstance = ((string)freeSpaceValue);
                                                            dataStoreInstance.FreeSpace = freeSpaceInstance;
                                                        }
                                                        
                                                        JToken typeValue = dataStoresValue["type"];
                                                        if (typeValue != null && typeValue.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance = ((string)typeValue);
                                                            dataStoreInstance.Type = typeInstance;
                                                        }
                                                    }
                                                }
                                                
                                                JToken validationErrorsArray = masterTargetServersValue["validationErrors"];
                                                if (validationErrorsArray != null && validationErrorsArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken validationErrorsValue in ((JArray)validationErrorsArray))
                                                    {
                                                        HealthError healthErrorInstance2 = new HealthError();
                                                        masterTargetServerInstance.ValidationErrors.Add(healthErrorInstance2);
                                                        
                                                        JToken errorSourceValue3 = validationErrorsValue["errorSource"];
                                                        if (errorSourceValue3 != null && errorSourceValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance3 = ((string)errorSourceValue3);
                                                            healthErrorInstance2.ErrorSource = errorSourceInstance3;
                                                        }
                                                        
                                                        JToken errorTypeValue3 = validationErrorsValue["errorType"];
                                                        if (errorTypeValue3 != null && errorTypeValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance3 = ((string)errorTypeValue3);
                                                            healthErrorInstance2.ErrorType = errorTypeInstance3;
                                                        }
                                                        
                                                        JToken errorLevelValue3 = validationErrorsValue["errorLevel"];
                                                        if (errorLevelValue3 != null && errorLevelValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance3 = ((string)errorLevelValue3);
                                                            healthErrorInstance2.ErrorLevel = errorLevelInstance3;
                                                        }
                                                        
                                                        JToken errorCategoryValue3 = validationErrorsValue["errorCategory"];
                                                        if (errorCategoryValue3 != null && errorCategoryValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance3 = ((string)errorCategoryValue3);
                                                            healthErrorInstance2.ErrorCategory = errorCategoryInstance3;
                                                        }
                                                        
                                                        JToken errorCodeValue3 = validationErrorsValue["errorCode"];
                                                        if (errorCodeValue3 != null && errorCodeValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance3 = ((string)errorCodeValue3);
                                                            healthErrorInstance2.ErrorCode = errorCodeInstance3;
                                                        }
                                                        
                                                        JToken errorMessageValue3 = validationErrorsValue["errorMessage"];
                                                        if (errorMessageValue3 != null && errorMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance3 = ((string)errorMessageValue3);
                                                            healthErrorInstance2.ErrorMessage = errorMessageInstance3;
                                                        }
                                                        
                                                        JToken summaryMessageValue3 = validationErrorsValue["summaryMessage"];
                                                        if (summaryMessageValue3 != null && summaryMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance3 = ((string)summaryMessageValue3);
                                                            healthErrorInstance2.SummaryMessage = summaryMessageInstance3;
                                                        }
                                                        
                                                        JToken possibleCausesValue3 = validationErrorsValue["possibleCauses"];
                                                        if (possibleCausesValue3 != null && possibleCausesValue3.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance3 = ((string)possibleCausesValue3);
                                                            healthErrorInstance2.PossibleCauses = possibleCausesInstance3;
                                                        }
                                                        
                                                        JToken recommendedActionValue3 = validationErrorsValue["recommendedAction"];
                                                        if (recommendedActionValue3 != null && recommendedActionValue3.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance3 = ((string)recommendedActionValue3);
                                                            healthErrorInstance2.RecommendedAction = recommendedActionInstance3;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue3 = validationErrorsValue["creationTimeUtc"];
                                                        if (creationTimeUtcValue3 != null && creationTimeUtcValue3.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance3 = ((DateTime)creationTimeUtcValue3);
                                                            healthErrorInstance2.CreationTimeUtc = creationTimeUtcInstance3;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue3 = validationErrorsValue["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue3 != null && recoveryProviderErrorMessageValue3.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance3 = ((string)recoveryProviderErrorMessageValue3);
                                                            healthErrorInstance2.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance3;
                                                        }
                                                        
                                                        JToken entityIdValue3 = validationErrorsValue["entityId"];
                                                        if (entityIdValue3 != null && entityIdValue3.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance3 = ((string)entityIdValue3);
                                                            healthErrorInstance2.EntityId = entityIdInstance3;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray2 = validationErrorsValue["innerHealthErrors"];
                                                        if (innerHealthErrorsArray2 != null && innerHealthErrorsArray2.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue2 in ((JArray)innerHealthErrorsArray2))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance2 = new InnerHealthError();
                                                                healthErrorInstance2.InnerHealthErrors.Add(innerHealthErrorInstance2);
                                                                
                                                                JToken errorSourceValue4 = innerHealthErrorsValue2["errorSource"];
                                                                if (errorSourceValue4 != null && errorSourceValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance4 = ((string)errorSourceValue4);
                                                                    innerHealthErrorInstance2.ErrorSource = errorSourceInstance4;
                                                                }
                                                                
                                                                JToken errorTypeValue4 = innerHealthErrorsValue2["errorType"];
                                                                if (errorTypeValue4 != null && errorTypeValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance4 = ((string)errorTypeValue4);
                                                                    innerHealthErrorInstance2.ErrorType = errorTypeInstance4;
                                                                }
                                                                
                                                                JToken errorLevelValue4 = innerHealthErrorsValue2["errorLevel"];
                                                                if (errorLevelValue4 != null && errorLevelValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance4 = ((string)errorLevelValue4);
                                                                    innerHealthErrorInstance2.ErrorLevel = errorLevelInstance4;
                                                                }
                                                                
                                                                JToken errorCategoryValue4 = innerHealthErrorsValue2["errorCategory"];
                                                                if (errorCategoryValue4 != null && errorCategoryValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance4 = ((string)errorCategoryValue4);
                                                                    innerHealthErrorInstance2.ErrorCategory = errorCategoryInstance4;
                                                                }
                                                                
                                                                JToken errorCodeValue4 = innerHealthErrorsValue2["errorCode"];
                                                                if (errorCodeValue4 != null && errorCodeValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance4 = ((string)errorCodeValue4);
                                                                    innerHealthErrorInstance2.ErrorCode = errorCodeInstance4;
                                                                }
                                                                
                                                                JToken errorMessageValue4 = innerHealthErrorsValue2["errorMessage"];
                                                                if (errorMessageValue4 != null && errorMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance4 = ((string)errorMessageValue4);
                                                                    innerHealthErrorInstance2.ErrorMessage = errorMessageInstance4;
                                                                }
                                                                
                                                                JToken summaryMessageValue4 = innerHealthErrorsValue2["summaryMessage"];
                                                                if (summaryMessageValue4 != null && summaryMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance4 = ((string)summaryMessageValue4);
                                                                    innerHealthErrorInstance2.SummaryMessage = summaryMessageInstance4;
                                                                }
                                                                
                                                                JToken possibleCausesValue4 = innerHealthErrorsValue2["possibleCauses"];
                                                                if (possibleCausesValue4 != null && possibleCausesValue4.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance4 = ((string)possibleCausesValue4);
                                                                    innerHealthErrorInstance2.PossibleCauses = possibleCausesInstance4;
                                                                }
                                                                
                                                                JToken recommendedActionValue4 = innerHealthErrorsValue2["recommendedAction"];
                                                                if (recommendedActionValue4 != null && recommendedActionValue4.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance4 = ((string)recommendedActionValue4);
                                                                    innerHealthErrorInstance2.RecommendedAction = recommendedActionInstance4;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue4 = innerHealthErrorsValue2["creationTimeUtc"];
                                                                if (creationTimeUtcValue4 != null && creationTimeUtcValue4.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance4 = ((DateTime)creationTimeUtcValue4);
                                                                    innerHealthErrorInstance2.CreationTimeUtc = creationTimeUtcInstance4;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue4 = innerHealthErrorsValue2["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue4 != null && recoveryProviderErrorMessageValue4.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance4 = ((string)recoveryProviderErrorMessageValue4);
                                                                    innerHealthErrorInstance2.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance4;
                                                                }
                                                                
                                                                JToken entityIdValue4 = innerHealthErrorsValue2["entityId"];
                                                                if (entityIdValue4 != null && entityIdValue4.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance4 = ((string)entityIdValue4);
                                                                    innerHealthErrorInstance2.EntityId = entityIdInstance4;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken healthErrorsArray2 = masterTargetServersValue["healthErrors"];
                                                if (healthErrorsArray2 != null && healthErrorsArray2.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken healthErrorsValue2 in ((JArray)healthErrorsArray2))
                                                    {
                                                        HealthError healthErrorInstance3 = new HealthError();
                                                        masterTargetServerInstance.HealthErrors.Add(healthErrorInstance3);
                                                        
                                                        JToken errorSourceValue5 = healthErrorsValue2["errorSource"];
                                                        if (errorSourceValue5 != null && errorSourceValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance5 = ((string)errorSourceValue5);
                                                            healthErrorInstance3.ErrorSource = errorSourceInstance5;
                                                        }
                                                        
                                                        JToken errorTypeValue5 = healthErrorsValue2["errorType"];
                                                        if (errorTypeValue5 != null && errorTypeValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance5 = ((string)errorTypeValue5);
                                                            healthErrorInstance3.ErrorType = errorTypeInstance5;
                                                        }
                                                        
                                                        JToken errorLevelValue5 = healthErrorsValue2["errorLevel"];
                                                        if (errorLevelValue5 != null && errorLevelValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance5 = ((string)errorLevelValue5);
                                                            healthErrorInstance3.ErrorLevel = errorLevelInstance5;
                                                        }
                                                        
                                                        JToken errorCategoryValue5 = healthErrorsValue2["errorCategory"];
                                                        if (errorCategoryValue5 != null && errorCategoryValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance5 = ((string)errorCategoryValue5);
                                                            healthErrorInstance3.ErrorCategory = errorCategoryInstance5;
                                                        }
                                                        
                                                        JToken errorCodeValue5 = healthErrorsValue2["errorCode"];
                                                        if (errorCodeValue5 != null && errorCodeValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance5 = ((string)errorCodeValue5);
                                                            healthErrorInstance3.ErrorCode = errorCodeInstance5;
                                                        }
                                                        
                                                        JToken errorMessageValue5 = healthErrorsValue2["errorMessage"];
                                                        if (errorMessageValue5 != null && errorMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance5 = ((string)errorMessageValue5);
                                                            healthErrorInstance3.ErrorMessage = errorMessageInstance5;
                                                        }
                                                        
                                                        JToken summaryMessageValue5 = healthErrorsValue2["summaryMessage"];
                                                        if (summaryMessageValue5 != null && summaryMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance5 = ((string)summaryMessageValue5);
                                                            healthErrorInstance3.SummaryMessage = summaryMessageInstance5;
                                                        }
                                                        
                                                        JToken possibleCausesValue5 = healthErrorsValue2["possibleCauses"];
                                                        if (possibleCausesValue5 != null && possibleCausesValue5.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance5 = ((string)possibleCausesValue5);
                                                            healthErrorInstance3.PossibleCauses = possibleCausesInstance5;
                                                        }
                                                        
                                                        JToken recommendedActionValue5 = healthErrorsValue2["recommendedAction"];
                                                        if (recommendedActionValue5 != null && recommendedActionValue5.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance5 = ((string)recommendedActionValue5);
                                                            healthErrorInstance3.RecommendedAction = recommendedActionInstance5;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue5 = healthErrorsValue2["creationTimeUtc"];
                                                        if (creationTimeUtcValue5 != null && creationTimeUtcValue5.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance5 = ((DateTime)creationTimeUtcValue5);
                                                            healthErrorInstance3.CreationTimeUtc = creationTimeUtcInstance5;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue5 = healthErrorsValue2["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue5 != null && recoveryProviderErrorMessageValue5.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance5 = ((string)recoveryProviderErrorMessageValue5);
                                                            healthErrorInstance3.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance5;
                                                        }
                                                        
                                                        JToken entityIdValue5 = healthErrorsValue2["entityId"];
                                                        if (entityIdValue5 != null && entityIdValue5.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance5 = ((string)entityIdValue5);
                                                            healthErrorInstance3.EntityId = entityIdInstance5;
                                                        }
                                                        
                                                        JToken innerHealthErrorsArray3 = healthErrorsValue2["innerHealthErrors"];
                                                        if (innerHealthErrorsArray3 != null && innerHealthErrorsArray3.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken innerHealthErrorsValue3 in ((JArray)innerHealthErrorsArray3))
                                                            {
                                                                InnerHealthError innerHealthErrorInstance3 = new InnerHealthError();
                                                                healthErrorInstance3.InnerHealthErrors.Add(innerHealthErrorInstance3);
                                                                
                                                                JToken errorSourceValue6 = innerHealthErrorsValue3["errorSource"];
                                                                if (errorSourceValue6 != null && errorSourceValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance6 = ((string)errorSourceValue6);
                                                                    innerHealthErrorInstance3.ErrorSource = errorSourceInstance6;
                                                                }
                                                                
                                                                JToken errorTypeValue6 = innerHealthErrorsValue3["errorType"];
                                                                if (errorTypeValue6 != null && errorTypeValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance6 = ((string)errorTypeValue6);
                                                                    innerHealthErrorInstance3.ErrorType = errorTypeInstance6;
                                                                }
                                                                
                                                                JToken errorLevelValue6 = innerHealthErrorsValue3["errorLevel"];
                                                                if (errorLevelValue6 != null && errorLevelValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance6 = ((string)errorLevelValue6);
                                                                    innerHealthErrorInstance3.ErrorLevel = errorLevelInstance6;
                                                                }
                                                                
                                                                JToken errorCategoryValue6 = innerHealthErrorsValue3["errorCategory"];
                                                                if (errorCategoryValue6 != null && errorCategoryValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance6 = ((string)errorCategoryValue6);
                                                                    innerHealthErrorInstance3.ErrorCategory = errorCategoryInstance6;
                                                                }
                                                                
                                                                JToken errorCodeValue6 = innerHealthErrorsValue3["errorCode"];
                                                                if (errorCodeValue6 != null && errorCodeValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance6 = ((string)errorCodeValue6);
                                                                    innerHealthErrorInstance3.ErrorCode = errorCodeInstance6;
                                                                }
                                                                
                                                                JToken errorMessageValue6 = innerHealthErrorsValue3["errorMessage"];
                                                                if (errorMessageValue6 != null && errorMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance6 = ((string)errorMessageValue6);
                                                                    innerHealthErrorInstance3.ErrorMessage = errorMessageInstance6;
                                                                }
                                                                
                                                                JToken summaryMessageValue6 = innerHealthErrorsValue3["summaryMessage"];
                                                                if (summaryMessageValue6 != null && summaryMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance6 = ((string)summaryMessageValue6);
                                                                    innerHealthErrorInstance3.SummaryMessage = summaryMessageInstance6;
                                                                }
                                                                
                                                                JToken possibleCausesValue6 = innerHealthErrorsValue3["possibleCauses"];
                                                                if (possibleCausesValue6 != null && possibleCausesValue6.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance6 = ((string)possibleCausesValue6);
                                                                    innerHealthErrorInstance3.PossibleCauses = possibleCausesInstance6;
                                                                }
                                                                
                                                                JToken recommendedActionValue6 = innerHealthErrorsValue3["recommendedAction"];
                                                                if (recommendedActionValue6 != null && recommendedActionValue6.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance6 = ((string)recommendedActionValue6);
                                                                    innerHealthErrorInstance3.RecommendedAction = recommendedActionInstance6;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue6 = innerHealthErrorsValue3["creationTimeUtc"];
                                                                if (creationTimeUtcValue6 != null && creationTimeUtcValue6.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance6 = ((DateTime)creationTimeUtcValue6);
                                                                    innerHealthErrorInstance3.CreationTimeUtc = creationTimeUtcInstance6;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue6 = innerHealthErrorsValue3["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue6 != null && recoveryProviderErrorMessageValue6.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance6 = ((string)recoveryProviderErrorMessageValue6);
                                                                    innerHealthErrorInstance3.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance6;
                                                                }
                                                                
                                                                JToken entityIdValue6 = innerHealthErrorsValue3["entityId"];
                                                                if (entityIdValue6 != null && entityIdValue6.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance6 = ((string)entityIdValue6);
                                                                    innerHealthErrorInstance3.EntityId = entityIdInstance6;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken diskCountValue = masterTargetServersValue["diskCount"];
                                                if (diskCountValue != null && diskCountValue.Type != JTokenType.Null)
                                                {
                                                    int diskCountInstance = ((int)diskCountValue);
                                                    masterTargetServerInstance.DiskCount = diskCountInstance;
                                                }
                                                
                                                JToken osVersionValue2 = masterTargetServersValue["osVersion"];
                                                if (osVersionValue2 != null && osVersionValue2.Type != JTokenType.Null)
                                                {
                                                    string osVersionInstance2 = ((string)osVersionValue2);
                                                    masterTargetServerInstance.OsVersion = osVersionInstance2;
                                                }
                                                
                                                JToken agentExpiryDateValue2 = masterTargetServersValue["agentExpiryDate"];
                                                if (agentExpiryDateValue2 != null && agentExpiryDateValue2.Type != JTokenType.Null)
                                                {
                                                    DateTime agentExpiryDateInstance2 = ((DateTime)agentExpiryDateValue2);
                                                    masterTargetServerInstance.AgentExpiryDate = agentExpiryDateInstance2;
                                                }
                                                
                                                JToken marsAgentVersionValue = masterTargetServersValue["marsAgentVersion"];
                                                if (marsAgentVersionValue != null && marsAgentVersionValue.Type != JTokenType.Null)
                                                {
                                                    string marsAgentVersionInstance = ((string)marsAgentVersionValue);
                                                    masterTargetServerInstance.MarsAgentVersion = marsAgentVersionInstance;
                                                }
                                                
                                                JToken marsAgentExpiryDateValue = masterTargetServersValue["marsAgentExpiryDate"];
                                                if (marsAgentExpiryDateValue != null && marsAgentExpiryDateValue.Type != JTokenType.Null)
                                                {
                                                    DateTime marsAgentExpiryDateInstance = ((DateTime)marsAgentExpiryDateValue);
                                                    masterTargetServerInstance.MarsAgentExpiryDate = marsAgentExpiryDateInstance;
                                                }
                                                
                                                JToken agentVersionDetailsValue2 = masterTargetServersValue["agentVersionDetails"];
                                                if (agentVersionDetailsValue2 != null && agentVersionDetailsValue2.Type != JTokenType.Null)
                                                {
                                                    VersionDetails agentVersionDetailsInstance2 = new VersionDetails();
                                                    masterTargetServerInstance.AgentVersionDetails = agentVersionDetailsInstance2;
                                                    
                                                    JToken versionValue3 = agentVersionDetailsValue2["version"];
                                                    if (versionValue3 != null && versionValue3.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance3 = ((string)versionValue3);
                                                        agentVersionDetailsInstance2.Version = versionInstance3;
                                                    }
                                                    
                                                    JToken expiryDateValue2 = agentVersionDetailsValue2["expiryDate"];
                                                    if (expiryDateValue2 != null && expiryDateValue2.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance2 = ((DateTime)expiryDateValue2);
                                                        agentVersionDetailsInstance2.ExpiryDate = expiryDateInstance2;
                                                    }
                                                    
                                                    JToken statusValue2 = agentVersionDetailsValue2["status"];
                                                    if (statusValue2 != null && statusValue2.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance2 = ((string)statusValue2);
                                                        agentVersionDetailsInstance2.Status = statusInstance2;
                                                    }
                                                }
                                                
                                                JToken marsAgentVersionDetailsValue = masterTargetServersValue["marsAgentVersionDetails"];
                                                if (marsAgentVersionDetailsValue != null && marsAgentVersionDetailsValue.Type != JTokenType.Null)
                                                {
                                                    VersionDetails marsAgentVersionDetailsInstance = new VersionDetails();
                                                    masterTargetServerInstance.MarsAgentVersionDetails = marsAgentVersionDetailsInstance;
                                                    
                                                    JToken versionValue4 = marsAgentVersionDetailsValue["version"];
                                                    if (versionValue4 != null && versionValue4.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance4 = ((string)versionValue4);
                                                        marsAgentVersionDetailsInstance.Version = versionInstance4;
                                                    }
                                                    
                                                    JToken expiryDateValue3 = marsAgentVersionDetailsValue["expiryDate"];
                                                    if (expiryDateValue3 != null && expiryDateValue3.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance3 = ((DateTime)expiryDateValue3);
                                                        marsAgentVersionDetailsInstance.ExpiryDate = expiryDateInstance3;
                                                    }
                                                    
                                                    JToken statusValue3 = marsAgentVersionDetailsValue["status"];
                                                    if (statusValue3 != null && statusValue3.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance3 = ((string)statusValue3);
                                                        marsAgentVersionDetailsInstance.Status = statusInstance3;
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken runAsAccountsArray = customDetailsValue["runAsAccounts"];
                                        if (runAsAccountsArray != null && runAsAccountsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken runAsAccountsValue in ((JArray)runAsAccountsArray))
                                            {
                                                RunAsAccount runAsAccountInstance = new RunAsAccount();
                                                vMwareFabricDetailsInstance.RunAsAccounts.Add(runAsAccountInstance);
                                                
                                                JToken accountIdValue = runAsAccountsValue["accountId"];
                                                if (accountIdValue != null && accountIdValue.Type != JTokenType.Null)
                                                {
                                                    string accountIdInstance = ((string)accountIdValue);
                                                    runAsAccountInstance.AccountId = accountIdInstance;
                                                }
                                                
                                                JToken accountNameValue = runAsAccountsValue["accountName"];
                                                if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                                                {
                                                    string accountNameInstance = ((string)accountNameValue);
                                                    runAsAccountInstance.AccountName = accountNameInstance;
                                                }
                                            }
                                        }
                                        
                                        JToken replicationPairCountValue2 = customDetailsValue["replicationPairCount"];
                                        if (replicationPairCountValue2 != null && replicationPairCountValue2.Type != JTokenType.Null)
                                        {
                                            string replicationPairCountInstance2 = ((string)replicationPairCountValue2);
                                            vMwareFabricDetailsInstance.ReplicationPairCount = replicationPairCountInstance2;
                                        }
                                        
                                        JToken processServerCountValue = customDetailsValue["processServerCount"];
                                        if (processServerCountValue != null && processServerCountValue.Type != JTokenType.Null)
                                        {
                                            string processServerCountInstance = ((string)processServerCountValue);
                                            vMwareFabricDetailsInstance.ProcessServerCount = processServerCountInstance;
                                        }
                                        
                                        JToken agentCountValue = customDetailsValue["agentCount"];
                                        if (agentCountValue != null && agentCountValue.Type != JTokenType.Null)
                                        {
                                            string agentCountInstance = ((string)agentCountValue);
                                            vMwareFabricDetailsInstance.AgentCount = agentCountInstance;
                                        }
                                        
                                        JToken protectedServersValue = customDetailsValue["protectedServers"];
                                        if (protectedServersValue != null && protectedServersValue.Type != JTokenType.Null)
                                        {
                                            string protectedServersInstance = ((string)protectedServersValue);
                                            vMwareFabricDetailsInstance.ProtectedServers = protectedServersInstance;
                                        }
                                        
                                        JToken systemLoadValue2 = customDetailsValue["systemLoad"];
                                        if (systemLoadValue2 != null && systemLoadValue2.Type != JTokenType.Null)
                                        {
                                            string systemLoadInstance2 = ((string)systemLoadValue2);
                                            vMwareFabricDetailsInstance.SystemLoad = systemLoadInstance2;
                                        }
                                        
                                        JToken systemLoadStatusValue2 = customDetailsValue["systemLoadStatus"];
                                        if (systemLoadStatusValue2 != null && systemLoadStatusValue2.Type != JTokenType.Null)
                                        {
                                            string systemLoadStatusInstance2 = ((string)systemLoadStatusValue2);
                                            vMwareFabricDetailsInstance.SystemLoadStatus = systemLoadStatusInstance2;
                                        }
                                        
                                        JToken cpuLoadValue2 = customDetailsValue["cpuLoad"];
                                        if (cpuLoadValue2 != null && cpuLoadValue2.Type != JTokenType.Null)
                                        {
                                            string cpuLoadInstance2 = ((string)cpuLoadValue2);
                                            vMwareFabricDetailsInstance.CpuLoad = cpuLoadInstance2;
                                        }
                                        
                                        JToken cpuLoadStatusValue2 = customDetailsValue["cpuLoadStatus"];
                                        if (cpuLoadStatusValue2 != null && cpuLoadStatusValue2.Type != JTokenType.Null)
                                        {
                                            string cpuLoadStatusInstance2 = ((string)cpuLoadStatusValue2);
                                            vMwareFabricDetailsInstance.CpuLoadStatus = cpuLoadStatusInstance2;
                                        }
                                        
                                        JToken totalMemoryInBytesValue2 = customDetailsValue["totalMemoryInBytes"];
                                        if (totalMemoryInBytesValue2 != null && totalMemoryInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long totalMemoryInBytesInstance2 = ((long)totalMemoryInBytesValue2);
                                            vMwareFabricDetailsInstance.TotalMemoryInBytes = totalMemoryInBytesInstance2;
                                        }
                                        
                                        JToken availableMemoryInBytesValue2 = customDetailsValue["availableMemoryInBytes"];
                                        if (availableMemoryInBytesValue2 != null && availableMemoryInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long availableMemoryInBytesInstance2 = ((long)availableMemoryInBytesValue2);
                                            vMwareFabricDetailsInstance.AvailableMemoryInBytes = availableMemoryInBytesInstance2;
                                        }
                                        
                                        JToken memoryUsageStatusValue2 = customDetailsValue["memoryUsageStatus"];
                                        if (memoryUsageStatusValue2 != null && memoryUsageStatusValue2.Type != JTokenType.Null)
                                        {
                                            string memoryUsageStatusInstance2 = ((string)memoryUsageStatusValue2);
                                            vMwareFabricDetailsInstance.MemoryUsageStatus = memoryUsageStatusInstance2;
                                        }
                                        
                                        JToken totalSpaceInBytesValue2 = customDetailsValue["totalSpaceInBytes"];
                                        if (totalSpaceInBytesValue2 != null && totalSpaceInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long totalSpaceInBytesInstance2 = ((long)totalSpaceInBytesValue2);
                                            vMwareFabricDetailsInstance.TotalSpaceInBytes = totalSpaceInBytesInstance2;
                                        }
                                        
                                        JToken availableSpaceInBytesValue2 = customDetailsValue["availableSpaceInBytes"];
                                        if (availableSpaceInBytesValue2 != null && availableSpaceInBytesValue2.Type != JTokenType.Null)
                                        {
                                            long availableSpaceInBytesInstance2 = ((long)availableSpaceInBytesValue2);
                                            vMwareFabricDetailsInstance.AvailableSpaceInBytes = availableSpaceInBytesInstance2;
                                        }
                                        
                                        JToken spaceUsageStatusValue2 = customDetailsValue["spaceUsageStatus"];
                                        if (spaceUsageStatusValue2 != null && spaceUsageStatusValue2.Type != JTokenType.Null)
                                        {
                                            string spaceUsageStatusInstance2 = ((string)spaceUsageStatusValue2);
                                            vMwareFabricDetailsInstance.SpaceUsageStatus = spaceUsageStatusInstance2;
                                        }
                                        
                                        JToken webLoadValue = customDetailsValue["webLoad"];
                                        if (webLoadValue != null && webLoadValue.Type != JTokenType.Null)
                                        {
                                            string webLoadInstance = ((string)webLoadValue);
                                            vMwareFabricDetailsInstance.WebLoad = webLoadInstance;
                                        }
                                        
                                        JToken webLoadStatusValue = customDetailsValue["webLoadStatus"];
                                        if (webLoadStatusValue != null && webLoadStatusValue.Type != JTokenType.Null)
                                        {
                                            string webLoadStatusInstance = ((string)webLoadStatusValue);
                                            vMwareFabricDetailsInstance.WebLoadStatus = webLoadStatusInstance;
                                        }
                                        
                                        JToken databaseServerLoadValue = customDetailsValue["databaseServerLoad"];
                                        if (databaseServerLoadValue != null && databaseServerLoadValue.Type != JTokenType.Null)
                                        {
                                            string databaseServerLoadInstance = ((string)databaseServerLoadValue);
                                            vMwareFabricDetailsInstance.DatabaseServerLoad = databaseServerLoadInstance;
                                        }
                                        
                                        JToken databaseServerLoadStatusValue = customDetailsValue["databaseServerLoadStatus"];
                                        if (databaseServerLoadStatusValue != null && databaseServerLoadStatusValue.Type != JTokenType.Null)
                                        {
                                            string databaseServerLoadStatusInstance = ((string)databaseServerLoadStatusValue);
                                            vMwareFabricDetailsInstance.DatabaseServerLoadStatus = databaseServerLoadStatusInstance;
                                        }
                                        
                                        JToken csServiceStatusValue = customDetailsValue["csServiceStatus"];
                                        if (csServiceStatusValue != null && csServiceStatusValue.Type != JTokenType.Null)
                                        {
                                            string csServiceStatusInstance = ((string)csServiceStatusValue);
                                            vMwareFabricDetailsInstance.CsServiceStatus = csServiceStatusInstance;
                                        }
                                        
                                        JToken ipAddressValue3 = customDetailsValue["ipAddress"];
                                        if (ipAddressValue3 != null && ipAddressValue3.Type != JTokenType.Null)
                                        {
                                            string ipAddressInstance3 = ((string)ipAddressValue3);
                                            vMwareFabricDetailsInstance.IpAddress = ipAddressInstance3;
                                        }
                                        
                                        JToken agentVersionValue3 = customDetailsValue["agentVersion"];
                                        if (agentVersionValue3 != null && agentVersionValue3.Type != JTokenType.Null)
                                        {
                                            string agentVersionInstance3 = ((string)agentVersionValue3);
                                            vMwareFabricDetailsInstance.AgentVersion = agentVersionInstance3;
                                        }
                                        
                                        JToken hostNameValue = customDetailsValue["hostName"];
                                        if (hostNameValue != null && hostNameValue.Type != JTokenType.Null)
                                        {
                                            string hostNameInstance = ((string)hostNameValue);
                                            vMwareFabricDetailsInstance.HostName = hostNameInstance;
                                        }
                                        
                                        JToken lastHeartbeatValue3 = customDetailsValue["lastHeartbeat"];
                                        if (lastHeartbeatValue3 != null && lastHeartbeatValue3.Type != JTokenType.Null)
                                        {
                                            DateTime lastHeartbeatInstance3 = ((DateTime)lastHeartbeatValue3);
                                            vMwareFabricDetailsInstance.LastHeartbeat = lastHeartbeatInstance3;
                                        }
                                        
                                        JToken versionStatusValue3 = customDetailsValue["versionStatus"];
                                        if (versionStatusValue3 != null && versionStatusValue3.Type != JTokenType.Null)
                                        {
                                            string versionStatusInstance3 = ((string)versionStatusValue3);
                                            vMwareFabricDetailsInstance.VersionStatus = versionStatusInstance3;
                                        }
                                        
                                        JToken sslCertExpiryDateValue2 = customDetailsValue["sslCertExpiryDate"];
                                        if (sslCertExpiryDateValue2 != null && sslCertExpiryDateValue2.Type != JTokenType.Null)
                                        {
                                            DateTime sslCertExpiryDateInstance2 = ((DateTime)sslCertExpiryDateValue2);
                                            vMwareFabricDetailsInstance.SslCertExpiryDate = sslCertExpiryDateInstance2;
                                        }
                                        
                                        JToken sslCertExpiryRemainingDaysValue2 = customDetailsValue["sslCertExpiryRemainingDays"];
                                        if (sslCertExpiryRemainingDaysValue2 != null && sslCertExpiryRemainingDaysValue2.Type != JTokenType.Null)
                                        {
                                            int sslCertExpiryRemainingDaysInstance2 = ((int)sslCertExpiryRemainingDaysValue2);
                                            vMwareFabricDetailsInstance.SslCertExpiryRemainingDays = sslCertExpiryRemainingDaysInstance2;
                                        }
                                        
                                        JToken psTemplateVersionValue = customDetailsValue["psTemplateVersion"];
                                        if (psTemplateVersionValue != null && psTemplateVersionValue.Type != JTokenType.Null)
                                        {
                                            string psTemplateVersionInstance = ((string)psTemplateVersionValue);
                                            vMwareFabricDetailsInstance.PsTemplateVersion = psTemplateVersionInstance;
                                        }
                                        
                                        JToken agentExpiryDateValue3 = customDetailsValue["agentExpiryDate"];
                                        if (agentExpiryDateValue3 != null && agentExpiryDateValue3.Type != JTokenType.Null)
                                        {
                                            DateTime agentExpiryDateInstance3 = ((DateTime)agentExpiryDateValue3);
                                            vMwareFabricDetailsInstance.AgentExpiryDate = agentExpiryDateInstance3;
                                        }
                                        
                                        JToken agentVersionDetailsValue3 = customDetailsValue["agentVersionDetails"];
                                        if (agentVersionDetailsValue3 != null && agentVersionDetailsValue3.Type != JTokenType.Null)
                                        {
                                            VersionDetails agentVersionDetailsInstance3 = new VersionDetails();
                                            vMwareFabricDetailsInstance.AgentVersionDetails = agentVersionDetailsInstance3;
                                            
                                            JToken versionValue5 = agentVersionDetailsValue3["version"];
                                            if (versionValue5 != null && versionValue5.Type != JTokenType.Null)
                                            {
                                                string versionInstance5 = ((string)versionValue5);
                                                agentVersionDetailsInstance3.Version = versionInstance5;
                                            }
                                            
                                            JToken expiryDateValue4 = agentVersionDetailsValue3["expiryDate"];
                                            if (expiryDateValue4 != null && expiryDateValue4.Type != JTokenType.Null)
                                            {
                                                DateTime expiryDateInstance4 = ((DateTime)expiryDateValue4);
                                                agentVersionDetailsInstance3.ExpiryDate = expiryDateInstance4;
                                            }
                                            
                                            JToken statusValue4 = agentVersionDetailsValue3["status"];
                                            if (statusValue4 != null && statusValue4.Type != JTokenType.Null)
                                            {
                                                string statusInstance4 = ((string)statusValue4);
                                                agentVersionDetailsInstance3.Status = statusInstance4;
                                            }
                                        }
                                        
                                        JToken instanceTypeValue4 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue4 != null && instanceTypeValue4.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance4 = ((string)instanceTypeValue4);
                                            vMwareFabricDetailsInstance.InstanceType = instanceTypeInstance4;
                                        }
                                        propertiesInstance.CustomDetails = vMwareFabricDetailsInstance;
                                    }
                                    if (typeName == "VMwareV2")
                                    {
                                        VMwareV2FabricSpecificDetails vMwareV2FabricSpecificDetailsInstance = new VMwareV2FabricSpecificDetails();
                                        
                                        JToken vmwareSiteIdValue = customDetailsValue["vmwareSiteId"];
                                        if (vmwareSiteIdValue != null && vmwareSiteIdValue.Type != JTokenType.Null)
                                        {
                                            string vmwareSiteIdInstance = ((string)vmwareSiteIdValue);
                                            vMwareV2FabricSpecificDetailsInstance.VMwareSiteId = vmwareSiteIdInstance;
                                        }
                                        
                                        JToken migrationSolutionIdValue = customDetailsValue["migrationSolutionId"];
                                        if (migrationSolutionIdValue != null && migrationSolutionIdValue.Type != JTokenType.Null)
                                        {
                                            string migrationSolutionIdInstance = ((string)migrationSolutionIdValue);
                                            vMwareV2FabricSpecificDetailsInstance.MigrationSolutionId = migrationSolutionIdInstance;
                                        }
                                        
                                        JToken serviceEndpointValue = customDetailsValue["serviceEndpoint"];
                                        if (serviceEndpointValue != null && serviceEndpointValue.Type != JTokenType.Null)
                                        {
                                            string serviceEndpointInstance = ((string)serviceEndpointValue);
                                            vMwareV2FabricSpecificDetailsInstance.ServiceEndpoint = serviceEndpointInstance;
                                        }
                                        
                                        JToken instanceTypeValue5 = customDetailsValue["instanceType"];
                                        if (instanceTypeValue5 != null && instanceTypeValue5.Type != JTokenType.Null)
                                        {
                                            string instanceTypeInstance5 = ((string)instanceTypeValue5);
                                            vMwareV2FabricSpecificDetailsInstance.InstanceType = instanceTypeInstance5;
                                        }
                                        propertiesInstance.CustomDetails = vMwareV2FabricSpecificDetailsInstance;
                                    }
                                }
                                
                                JToken healthErrorDetailsArray = propertiesValue["healthErrorDetails"];
                                if (healthErrorDetailsArray != null && healthErrorDetailsArray.Type != JTokenType.Null)
                                {
                                    foreach (JToken healthErrorDetailsValue in ((JArray)healthErrorDetailsArray))
                                    {
                                        HealthError healthErrorInstance4 = new HealthError();
                                        propertiesInstance.HealthErrorDetails.Add(healthErrorInstance4);
                                        
                                        JToken errorSourceValue7 = healthErrorDetailsValue["errorSource"];
                                        if (errorSourceValue7 != null && errorSourceValue7.Type != JTokenType.Null)
                                        {
                                            string errorSourceInstance7 = ((string)errorSourceValue7);
                                            healthErrorInstance4.ErrorSource = errorSourceInstance7;
                                        }
                                        
                                        JToken errorTypeValue7 = healthErrorDetailsValue["errorType"];
                                        if (errorTypeValue7 != null && errorTypeValue7.Type != JTokenType.Null)
                                        {
                                            string errorTypeInstance7 = ((string)errorTypeValue7);
                                            healthErrorInstance4.ErrorType = errorTypeInstance7;
                                        }
                                        
                                        JToken errorLevelValue7 = healthErrorDetailsValue["errorLevel"];
                                        if (errorLevelValue7 != null && errorLevelValue7.Type != JTokenType.Null)
                                        {
                                            string errorLevelInstance7 = ((string)errorLevelValue7);
                                            healthErrorInstance4.ErrorLevel = errorLevelInstance7;
                                        }
                                        
                                        JToken errorCategoryValue7 = healthErrorDetailsValue["errorCategory"];
                                        if (errorCategoryValue7 != null && errorCategoryValue7.Type != JTokenType.Null)
                                        {
                                            string errorCategoryInstance7 = ((string)errorCategoryValue7);
                                            healthErrorInstance4.ErrorCategory = errorCategoryInstance7;
                                        }
                                        
                                        JToken errorCodeValue7 = healthErrorDetailsValue["errorCode"];
                                        if (errorCodeValue7 != null && errorCodeValue7.Type != JTokenType.Null)
                                        {
                                            string errorCodeInstance7 = ((string)errorCodeValue7);
                                            healthErrorInstance4.ErrorCode = errorCodeInstance7;
                                        }
                                        
                                        JToken errorMessageValue7 = healthErrorDetailsValue["errorMessage"];
                                        if (errorMessageValue7 != null && errorMessageValue7.Type != JTokenType.Null)
                                        {
                                            string errorMessageInstance7 = ((string)errorMessageValue7);
                                            healthErrorInstance4.ErrorMessage = errorMessageInstance7;
                                        }
                                        
                                        JToken summaryMessageValue7 = healthErrorDetailsValue["summaryMessage"];
                                        if (summaryMessageValue7 != null && summaryMessageValue7.Type != JTokenType.Null)
                                        {
                                            string summaryMessageInstance7 = ((string)summaryMessageValue7);
                                            healthErrorInstance4.SummaryMessage = summaryMessageInstance7;
                                        }
                                        
                                        JToken possibleCausesValue7 = healthErrorDetailsValue["possibleCauses"];
                                        if (possibleCausesValue7 != null && possibleCausesValue7.Type != JTokenType.Null)
                                        {
                                            string possibleCausesInstance7 = ((string)possibleCausesValue7);
                                            healthErrorInstance4.PossibleCauses = possibleCausesInstance7;
                                        }
                                        
                                        JToken recommendedActionValue7 = healthErrorDetailsValue["recommendedAction"];
                                        if (recommendedActionValue7 != null && recommendedActionValue7.Type != JTokenType.Null)
                                        {
                                            string recommendedActionInstance7 = ((string)recommendedActionValue7);
                                            healthErrorInstance4.RecommendedAction = recommendedActionInstance7;
                                        }
                                        
                                        JToken creationTimeUtcValue7 = healthErrorDetailsValue["creationTimeUtc"];
                                        if (creationTimeUtcValue7 != null && creationTimeUtcValue7.Type != JTokenType.Null)
                                        {
                                            DateTime creationTimeUtcInstance7 = ((DateTime)creationTimeUtcValue7);
                                            healthErrorInstance4.CreationTimeUtc = creationTimeUtcInstance7;
                                        }
                                        
                                        JToken recoveryProviderErrorMessageValue7 = healthErrorDetailsValue["recoveryProviderErrorMessage"];
                                        if (recoveryProviderErrorMessageValue7 != null && recoveryProviderErrorMessageValue7.Type != JTokenType.Null)
                                        {
                                            string recoveryProviderErrorMessageInstance7 = ((string)recoveryProviderErrorMessageValue7);
                                            healthErrorInstance4.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance7;
                                        }
                                        
                                        JToken entityIdValue7 = healthErrorDetailsValue["entityId"];
                                        if (entityIdValue7 != null && entityIdValue7.Type != JTokenType.Null)
                                        {
                                            string entityIdInstance7 = ((string)entityIdValue7);
                                            healthErrorInstance4.EntityId = entityIdInstance7;
                                        }
                                        
                                        JToken innerHealthErrorsArray4 = healthErrorDetailsValue["innerHealthErrors"];
                                        if (innerHealthErrorsArray4 != null && innerHealthErrorsArray4.Type != JTokenType.Null)
                                        {
                                            foreach (JToken innerHealthErrorsValue4 in ((JArray)innerHealthErrorsArray4))
                                            {
                                                InnerHealthError innerHealthErrorInstance4 = new InnerHealthError();
                                                healthErrorInstance4.InnerHealthErrors.Add(innerHealthErrorInstance4);
                                                
                                                JToken errorSourceValue8 = innerHealthErrorsValue4["errorSource"];
                                                if (errorSourceValue8 != null && errorSourceValue8.Type != JTokenType.Null)
                                                {
                                                    string errorSourceInstance8 = ((string)errorSourceValue8);
                                                    innerHealthErrorInstance4.ErrorSource = errorSourceInstance8;
                                                }
                                                
                                                JToken errorTypeValue8 = innerHealthErrorsValue4["errorType"];
                                                if (errorTypeValue8 != null && errorTypeValue8.Type != JTokenType.Null)
                                                {
                                                    string errorTypeInstance8 = ((string)errorTypeValue8);
                                                    innerHealthErrorInstance4.ErrorType = errorTypeInstance8;
                                                }
                                                
                                                JToken errorLevelValue8 = innerHealthErrorsValue4["errorLevel"];
                                                if (errorLevelValue8 != null && errorLevelValue8.Type != JTokenType.Null)
                                                {
                                                    string errorLevelInstance8 = ((string)errorLevelValue8);
                                                    innerHealthErrorInstance4.ErrorLevel = errorLevelInstance8;
                                                }
                                                
                                                JToken errorCategoryValue8 = innerHealthErrorsValue4["errorCategory"];
                                                if (errorCategoryValue8 != null && errorCategoryValue8.Type != JTokenType.Null)
                                                {
                                                    string errorCategoryInstance8 = ((string)errorCategoryValue8);
                                                    innerHealthErrorInstance4.ErrorCategory = errorCategoryInstance8;
                                                }
                                                
                                                JToken errorCodeValue8 = innerHealthErrorsValue4["errorCode"];
                                                if (errorCodeValue8 != null && errorCodeValue8.Type != JTokenType.Null)
                                                {
                                                    string errorCodeInstance8 = ((string)errorCodeValue8);
                                                    innerHealthErrorInstance4.ErrorCode = errorCodeInstance8;
                                                }
                                                
                                                JToken errorMessageValue8 = innerHealthErrorsValue4["errorMessage"];
                                                if (errorMessageValue8 != null && errorMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string errorMessageInstance8 = ((string)errorMessageValue8);
                                                    innerHealthErrorInstance4.ErrorMessage = errorMessageInstance8;
                                                }
                                                
                                                JToken summaryMessageValue8 = innerHealthErrorsValue4["summaryMessage"];
                                                if (summaryMessageValue8 != null && summaryMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string summaryMessageInstance8 = ((string)summaryMessageValue8);
                                                    innerHealthErrorInstance4.SummaryMessage = summaryMessageInstance8;
                                                }
                                                
                                                JToken possibleCausesValue8 = innerHealthErrorsValue4["possibleCauses"];
                                                if (possibleCausesValue8 != null && possibleCausesValue8.Type != JTokenType.Null)
                                                {
                                                    string possibleCausesInstance8 = ((string)possibleCausesValue8);
                                                    innerHealthErrorInstance4.PossibleCauses = possibleCausesInstance8;
                                                }
                                                
                                                JToken recommendedActionValue8 = innerHealthErrorsValue4["recommendedAction"];
                                                if (recommendedActionValue8 != null && recommendedActionValue8.Type != JTokenType.Null)
                                                {
                                                    string recommendedActionInstance8 = ((string)recommendedActionValue8);
                                                    innerHealthErrorInstance4.RecommendedAction = recommendedActionInstance8;
                                                }
                                                
                                                JToken creationTimeUtcValue8 = innerHealthErrorsValue4["creationTimeUtc"];
                                                if (creationTimeUtcValue8 != null && creationTimeUtcValue8.Type != JTokenType.Null)
                                                {
                                                    DateTime creationTimeUtcInstance8 = ((DateTime)creationTimeUtcValue8);
                                                    innerHealthErrorInstance4.CreationTimeUtc = creationTimeUtcInstance8;
                                                }
                                                
                                                JToken recoveryProviderErrorMessageValue8 = innerHealthErrorsValue4["recoveryProviderErrorMessage"];
                                                if (recoveryProviderErrorMessageValue8 != null && recoveryProviderErrorMessageValue8.Type != JTokenType.Null)
                                                {
                                                    string recoveryProviderErrorMessageInstance8 = ((string)recoveryProviderErrorMessageValue8);
                                                    innerHealthErrorInstance4.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance8;
                                                }
                                                
                                                JToken entityIdValue8 = innerHealthErrorsValue4["entityId"];
                                                if (entityIdValue8 != null && entityIdValue8.Type != JTokenType.Null)
                                                {
                                                    string entityIdInstance8 = ((string)entityIdValue8);
                                                    innerHealthErrorInstance4.EntityId = entityIdInstance8;
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                JToken healthValue = propertiesValue["health"];
                                if (healthValue != null && healthValue.Type != JTokenType.Null)
                                {
                                    string healthInstance = ((string)healthValue);
                                    propertiesInstance.Health = healthInstance;
                                }
                            }
                            
                            JToken idValue3 = responseDoc["id"];
                            if (idValue3 != null && idValue3.Type != JTokenType.Null)
                            {
                                string idInstance3 = ((string)idValue3);
                                fabricInstance.Id = idInstance3;
                            }
                            
                            JToken nameValue2 = responseDoc["name"];
                            if (nameValue2 != null && nameValue2.Type != JTokenType.Null)
                            {
                                string nameInstance2 = ((string)nameValue2);
                                fabricInstance.Name = nameInstance2;
                            }
                            
                            JToken typeValue2 = responseDoc["type"];
                            if (typeValue2 != null && typeValue2.Type != JTokenType.Null)
                            {
                                string typeInstance2 = ((string)typeValue2);
                                fabricInstance.Type = typeInstance2;
                            }
                            
                            JToken locationValue2 = responseDoc["location"];
                            if (locationValue2 != null && locationValue2.Type != JTokenType.Null)
                            {
                                string locationInstance2 = ((string)locationValue2);
                                fabricInstance.Location = locationInstance2;
                            }
                            
                            JToken tagsSequenceElement = ((JToken)responseDoc["tags"]);
                            if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)
                            {
                                foreach (JProperty property in tagsSequenceElement)
                                {
                                    string tagsKey = ((string)property.Name);
                                    string tagsValue = ((string)property.Value);
                                    fabricInstance.Tags.Add(tagsKey, tagsValue);
                                }
                            }
                            
                            JToken locationValue3 = responseDoc["Location"];
                            if (locationValue3 != null && locationValue3.Type != JTokenType.Null)
                            {
                                string locationInstance3 = ((string)locationValue3);
                                result.Location = locationInstance3;
                            }
                            
                            JToken retryAfterValue = responseDoc["RetryAfter"];
                            if (retryAfterValue != null && retryAfterValue.Type != JTokenType.Null)
                            {
                                int retryAfterInstance = ((int)retryAfterValue);
                                result.RetryAfter = retryAfterInstance;
                            }
                            
                            JToken asyncOperationValue = responseDoc["AsyncOperation"];
                            if (asyncOperationValue != null && asyncOperationValue.Type != JTokenType.Null)
                            {
                                string asyncOperationInstance = ((string)asyncOperationValue);
                                result.AsyncOperation = asyncOperationInstance;
                            }
                            
                            JToken statusValue5 = responseDoc["Status"];
                            if (statusValue5 != null && statusValue5.Type != JTokenType.Null)
                            {
                                OperationStatus statusInstance5 = ((OperationStatus)Enum.Parse(typeof(OperationStatus), ((string)statusValue5), true));
                                result.Status = statusInstance5;
                            }
                            
                            JToken cultureValue = responseDoc["Culture"];
                            if (cultureValue != null && cultureValue.Type != JTokenType.Null)
                            {
                                string cultureInstance = ((string)cultureValue);
                                result.Culture = cultureInstance;
                            }
                            
                            JToken clientRequestIdValue = responseDoc["ClientRequestId"];
                            if (clientRequestIdValue != null && clientRequestIdValue.Type != JTokenType.Null)
                            {
                                string clientRequestIdInstance = ((string)clientRequestIdValue);
                                result.ClientRequestId = clientRequestIdInstance;
                            }
                            
                            JToken correlationRequestIdValue = responseDoc["CorrelationRequestId"];
                            if (correlationRequestIdValue != null && correlationRequestIdValue.Type != JTokenType.Null)
                            {
                                string correlationRequestIdInstance = ((string)correlationRequestIdValue);
                                result.CorrelationRequestId = correlationRequestIdInstance;
                            }
                            
                            JToken dateValue = responseDoc["Date"];
                            if (dateValue != null && dateValue.Type != JTokenType.Null)
                            {
                                string dateInstance = ((string)dateValue);
                                result.Date = dateInstance;
                            }
                            
                            JToken contentTypeValue = responseDoc["ContentType"];
                            if (contentTypeValue != null && contentTypeValue.Type != JTokenType.Null)
                            {
                                string contentTypeInstance = ((string)contentTypeValue);
                                result.ContentType = contentTypeInstance;
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Azure-AsyncOperation"))
                    {
                        result.AsyncOperation = httpResponse.Headers.GetValues("Azure-AsyncOperation").FirstOrDefault();
                    }
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.Location = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    if (statusCode == HttpStatusCode.NoContent)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.Accepted)
                    {
                        result.Status = OperationStatus.InProgress;
                    }
                    if (statusCode == HttpStatusCode.OK)
                    {
                        result.Status = OperationStatus.Succeeded;
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Get the list of all fabrics under the vault.
        /// </summary>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the list servers operation.
        /// </returns>
        public async Task<FabricListResponse> ListAsync(CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            // Validate
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "ListAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/Subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourceGroups/";
            url = url + Uri.EscapeDataString(this.Client.ResourceGroupName);
            url = url + "/providers/";
            url = url + Uri.EscapeDataString(this.Client.ResourceNamespace);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceType);
            url = url + "/";
            url = url + Uri.EscapeDataString(this.Client.ResourceName);
            url = url + "/replicationFabrics";
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2018-07-10");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("Accept-Language", customRequestHeaders.Culture);
                httpRequest.Headers.Add("x-ms-client-request-id", customRequestHeaders.ClientRequestId);
                httpRequest.Headers.Add("x-ms-version", "2015-01-01");
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    FabricListResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new FabricListResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            JToken valueArray = responseDoc["value"];
                            if (valueArray != null && valueArray.Type != JTokenType.Null)
                            {
                                foreach (JToken valueValue in ((JArray)valueArray))
                                {
                                    Fabric fabricInstance = new Fabric();
                                    result.Fabrics.Add(fabricInstance);
                                    
                                    JToken propertiesValue = valueValue["properties"];
                                    if (propertiesValue != null && propertiesValue.Type != JTokenType.Null)
                                    {
                                        FabricProperties propertiesInstance = new FabricProperties();
                                        fabricInstance.Properties = propertiesInstance;
                                        
                                        JToken friendlyNameValue = propertiesValue["friendlyName"];
                                        if (friendlyNameValue != null && friendlyNameValue.Type != JTokenType.Null)
                                        {
                                            string friendlyNameInstance = ((string)friendlyNameValue);
                                            propertiesInstance.FriendlyName = friendlyNameInstance;
                                        }
                                        
                                        JToken internalIdentifierValue = propertiesValue["internalIdentifier"];
                                        if (internalIdentifierValue != null && internalIdentifierValue.Type != JTokenType.Null)
                                        {
                                            string internalIdentifierInstance = ((string)internalIdentifierValue);
                                            propertiesInstance.InternalIdentifier = internalIdentifierInstance;
                                        }
                                        
                                        JToken bcdrStateValue = propertiesValue["bcdrState"];
                                        if (bcdrStateValue != null && bcdrStateValue.Type != JTokenType.Null)
                                        {
                                            string bcdrStateInstance = ((string)bcdrStateValue);
                                            propertiesInstance.BcdrState = bcdrStateInstance;
                                        }
                                        
                                        JToken encryptionDetailsValue = propertiesValue["encryptionDetails"];
                                        if (encryptionDetailsValue != null && encryptionDetailsValue.Type != JTokenType.Null)
                                        {
                                            EncryptionDetails encryptionDetailsInstance = new EncryptionDetails();
                                            propertiesInstance.EncryptionDetails = encryptionDetailsInstance;
                                            
                                            JToken kekStateValue = encryptionDetailsValue["kekState"];
                                            if (kekStateValue != null && kekStateValue.Type != JTokenType.Null)
                                            {
                                                string kekStateInstance = ((string)kekStateValue);
                                                encryptionDetailsInstance.KekState = kekStateInstance;
                                            }
                                            
                                            JToken kekCertThumbprintValue = encryptionDetailsValue["kekCertThumbprint"];
                                            if (kekCertThumbprintValue != null && kekCertThumbprintValue.Type != JTokenType.Null)
                                            {
                                                string kekCertThumbprintInstance = ((string)kekCertThumbprintValue);
                                                encryptionDetailsInstance.KekCertThumbprint = kekCertThumbprintInstance;
                                            }
                                            
                                            JToken kekCertExpiryDateValue = encryptionDetailsValue["kekCertExpiryDate"];
                                            if (kekCertExpiryDateValue != null && kekCertExpiryDateValue.Type != JTokenType.Null)
                                            {
                                                DateTime kekCertExpiryDateInstance = ((DateTime)kekCertExpiryDateValue);
                                                encryptionDetailsInstance.KekCertExpiryDate = kekCertExpiryDateInstance;
                                            }
                                        }
                                        
                                        JToken rolloverEncryptionDetailsValue = propertiesValue["rolloverEncryptionDetails"];
                                        if (rolloverEncryptionDetailsValue != null && rolloverEncryptionDetailsValue.Type != JTokenType.Null)
                                        {
                                            EncryptionDetails rolloverEncryptionDetailsInstance = new EncryptionDetails();
                                            propertiesInstance.RolloverEncryptionDetails = rolloverEncryptionDetailsInstance;
                                            
                                            JToken kekStateValue2 = rolloverEncryptionDetailsValue["kekState"];
                                            if (kekStateValue2 != null && kekStateValue2.Type != JTokenType.Null)
                                            {
                                                string kekStateInstance2 = ((string)kekStateValue2);
                                                rolloverEncryptionDetailsInstance.KekState = kekStateInstance2;
                                            }
                                            
                                            JToken kekCertThumbprintValue2 = rolloverEncryptionDetailsValue["kekCertThumbprint"];
                                            if (kekCertThumbprintValue2 != null && kekCertThumbprintValue2.Type != JTokenType.Null)
                                            {
                                                string kekCertThumbprintInstance2 = ((string)kekCertThumbprintValue2);
                                                rolloverEncryptionDetailsInstance.KekCertThumbprint = kekCertThumbprintInstance2;
                                            }
                                            
                                            JToken kekCertExpiryDateValue2 = rolloverEncryptionDetailsValue["kekCertExpiryDate"];
                                            if (kekCertExpiryDateValue2 != null && kekCertExpiryDateValue2.Type != JTokenType.Null)
                                            {
                                                DateTime kekCertExpiryDateInstance2 = ((DateTime)kekCertExpiryDateValue2);
                                                rolloverEncryptionDetailsInstance.KekCertExpiryDate = kekCertExpiryDateInstance2;
                                            }
                                        }
                                        
                                        JToken customDetailsValue = propertiesValue["customDetails"];
                                        if (customDetailsValue != null && customDetailsValue.Type != JTokenType.Null)
                                        {
                                            string typeName = ((string)customDetailsValue["instanceType"]);
                                            if (typeName == "VMM")
                                            {
                                                VmmDetails vmmDetailsInstance = new VmmDetails();
                                                
                                                JToken instanceTypeValue = customDetailsValue["instanceType"];
                                                if (instanceTypeValue != null && instanceTypeValue.Type != JTokenType.Null)
                                                {
                                                    string instanceTypeInstance = ((string)instanceTypeValue);
                                                    vmmDetailsInstance.InstanceType = instanceTypeInstance;
                                                }
                                                propertiesInstance.CustomDetails = vmmDetailsInstance;
                                            }
                                            if (typeName == "HyperVSite")
                                            {
                                                HyperVSiteDetails hyperVSiteDetailsInstance = new HyperVSiteDetails();
                                                
                                                JToken instanceTypeValue2 = customDetailsValue["instanceType"];
                                                if (instanceTypeValue2 != null && instanceTypeValue2.Type != JTokenType.Null)
                                                {
                                                    string instanceTypeInstance2 = ((string)instanceTypeValue2);
                                                    hyperVSiteDetailsInstance.InstanceType = instanceTypeInstance2;
                                                }
                                                propertiesInstance.CustomDetails = hyperVSiteDetailsInstance;
                                            }
                                            if (typeName == "Azure")
                                            {
                                                AzureFabricSpecificDetails azureFabricSpecificDetailsInstance = new AzureFabricSpecificDetails();
                                                
                                                JToken locationValue = customDetailsValue["location"];
                                                if (locationValue != null && locationValue.Type != JTokenType.Null)
                                                {
                                                    string locationInstance = ((string)locationValue);
                                                    azureFabricSpecificDetailsInstance.Location = locationInstance;
                                                }
                                                
                                                JToken containerIdsArray = customDetailsValue["containerIds"];
                                                if (containerIdsArray != null && containerIdsArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken containerIdsValue in ((JArray)containerIdsArray))
                                                    {
                                                        azureFabricSpecificDetailsInstance.ContainerIds.Add(((string)containerIdsValue));
                                                    }
                                                }
                                                
                                                JToken instanceTypeValue3 = customDetailsValue["instanceType"];
                                                if (instanceTypeValue3 != null && instanceTypeValue3.Type != JTokenType.Null)
                                                {
                                                    string instanceTypeInstance3 = ((string)instanceTypeValue3);
                                                    azureFabricSpecificDetailsInstance.InstanceType = instanceTypeInstance3;
                                                }
                                                propertiesInstance.CustomDetails = azureFabricSpecificDetailsInstance;
                                            }
                                            if (typeName == "VMware")
                                            {
                                                VMwareFabricDetails vMwareFabricDetailsInstance = new VMwareFabricDetails();
                                                
                                                JToken processServersArray = customDetailsValue["processServers"];
                                                if (processServersArray != null && processServersArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken processServersValue in ((JArray)processServersArray))
                                                    {
                                                        ProcessServer processServerInstance = new ProcessServer();
                                                        vMwareFabricDetailsInstance.ProcessServers.Add(processServerInstance);
                                                        
                                                        JToken friendlyNameValue2 = processServersValue["friendlyName"];
                                                        if (friendlyNameValue2 != null && friendlyNameValue2.Type != JTokenType.Null)
                                                        {
                                                            string friendlyNameInstance2 = ((string)friendlyNameValue2);
                                                            processServerInstance.FriendlyName = friendlyNameInstance2;
                                                        }
                                                        
                                                        JToken idValue = processServersValue["id"];
                                                        if (idValue != null && idValue.Type != JTokenType.Null)
                                                        {
                                                            string idInstance = ((string)idValue);
                                                            processServerInstance.Id = idInstance;
                                                        }
                                                        
                                                        JToken ipAddressValue = processServersValue["ipAddress"];
                                                        if (ipAddressValue != null && ipAddressValue.Type != JTokenType.Null)
                                                        {
                                                            string ipAddressInstance = ((string)ipAddressValue);
                                                            processServerInstance.IpAddress = ipAddressInstance;
                                                        }
                                                        
                                                        JToken osTypeValue = processServersValue["osType"];
                                                        if (osTypeValue != null && osTypeValue.Type != JTokenType.Null)
                                                        {
                                                            string osTypeInstance = ((string)osTypeValue);
                                                            processServerInstance.OsType = osTypeInstance;
                                                        }
                                                        
                                                        JToken agentVersionValue = processServersValue["agentVersion"];
                                                        if (agentVersionValue != null && agentVersionValue.Type != JTokenType.Null)
                                                        {
                                                            string agentVersionInstance = ((string)agentVersionValue);
                                                            processServerInstance.AgentVersion = agentVersionInstance;
                                                        }
                                                        
                                                        JToken lastHeartbeatValue = processServersValue["lastHeartbeat"];
                                                        if (lastHeartbeatValue != null && lastHeartbeatValue.Type != JTokenType.Null)
                                                        {
                                                            DateTime lastHeartbeatInstance = ((DateTime)lastHeartbeatValue);
                                                            processServerInstance.LastHeartbeat = lastHeartbeatInstance;
                                                        }
                                                        
                                                        JToken versionStatusValue = processServersValue["versionStatus"];
                                                        if (versionStatusValue != null && versionStatusValue.Type != JTokenType.Null)
                                                        {
                                                            string versionStatusInstance = ((string)versionStatusValue);
                                                            processServerInstance.VersionStatus = versionStatusInstance;
                                                        }
                                                        
                                                        JToken mobilityServiceUpdatesArray = processServersValue["mobilityServiceUpdates"];
                                                        if (mobilityServiceUpdatesArray != null && mobilityServiceUpdatesArray.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken mobilityServiceUpdatesValue in ((JArray)mobilityServiceUpdatesArray))
                                                            {
                                                                MobilityServiceUpdate mobilityServiceUpdateInstance = new MobilityServiceUpdate();
                                                                processServerInstance.Updates.Add(mobilityServiceUpdateInstance);
                                                                
                                                                JToken versionValue = mobilityServiceUpdatesValue["version"];
                                                                if (versionValue != null && versionValue.Type != JTokenType.Null)
                                                                {
                                                                    string versionInstance = ((string)versionValue);
                                                                    mobilityServiceUpdateInstance.Version = versionInstance;
                                                                }
                                                                
                                                                JToken rebootStatusValue = mobilityServiceUpdatesValue["rebootStatus"];
                                                                if (rebootStatusValue != null && rebootStatusValue.Type != JTokenType.Null)
                                                                {
                                                                    string rebootStatusInstance = ((string)rebootStatusValue);
                                                                    mobilityServiceUpdateInstance.RebootStatus = rebootStatusInstance;
                                                                }
                                                                
                                                                JToken osTypeValue2 = mobilityServiceUpdatesValue["osType"];
                                                                if (osTypeValue2 != null && osTypeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string osTypeInstance2 = ((string)osTypeValue2);
                                                                    mobilityServiceUpdateInstance.OsType = osTypeInstance2;
                                                                }
                                                            }
                                                        }
                                                        
                                                        JToken hostIdValue = processServersValue["hostId"];
                                                        if (hostIdValue != null && hostIdValue.Type != JTokenType.Null)
                                                        {
                                                            string hostIdInstance = ((string)hostIdValue);
                                                            processServerInstance.HostId = hostIdInstance;
                                                        }
                                                        
                                                        JToken machineCountValue = processServersValue["machineCount"];
                                                        if (machineCountValue != null && machineCountValue.Type != JTokenType.Null)
                                                        {
                                                            string machineCountInstance = ((string)machineCountValue);
                                                            processServerInstance.ServerCount = machineCountInstance;
                                                        }
                                                        
                                                        JToken replicationPairCountValue = processServersValue["replicationPairCount"];
                                                        if (replicationPairCountValue != null && replicationPairCountValue.Type != JTokenType.Null)
                                                        {
                                                            string replicationPairCountInstance = ((string)replicationPairCountValue);
                                                            processServerInstance.ReplicationPairCount = replicationPairCountInstance;
                                                        }
                                                        
                                                        JToken systemLoadValue = processServersValue["systemLoad"];
                                                        if (systemLoadValue != null && systemLoadValue.Type != JTokenType.Null)
                                                        {
                                                            string systemLoadInstance = ((string)systemLoadValue);
                                                            processServerInstance.SystemLoad = systemLoadInstance;
                                                        }
                                                        
                                                        JToken systemLoadStatusValue = processServersValue["systemLoadStatus"];
                                                        if (systemLoadStatusValue != null && systemLoadStatusValue.Type != JTokenType.Null)
                                                        {
                                                            string systemLoadStatusInstance = ((string)systemLoadStatusValue);
                                                            processServerInstance.SystemLoadStatus = systemLoadStatusInstance;
                                                        }
                                                        
                                                        JToken cpuLoadValue = processServersValue["cpuLoad"];
                                                        if (cpuLoadValue != null && cpuLoadValue.Type != JTokenType.Null)
                                                        {
                                                            string cpuLoadInstance = ((string)cpuLoadValue);
                                                            processServerInstance.CpuLoad = cpuLoadInstance;
                                                        }
                                                        
                                                        JToken cpuLoadStatusValue = processServersValue["cpuLoadStatus"];
                                                        if (cpuLoadStatusValue != null && cpuLoadStatusValue.Type != JTokenType.Null)
                                                        {
                                                            string cpuLoadStatusInstance = ((string)cpuLoadStatusValue);
                                                            processServerInstance.CpuLoadStatus = cpuLoadStatusInstance;
                                                        }
                                                        
                                                        JToken totalMemoryInBytesValue = processServersValue["totalMemoryInBytes"];
                                                        if (totalMemoryInBytesValue != null && totalMemoryInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long totalMemoryInBytesInstance = ((long)totalMemoryInBytesValue);
                                                            processServerInstance.TotalMemoryInBytes = totalMemoryInBytesInstance;
                                                        }
                                                        
                                                        JToken availableMemoryInBytesValue = processServersValue["availableMemoryInBytes"];
                                                        if (availableMemoryInBytesValue != null && availableMemoryInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long availableMemoryInBytesInstance = ((long)availableMemoryInBytesValue);
                                                            processServerInstance.AvailableMemoryInBytes = availableMemoryInBytesInstance;
                                                        }
                                                        
                                                        JToken memoryUsageStatusValue = processServersValue["memoryUsageStatus"];
                                                        if (memoryUsageStatusValue != null && memoryUsageStatusValue.Type != JTokenType.Null)
                                                        {
                                                            string memoryUsageStatusInstance = ((string)memoryUsageStatusValue);
                                                            processServerInstance.MemoryUsageStatus = memoryUsageStatusInstance;
                                                        }
                                                        
                                                        JToken totalSpaceInBytesValue = processServersValue["totalSpaceInBytes"];
                                                        if (totalSpaceInBytesValue != null && totalSpaceInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long totalSpaceInBytesInstance = ((long)totalSpaceInBytesValue);
                                                            processServerInstance.TotalSpaceInBytes = totalSpaceInBytesInstance;
                                                        }
                                                        
                                                        JToken availableSpaceInBytesValue = processServersValue["availableSpaceInBytes"];
                                                        if (availableSpaceInBytesValue != null && availableSpaceInBytesValue.Type != JTokenType.Null)
                                                        {
                                                            long availableSpaceInBytesInstance = ((long)availableSpaceInBytesValue);
                                                            processServerInstance.AvailableSpaceInBytes = availableSpaceInBytesInstance;
                                                        }
                                                        
                                                        JToken spaceUsageStatusValue = processServersValue["spaceUsageStatus"];
                                                        if (spaceUsageStatusValue != null && spaceUsageStatusValue.Type != JTokenType.Null)
                                                        {
                                                            string spaceUsageStatusInstance = ((string)spaceUsageStatusValue);
                                                            processServerInstance.SpaceUsageStatus = spaceUsageStatusInstance;
                                                        }
                                                        
                                                        JToken psServiceStatusValue = processServersValue["psServiceStatus"];
                                                        if (psServiceStatusValue != null && psServiceStatusValue.Type != JTokenType.Null)
                                                        {
                                                            string psServiceStatusInstance = ((string)psServiceStatusValue);
                                                            processServerInstance.PsServiceStatus = psServiceStatusInstance;
                                                        }
                                                        
                                                        JToken sslCertExpiryDateValue = processServersValue["sslCertExpiryDate"];
                                                        if (sslCertExpiryDateValue != null && sslCertExpiryDateValue.Type != JTokenType.Null)
                                                        {
                                                            DateTime sslCertExpiryDateInstance = ((DateTime)sslCertExpiryDateValue);
                                                            processServerInstance.SslCertExpiryDate = sslCertExpiryDateInstance;
                                                        }
                                                        
                                                        JToken sslCertExpiryRemainingDaysValue = processServersValue["sslCertExpiryRemainingDays"];
                                                        if (sslCertExpiryRemainingDaysValue != null && sslCertExpiryRemainingDaysValue.Type != JTokenType.Null)
                                                        {
                                                            int sslCertExpiryRemainingDaysInstance = ((int)sslCertExpiryRemainingDaysValue);
                                                            processServerInstance.SslCertExpiryRemainingDays = sslCertExpiryRemainingDaysInstance;
                                                        }
                                                        
                                                        JToken osVersionValue = processServersValue["osVersion"];
                                                        if (osVersionValue != null && osVersionValue.Type != JTokenType.Null)
                                                        {
                                                            string osVersionInstance = ((string)osVersionValue);
                                                            processServerInstance.OsVersion = osVersionInstance;
                                                        }
                                                        
                                                        JToken healthErrorsArray = processServersValue["healthErrors"];
                                                        if (healthErrorsArray != null && healthErrorsArray.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken healthErrorsValue in ((JArray)healthErrorsArray))
                                                            {
                                                                HealthError healthErrorInstance = new HealthError();
                                                                processServerInstance.HealthErrors.Add(healthErrorInstance);
                                                                
                                                                JToken errorSourceValue = healthErrorsValue["errorSource"];
                                                                if (errorSourceValue != null && errorSourceValue.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance = ((string)errorSourceValue);
                                                                    healthErrorInstance.ErrorSource = errorSourceInstance;
                                                                }
                                                                
                                                                JToken errorTypeValue = healthErrorsValue["errorType"];
                                                                if (errorTypeValue != null && errorTypeValue.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance = ((string)errorTypeValue);
                                                                    healthErrorInstance.ErrorType = errorTypeInstance;
                                                                }
                                                                
                                                                JToken errorLevelValue = healthErrorsValue["errorLevel"];
                                                                if (errorLevelValue != null && errorLevelValue.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance = ((string)errorLevelValue);
                                                                    healthErrorInstance.ErrorLevel = errorLevelInstance;
                                                                }
                                                                
                                                                JToken errorCategoryValue = healthErrorsValue["errorCategory"];
                                                                if (errorCategoryValue != null && errorCategoryValue.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance = ((string)errorCategoryValue);
                                                                    healthErrorInstance.ErrorCategory = errorCategoryInstance;
                                                                }
                                                                
                                                                JToken errorCodeValue = healthErrorsValue["errorCode"];
                                                                if (errorCodeValue != null && errorCodeValue.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance = ((string)errorCodeValue);
                                                                    healthErrorInstance.ErrorCode = errorCodeInstance;
                                                                }
                                                                
                                                                JToken errorMessageValue = healthErrorsValue["errorMessage"];
                                                                if (errorMessageValue != null && errorMessageValue.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance = ((string)errorMessageValue);
                                                                    healthErrorInstance.ErrorMessage = errorMessageInstance;
                                                                }
                                                                
                                                                JToken summaryMessageValue = healthErrorsValue["summaryMessage"];
                                                                if (summaryMessageValue != null && summaryMessageValue.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance = ((string)summaryMessageValue);
                                                                    healthErrorInstance.SummaryMessage = summaryMessageInstance;
                                                                }
                                                                
                                                                JToken possibleCausesValue = healthErrorsValue["possibleCauses"];
                                                                if (possibleCausesValue != null && possibleCausesValue.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance = ((string)possibleCausesValue);
                                                                    healthErrorInstance.PossibleCauses = possibleCausesInstance;
                                                                }
                                                                
                                                                JToken recommendedActionValue = healthErrorsValue["recommendedAction"];
                                                                if (recommendedActionValue != null && recommendedActionValue.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance = ((string)recommendedActionValue);
                                                                    healthErrorInstance.RecommendedAction = recommendedActionInstance;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue = healthErrorsValue["creationTimeUtc"];
                                                                if (creationTimeUtcValue != null && creationTimeUtcValue.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance = ((DateTime)creationTimeUtcValue);
                                                                    healthErrorInstance.CreationTimeUtc = creationTimeUtcInstance;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue = healthErrorsValue["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue != null && recoveryProviderErrorMessageValue.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance = ((string)recoveryProviderErrorMessageValue);
                                                                    healthErrorInstance.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance;
                                                                }
                                                                
                                                                JToken entityIdValue = healthErrorsValue["entityId"];
                                                                if (entityIdValue != null && entityIdValue.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance = ((string)entityIdValue);
                                                                    healthErrorInstance.EntityId = entityIdInstance;
                                                                }
                                                                
                                                                JToken innerHealthErrorsArray = healthErrorsValue["innerHealthErrors"];
                                                                if (innerHealthErrorsArray != null && innerHealthErrorsArray.Type != JTokenType.Null)
                                                                {
                                                                    foreach (JToken innerHealthErrorsValue in ((JArray)innerHealthErrorsArray))
                                                                    {
                                                                        InnerHealthError innerHealthErrorInstance = new InnerHealthError();
                                                                        healthErrorInstance.InnerHealthErrors.Add(innerHealthErrorInstance);
                                                                        
                                                                        JToken errorSourceValue2 = innerHealthErrorsValue["errorSource"];
                                                                        if (errorSourceValue2 != null && errorSourceValue2.Type != JTokenType.Null)
                                                                        {
                                                                            string errorSourceInstance2 = ((string)errorSourceValue2);
                                                                            innerHealthErrorInstance.ErrorSource = errorSourceInstance2;
                                                                        }
                                                                        
                                                                        JToken errorTypeValue2 = innerHealthErrorsValue["errorType"];
                                                                        if (errorTypeValue2 != null && errorTypeValue2.Type != JTokenType.Null)
                                                                        {
                                                                            string errorTypeInstance2 = ((string)errorTypeValue2);
                                                                            innerHealthErrorInstance.ErrorType = errorTypeInstance2;
                                                                        }
                                                                        
                                                                        JToken errorLevelValue2 = innerHealthErrorsValue["errorLevel"];
                                                                        if (errorLevelValue2 != null && errorLevelValue2.Type != JTokenType.Null)
                                                                        {
                                                                            string errorLevelInstance2 = ((string)errorLevelValue2);
                                                                            innerHealthErrorInstance.ErrorLevel = errorLevelInstance2;
                                                                        }
                                                                        
                                                                        JToken errorCategoryValue2 = innerHealthErrorsValue["errorCategory"];
                                                                        if (errorCategoryValue2 != null && errorCategoryValue2.Type != JTokenType.Null)
                                                                        {
                                                                            string errorCategoryInstance2 = ((string)errorCategoryValue2);
                                                                            innerHealthErrorInstance.ErrorCategory = errorCategoryInstance2;
                                                                        }
                                                                        
                                                                        JToken errorCodeValue2 = innerHealthErrorsValue["errorCode"];
                                                                        if (errorCodeValue2 != null && errorCodeValue2.Type != JTokenType.Null)
                                                                        {
                                                                            string errorCodeInstance2 = ((string)errorCodeValue2);
                                                                            innerHealthErrorInstance.ErrorCode = errorCodeInstance2;
                                                                        }
                                                                        
                                                                        JToken errorMessageValue2 = innerHealthErrorsValue["errorMessage"];
                                                                        if (errorMessageValue2 != null && errorMessageValue2.Type != JTokenType.Null)
                                                                        {
                                                                            string errorMessageInstance2 = ((string)errorMessageValue2);
                                                                            innerHealthErrorInstance.ErrorMessage = errorMessageInstance2;
                                                                        }
                                                                        
                                                                        JToken summaryMessageValue2 = innerHealthErrorsValue["summaryMessage"];
                                                                        if (summaryMessageValue2 != null && summaryMessageValue2.Type != JTokenType.Null)
                                                                        {
                                                                            string summaryMessageInstance2 = ((string)summaryMessageValue2);
                                                                            innerHealthErrorInstance.SummaryMessage = summaryMessageInstance2;
                                                                        }
                                                                        
                                                                        JToken possibleCausesValue2 = innerHealthErrorsValue["possibleCauses"];
                                                                        if (possibleCausesValue2 != null && possibleCausesValue2.Type != JTokenType.Null)
                                                                        {
                                                                            string possibleCausesInstance2 = ((string)possibleCausesValue2);
                                                                            innerHealthErrorInstance.PossibleCauses = possibleCausesInstance2;
                                                                        }
                                                                        
                                                                        JToken recommendedActionValue2 = innerHealthErrorsValue["recommendedAction"];
                                                                        if (recommendedActionValue2 != null && recommendedActionValue2.Type != JTokenType.Null)
                                                                        {
                                                                            string recommendedActionInstance2 = ((string)recommendedActionValue2);
                                                                            innerHealthErrorInstance.RecommendedAction = recommendedActionInstance2;
                                                                        }
                                                                        
                                                                        JToken creationTimeUtcValue2 = innerHealthErrorsValue["creationTimeUtc"];
                                                                        if (creationTimeUtcValue2 != null && creationTimeUtcValue2.Type != JTokenType.Null)
                                                                        {
                                                                            DateTime creationTimeUtcInstance2 = ((DateTime)creationTimeUtcValue2);
                                                                            innerHealthErrorInstance.CreationTimeUtc = creationTimeUtcInstance2;
                                                                        }
                                                                        
                                                                        JToken recoveryProviderErrorMessageValue2 = innerHealthErrorsValue["recoveryProviderErrorMessage"];
                                                                        if (recoveryProviderErrorMessageValue2 != null && recoveryProviderErrorMessageValue2.Type != JTokenType.Null)
                                                                        {
                                                                            string recoveryProviderErrorMessageInstance2 = ((string)recoveryProviderErrorMessageValue2);
                                                                            innerHealthErrorInstance.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance2;
                                                                        }
                                                                        
                                                                        JToken entityIdValue2 = innerHealthErrorsValue["entityId"];
                                                                        if (entityIdValue2 != null && entityIdValue2.Type != JTokenType.Null)
                                                                        {
                                                                            string entityIdInstance2 = ((string)entityIdValue2);
                                                                            innerHealthErrorInstance.EntityId = entityIdInstance2;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        
                                                        JToken agentExpiryDateValue = processServersValue["agentExpiryDate"];
                                                        if (agentExpiryDateValue != null && agentExpiryDateValue.Type != JTokenType.Null)
                                                        {
                                                            DateTime agentExpiryDateInstance = ((DateTime)agentExpiryDateValue);
                                                            processServerInstance.AgentExpiryDate = agentExpiryDateInstance;
                                                        }
                                                        
                                                        JToken agentVersionDetailsValue = processServersValue["agentVersionDetails"];
                                                        if (agentVersionDetailsValue != null && agentVersionDetailsValue.Type != JTokenType.Null)
                                                        {
                                                            VersionDetails agentVersionDetailsInstance = new VersionDetails();
                                                            processServerInstance.AgentVersionDetails = agentVersionDetailsInstance;
                                                            
                                                            JToken versionValue2 = agentVersionDetailsValue["version"];
                                                            if (versionValue2 != null && versionValue2.Type != JTokenType.Null)
                                                            {
                                                                string versionInstance2 = ((string)versionValue2);
                                                                agentVersionDetailsInstance.Version = versionInstance2;
                                                            }
                                                            
                                                            JToken expiryDateValue = agentVersionDetailsValue["expiryDate"];
                                                            if (expiryDateValue != null && expiryDateValue.Type != JTokenType.Null)
                                                            {
                                                                DateTime expiryDateInstance = ((DateTime)expiryDateValue);
                                                                agentVersionDetailsInstance.ExpiryDate = expiryDateInstance;
                                                            }
                                                            
                                                            JToken statusValue = agentVersionDetailsValue["status"];
                                                            if (statusValue != null && statusValue.Type != JTokenType.Null)
                                                            {
                                                                string statusInstance = ((string)statusValue);
                                                                agentVersionDetailsInstance.Status = statusInstance;
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken masterTargetServersArray = customDetailsValue["masterTargetServers"];
                                                if (masterTargetServersArray != null && masterTargetServersArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken masterTargetServersValue in ((JArray)masterTargetServersArray))
                                                    {
                                                        MasterTargetServer masterTargetServerInstance = new MasterTargetServer();
                                                        vMwareFabricDetailsInstance.MasterTargetServers.Add(masterTargetServerInstance);
                                                        
                                                        JToken idValue2 = masterTargetServersValue["id"];
                                                        if (idValue2 != null && idValue2.Type != JTokenType.Null)
                                                        {
                                                            string idInstance2 = ((string)idValue2);
                                                            masterTargetServerInstance.Id = idInstance2;
                                                        }
                                                        
                                                        JToken ipAddressValue2 = masterTargetServersValue["ipAddress"];
                                                        if (ipAddressValue2 != null && ipAddressValue2.Type != JTokenType.Null)
                                                        {
                                                            string ipAddressInstance2 = ((string)ipAddressValue2);
                                                            masterTargetServerInstance.IpAddress = ipAddressInstance2;
                                                        }
                                                        
                                                        JToken nameValue = masterTargetServersValue["name"];
                                                        if (nameValue != null && nameValue.Type != JTokenType.Null)
                                                        {
                                                            string nameInstance = ((string)nameValue);
                                                            masterTargetServerInstance.Name = nameInstance;
                                                        }
                                                        
                                                        JToken osTypeValue3 = masterTargetServersValue["osType"];
                                                        if (osTypeValue3 != null && osTypeValue3.Type != JTokenType.Null)
                                                        {
                                                            string osTypeInstance3 = ((string)osTypeValue3);
                                                            masterTargetServerInstance.OsType = osTypeInstance3;
                                                        }
                                                        
                                                        JToken agentVersionValue2 = masterTargetServersValue["agentVersion"];
                                                        if (agentVersionValue2 != null && agentVersionValue2.Type != JTokenType.Null)
                                                        {
                                                            string agentVersionInstance2 = ((string)agentVersionValue2);
                                                            masterTargetServerInstance.AgentVersion = agentVersionInstance2;
                                                        }
                                                        
                                                        JToken lastHeartbeatValue2 = masterTargetServersValue["lastHeartbeat"];
                                                        if (lastHeartbeatValue2 != null && lastHeartbeatValue2.Type != JTokenType.Null)
                                                        {
                                                            DateTime lastHeartbeatInstance2 = ((DateTime)lastHeartbeatValue2);
                                                            masterTargetServerInstance.LastHeartbeat = lastHeartbeatInstance2;
                                                        }
                                                        
                                                        JToken versionStatusValue2 = masterTargetServersValue["versionStatus"];
                                                        if (versionStatusValue2 != null && versionStatusValue2.Type != JTokenType.Null)
                                                        {
                                                            string versionStatusInstance2 = ((string)versionStatusValue2);
                                                            masterTargetServerInstance.VersionStatus = versionStatusInstance2;
                                                        }
                                                        
                                                        JToken retentionVolumesArray = masterTargetServersValue["retentionVolumes"];
                                                        if (retentionVolumesArray != null && retentionVolumesArray.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken retentionVolumesValue in ((JArray)retentionVolumesArray))
                                                            {
                                                                RetentionVolume retentionVolumeInstance = new RetentionVolume();
                                                                masterTargetServerInstance.RetentionVolumes.Add(retentionVolumeInstance);
                                                                
                                                                JToken volumeNameValue = retentionVolumesValue["volumeName"];
                                                                if (volumeNameValue != null && volumeNameValue.Type != JTokenType.Null)
                                                                {
                                                                    string volumeNameInstance = ((string)volumeNameValue);
                                                                    retentionVolumeInstance.VolumeName = volumeNameInstance;
                                                                }
                                                                
                                                                JToken capacityInBytesValue = retentionVolumesValue["capacityInBytes"];
                                                                if (capacityInBytesValue != null && capacityInBytesValue.Type != JTokenType.Null)
                                                                {
                                                                    long capacityInBytesInstance = ((long)capacityInBytesValue);
                                                                    retentionVolumeInstance.CapacityInBytes = capacityInBytesInstance;
                                                                }
                                                                
                                                                JToken freeSpaceInBytesValue = retentionVolumesValue["freeSpaceInBytes"];
                                                                if (freeSpaceInBytesValue != null && freeSpaceInBytesValue.Type != JTokenType.Null)
                                                                {
                                                                    long freeSpaceInBytesInstance = ((long)freeSpaceInBytesValue);
                                                                    retentionVolumeInstance.FreeSpaceInBytes = freeSpaceInBytesInstance;
                                                                }
                                                                
                                                                JToken thresholdPercentageValue = retentionVolumesValue["thresholdPercentage"];
                                                                if (thresholdPercentageValue != null && thresholdPercentageValue.Type != JTokenType.Null)
                                                                {
                                                                    int thresholdPercentageInstance = ((int)thresholdPercentageValue);
                                                                    retentionVolumeInstance.ThresholdPercentage = thresholdPercentageInstance;
                                                                }
                                                            }
                                                        }
                                                        
                                                        JToken dataStoresArray = masterTargetServersValue["dataStores"];
                                                        if (dataStoresArray != null && dataStoresArray.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken dataStoresValue in ((JArray)dataStoresArray))
                                                            {
                                                                DataStore dataStoreInstance = new DataStore();
                                                                masterTargetServerInstance.DataStores.Add(dataStoreInstance);
                                                                
                                                                JToken symbolicNameValue = dataStoresValue["symbolicName"];
                                                                if (symbolicNameValue != null && symbolicNameValue.Type != JTokenType.Null)
                                                                {
                                                                    string symbolicNameInstance = ((string)symbolicNameValue);
                                                                    dataStoreInstance.SymbolicName = symbolicNameInstance;
                                                                }
                                                                
                                                                JToken uuidValue = dataStoresValue["uuid"];
                                                                if (uuidValue != null && uuidValue.Type != JTokenType.Null)
                                                                {
                                                                    string uuidInstance = ((string)uuidValue);
                                                                    dataStoreInstance.Uuid = uuidInstance;
                                                                }
                                                                
                                                                JToken capacityValue = dataStoresValue["capacity"];
                                                                if (capacityValue != null && capacityValue.Type != JTokenType.Null)
                                                                {
                                                                    string capacityInstance = ((string)capacityValue);
                                                                    dataStoreInstance.Capacity = capacityInstance;
                                                                }
                                                                
                                                                JToken freeSpaceValue = dataStoresValue["freeSpace"];
                                                                if (freeSpaceValue != null && freeSpaceValue.Type != JTokenType.Null)
                                                                {
                                                                    string freeSpaceInstance = ((string)freeSpaceValue);
                                                                    dataStoreInstance.FreeSpace = freeSpaceInstance;
                                                                }
                                                                
                                                                JToken typeValue = dataStoresValue["type"];
                                                                if (typeValue != null && typeValue.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance = ((string)typeValue);
                                                                    dataStoreInstance.Type = typeInstance;
                                                                }
                                                            }
                                                        }
                                                        
                                                        JToken validationErrorsArray = masterTargetServersValue["validationErrors"];
                                                        if (validationErrorsArray != null && validationErrorsArray.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken validationErrorsValue in ((JArray)validationErrorsArray))
                                                            {
                                                                HealthError healthErrorInstance2 = new HealthError();
                                                                masterTargetServerInstance.ValidationErrors.Add(healthErrorInstance2);
                                                                
                                                                JToken errorSourceValue3 = validationErrorsValue["errorSource"];
                                                                if (errorSourceValue3 != null && errorSourceValue3.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance3 = ((string)errorSourceValue3);
                                                                    healthErrorInstance2.ErrorSource = errorSourceInstance3;
                                                                }
                                                                
                                                                JToken errorTypeValue3 = validationErrorsValue["errorType"];
                                                                if (errorTypeValue3 != null && errorTypeValue3.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance3 = ((string)errorTypeValue3);
                                                                    healthErrorInstance2.ErrorType = errorTypeInstance3;
                                                                }
                                                                
                                                                JToken errorLevelValue3 = validationErrorsValue["errorLevel"];
                                                                if (errorLevelValue3 != null && errorLevelValue3.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance3 = ((string)errorLevelValue3);
                                                                    healthErrorInstance2.ErrorLevel = errorLevelInstance3;
                                                                }
                                                                
                                                                JToken errorCategoryValue3 = validationErrorsValue["errorCategory"];
                                                                if (errorCategoryValue3 != null && errorCategoryValue3.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance3 = ((string)errorCategoryValue3);
                                                                    healthErrorInstance2.ErrorCategory = errorCategoryInstance3;
                                                                }
                                                                
                                                                JToken errorCodeValue3 = validationErrorsValue["errorCode"];
                                                                if (errorCodeValue3 != null && errorCodeValue3.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance3 = ((string)errorCodeValue3);
                                                                    healthErrorInstance2.ErrorCode = errorCodeInstance3;
                                                                }
                                                                
                                                                JToken errorMessageValue3 = validationErrorsValue["errorMessage"];
                                                                if (errorMessageValue3 != null && errorMessageValue3.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance3 = ((string)errorMessageValue3);
                                                                    healthErrorInstance2.ErrorMessage = errorMessageInstance3;
                                                                }
                                                                
                                                                JToken summaryMessageValue3 = validationErrorsValue["summaryMessage"];
                                                                if (summaryMessageValue3 != null && summaryMessageValue3.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance3 = ((string)summaryMessageValue3);
                                                                    healthErrorInstance2.SummaryMessage = summaryMessageInstance3;
                                                                }
                                                                
                                                                JToken possibleCausesValue3 = validationErrorsValue["possibleCauses"];
                                                                if (possibleCausesValue3 != null && possibleCausesValue3.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance3 = ((string)possibleCausesValue3);
                                                                    healthErrorInstance2.PossibleCauses = possibleCausesInstance3;
                                                                }
                                                                
                                                                JToken recommendedActionValue3 = validationErrorsValue["recommendedAction"];
                                                                if (recommendedActionValue3 != null && recommendedActionValue3.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance3 = ((string)recommendedActionValue3);
                                                                    healthErrorInstance2.RecommendedAction = recommendedActionInstance3;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue3 = validationErrorsValue["creationTimeUtc"];
                                                                if (creationTimeUtcValue3 != null && creationTimeUtcValue3.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance3 = ((DateTime)creationTimeUtcValue3);
                                                                    healthErrorInstance2.CreationTimeUtc = creationTimeUtcInstance3;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue3 = validationErrorsValue["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue3 != null && recoveryProviderErrorMessageValue3.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance3 = ((string)recoveryProviderErrorMessageValue3);
                                                                    healthErrorInstance2.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance3;
                                                                }
                                                                
                                                                JToken entityIdValue3 = validationErrorsValue["entityId"];
                                                                if (entityIdValue3 != null && entityIdValue3.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance3 = ((string)entityIdValue3);
                                                                    healthErrorInstance2.EntityId = entityIdInstance3;
                                                                }
                                                                
                                                                JToken innerHealthErrorsArray2 = validationErrorsValue["innerHealthErrors"];
                                                                if (innerHealthErrorsArray2 != null && innerHealthErrorsArray2.Type != JTokenType.Null)
                                                                {
                                                                    foreach (JToken innerHealthErrorsValue2 in ((JArray)innerHealthErrorsArray2))
                                                                    {
                                                                        InnerHealthError innerHealthErrorInstance2 = new InnerHealthError();
                                                                        healthErrorInstance2.InnerHealthErrors.Add(innerHealthErrorInstance2);
                                                                        
                                                                        JToken errorSourceValue4 = innerHealthErrorsValue2["errorSource"];
                                                                        if (errorSourceValue4 != null && errorSourceValue4.Type != JTokenType.Null)
                                                                        {
                                                                            string errorSourceInstance4 = ((string)errorSourceValue4);
                                                                            innerHealthErrorInstance2.ErrorSource = errorSourceInstance4;
                                                                        }
                                                                        
                                                                        JToken errorTypeValue4 = innerHealthErrorsValue2["errorType"];
                                                                        if (errorTypeValue4 != null && errorTypeValue4.Type != JTokenType.Null)
                                                                        {
                                                                            string errorTypeInstance4 = ((string)errorTypeValue4);
                                                                            innerHealthErrorInstance2.ErrorType = errorTypeInstance4;
                                                                        }
                                                                        
                                                                        JToken errorLevelValue4 = innerHealthErrorsValue2["errorLevel"];
                                                                        if (errorLevelValue4 != null && errorLevelValue4.Type != JTokenType.Null)
                                                                        {
                                                                            string errorLevelInstance4 = ((string)errorLevelValue4);
                                                                            innerHealthErrorInstance2.ErrorLevel = errorLevelInstance4;
                                                                        }
                                                                        
                                                                        JToken errorCategoryValue4 = innerHealthErrorsValue2["errorCategory"];
                                                                        if (errorCategoryValue4 != null && errorCategoryValue4.Type != JTokenType.Null)
                                                                        {
                                                                            string errorCategoryInstance4 = ((string)errorCategoryValue4);
                                                                            innerHealthErrorInstance2.ErrorCategory = errorCategoryInstance4;
                                                                        }
                                                                        
                                                                        JToken errorCodeValue4 = innerHealthErrorsValue2["errorCode"];
                                                                        if (errorCodeValue4 != null && errorCodeValue4.Type != JTokenType.Null)
                                                                        {
                                                                            string errorCodeInstance4 = ((string)errorCodeValue4);
                                                                            innerHealthErrorInstance2.ErrorCode = errorCodeInstance4;
                                                                        }
                                                                        
                                                                        JToken errorMessageValue4 = innerHealthErrorsValue2["errorMessage"];
                                                                        if (errorMessageValue4 != null && errorMessageValue4.Type != JTokenType.Null)
                                                                        {
                                                                            string errorMessageInstance4 = ((string)errorMessageValue4);
                                                                            innerHealthErrorInstance2.ErrorMessage = errorMessageInstance4;
                                                                        }
                                                                        
                                                                        JToken summaryMessageValue4 = innerHealthErrorsValue2["summaryMessage"];
                                                                        if (summaryMessageValue4 != null && summaryMessageValue4.Type != JTokenType.Null)
                                                                        {
                                                                            string summaryMessageInstance4 = ((string)summaryMessageValue4);
                                                                            innerHealthErrorInstance2.SummaryMessage = summaryMessageInstance4;
                                                                        }
                                                                        
                                                                        JToken possibleCausesValue4 = innerHealthErrorsValue2["possibleCauses"];
                                                                        if (possibleCausesValue4 != null && possibleCausesValue4.Type != JTokenType.Null)
                                                                        {
                                                                            string possibleCausesInstance4 = ((string)possibleCausesValue4);
                                                                            innerHealthErrorInstance2.PossibleCauses = possibleCausesInstance4;
                                                                        }
                                                                        
                                                                        JToken recommendedActionValue4 = innerHealthErrorsValue2["recommendedAction"];
                                                                        if (recommendedActionValue4 != null && recommendedActionValue4.Type != JTokenType.Null)
                                                                        {
                                                                            string recommendedActionInstance4 = ((string)recommendedActionValue4);
                                                                            innerHealthErrorInstance2.RecommendedAction = recommendedActionInstance4;
                                                                        }
                                                                        
                                                                        JToken creationTimeUtcValue4 = innerHealthErrorsValue2["creationTimeUtc"];
                                                                        if (creationTimeUtcValue4 != null && creationTimeUtcValue4.Type != JTokenType.Null)
                                                                        {
                                                                            DateTime creationTimeUtcInstance4 = ((DateTime)creationTimeUtcValue4);
                                                                            innerHealthErrorInstance2.CreationTimeUtc = creationTimeUtcInstance4;
                                                                        }
                                                                        
                                                                        JToken recoveryProviderErrorMessageValue4 = innerHealthErrorsValue2["recoveryProviderErrorMessage"];
                                                                        if (recoveryProviderErrorMessageValue4 != null && recoveryProviderErrorMessageValue4.Type != JTokenType.Null)
                                                                        {
                                                                            string recoveryProviderErrorMessageInstance4 = ((string)recoveryProviderErrorMessageValue4);
                                                                            innerHealthErrorInstance2.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance4;
                                                                        }
                                                                        
                                                                        JToken entityIdValue4 = innerHealthErrorsValue2["entityId"];
                                                                        if (entityIdValue4 != null && entityIdValue4.Type != JTokenType.Null)
                                                                        {
                                                                            string entityIdInstance4 = ((string)entityIdValue4);
                                                                            innerHealthErrorInstance2.EntityId = entityIdInstance4;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        
                                                        JToken healthErrorsArray2 = masterTargetServersValue["healthErrors"];
                                                        if (healthErrorsArray2 != null && healthErrorsArray2.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken healthErrorsValue2 in ((JArray)healthErrorsArray2))
                                                            {
                                                                HealthError healthErrorInstance3 = new HealthError();
                                                                masterTargetServerInstance.HealthErrors.Add(healthErrorInstance3);
                                                                
                                                                JToken errorSourceValue5 = healthErrorsValue2["errorSource"];
                                                                if (errorSourceValue5 != null && errorSourceValue5.Type != JTokenType.Null)
                                                                {
                                                                    string errorSourceInstance5 = ((string)errorSourceValue5);
                                                                    healthErrorInstance3.ErrorSource = errorSourceInstance5;
                                                                }
                                                                
                                                                JToken errorTypeValue5 = healthErrorsValue2["errorType"];
                                                                if (errorTypeValue5 != null && errorTypeValue5.Type != JTokenType.Null)
                                                                {
                                                                    string errorTypeInstance5 = ((string)errorTypeValue5);
                                                                    healthErrorInstance3.ErrorType = errorTypeInstance5;
                                                                }
                                                                
                                                                JToken errorLevelValue5 = healthErrorsValue2["errorLevel"];
                                                                if (errorLevelValue5 != null && errorLevelValue5.Type != JTokenType.Null)
                                                                {
                                                                    string errorLevelInstance5 = ((string)errorLevelValue5);
                                                                    healthErrorInstance3.ErrorLevel = errorLevelInstance5;
                                                                }
                                                                
                                                                JToken errorCategoryValue5 = healthErrorsValue2["errorCategory"];
                                                                if (errorCategoryValue5 != null && errorCategoryValue5.Type != JTokenType.Null)
                                                                {
                                                                    string errorCategoryInstance5 = ((string)errorCategoryValue5);
                                                                    healthErrorInstance3.ErrorCategory = errorCategoryInstance5;
                                                                }
                                                                
                                                                JToken errorCodeValue5 = healthErrorsValue2["errorCode"];
                                                                if (errorCodeValue5 != null && errorCodeValue5.Type != JTokenType.Null)
                                                                {
                                                                    string errorCodeInstance5 = ((string)errorCodeValue5);
                                                                    healthErrorInstance3.ErrorCode = errorCodeInstance5;
                                                                }
                                                                
                                                                JToken errorMessageValue5 = healthErrorsValue2["errorMessage"];
                                                                if (errorMessageValue5 != null && errorMessageValue5.Type != JTokenType.Null)
                                                                {
                                                                    string errorMessageInstance5 = ((string)errorMessageValue5);
                                                                    healthErrorInstance3.ErrorMessage = errorMessageInstance5;
                                                                }
                                                                
                                                                JToken summaryMessageValue5 = healthErrorsValue2["summaryMessage"];
                                                                if (summaryMessageValue5 != null && summaryMessageValue5.Type != JTokenType.Null)
                                                                {
                                                                    string summaryMessageInstance5 = ((string)summaryMessageValue5);
                                                                    healthErrorInstance3.SummaryMessage = summaryMessageInstance5;
                                                                }
                                                                
                                                                JToken possibleCausesValue5 = healthErrorsValue2["possibleCauses"];
                                                                if (possibleCausesValue5 != null && possibleCausesValue5.Type != JTokenType.Null)
                                                                {
                                                                    string possibleCausesInstance5 = ((string)possibleCausesValue5);
                                                                    healthErrorInstance3.PossibleCauses = possibleCausesInstance5;
                                                                }
                                                                
                                                                JToken recommendedActionValue5 = healthErrorsValue2["recommendedAction"];
                                                                if (recommendedActionValue5 != null && recommendedActionValue5.Type != JTokenType.Null)
                                                                {
                                                                    string recommendedActionInstance5 = ((string)recommendedActionValue5);
                                                                    healthErrorInstance3.RecommendedAction = recommendedActionInstance5;
                                                                }
                                                                
                                                                JToken creationTimeUtcValue5 = healthErrorsValue2["creationTimeUtc"];
                                                                if (creationTimeUtcValue5 != null && creationTimeUtcValue5.Type != JTokenType.Null)
                                                                {
                                                                    DateTime creationTimeUtcInstance5 = ((DateTime)creationTimeUtcValue5);
                                                                    healthErrorInstance3.CreationTimeUtc = creationTimeUtcInstance5;
                                                                }
                                                                
                                                                JToken recoveryProviderErrorMessageValue5 = healthErrorsValue2["recoveryProviderErrorMessage"];
                                                                if (recoveryProviderErrorMessageValue5 != null && recoveryProviderErrorMessageValue5.Type != JTokenType.Null)
                                                                {
                                                                    string recoveryProviderErrorMessageInstance5 = ((string)recoveryProviderErrorMessageValue5);
                                                                    healthErrorInstance3.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance5;
                                                                }
                                                                
                                                                JToken entityIdValue5 = healthErrorsValue2["entityId"];
                                                                if (entityIdValue5 != null && entityIdValue5.Type != JTokenType.Null)
                                                                {
                                                                    string entityIdInstance5 = ((string)entityIdValue5);
                                                                    healthErrorInstance3.EntityId = entityIdInstance5;
                                                                }
                                                                
                                                                JToken innerHealthErrorsArray3 = healthErrorsValue2["innerHealthErrors"];
                                                                if (innerHealthErrorsArray3 != null && innerHealthErrorsArray3.Type != JTokenType.Null)
                                                                {
                                                                    foreach (JToken innerHealthErrorsValue3 in ((JArray)innerHealthErrorsArray3))
                                                                    {
                                                                        InnerHealthError innerHealthErrorInstance3 = new InnerHealthError();
                                                                        healthErrorInstance3.InnerHealthErrors.Add(innerHealthErrorInstance3);
                                                                        
                                                                        JToken errorSourceValue6 = innerHealthErrorsValue3["errorSource"];
                                                                        if (errorSourceValue6 != null && errorSourceValue6.Type != JTokenType.Null)
                                                                        {
                                                                            string errorSourceInstance6 = ((string)errorSourceValue6);
                                                                            innerHealthErrorInstance3.ErrorSource = errorSourceInstance6;
                                                                        }
                                                                        
                                                                        JToken errorTypeValue6 = innerHealthErrorsValue3["errorType"];
                                                                        if (errorTypeValue6 != null && errorTypeValue6.Type != JTokenType.Null)
                                                                        {
                                                                            string errorTypeInstance6 = ((string)errorTypeValue6);
                                                                            innerHealthErrorInstance3.ErrorType = errorTypeInstance6;
                                                                        }
                                                                        
                                                                        JToken errorLevelValue6 = innerHealthErrorsValue3["errorLevel"];
                                                                        if (errorLevelValue6 != null && errorLevelValue6.Type != JTokenType.Null)
                                                                        {
                                                                            string errorLevelInstance6 = ((string)errorLevelValue6);
                                                                            innerHealthErrorInstance3.ErrorLevel = errorLevelInstance6;
                                                                        }
                                                                        
                                                                        JToken errorCategoryValue6 = innerHealthErrorsValue3["errorCategory"];
                                                                        if (errorCategoryValue6 != null && errorCategoryValue6.Type != JTokenType.Null)
                                                                        {
                                                                            string errorCategoryInstance6 = ((string)errorCategoryValue6);
                                                                            innerHealthErrorInstance3.ErrorCategory = errorCategoryInstance6;
                                                                        }
                                                                        
                                                                        JToken errorCodeValue6 = innerHealthErrorsValue3["errorCode"];
                                                                        if (errorCodeValue6 != null && errorCodeValue6.Type != JTokenType.Null)
                                                                        {
                                                                            string errorCodeInstance6 = ((string)errorCodeValue6);
                                                                            innerHealthErrorInstance3.ErrorCode = errorCodeInstance6;
                                                                        }
                                                                        
                                                                        JToken errorMessageValue6 = innerHealthErrorsValue3["errorMessage"];
                                                                        if (errorMessageValue6 != null && errorMessageValue6.Type != JTokenType.Null)
                                                                        {
                                                                            string errorMessageInstance6 = ((string)errorMessageValue6);
                                                                            innerHealthErrorInstance3.ErrorMessage = errorMessageInstance6;
                                                                        }
                                                                        
                                                                        JToken summaryMessageValue6 = innerHealthErrorsValue3["summaryMessage"];
                                                                        if (summaryMessageValue6 != null && summaryMessageValue6.Type != JTokenType.Null)
                                                                        {
                                                                            string summaryMessageInstance6 = ((string)summaryMessageValue6);
                                                                            innerHealthErrorInstance3.SummaryMessage = summaryMessageInstance6;
                                                                        }
                                                                        
                                                                        JToken possibleCausesValue6 = innerHealthErrorsValue3["possibleCauses"];
                                                                        if (possibleCausesValue6 != null && possibleCausesValue6.Type != JTokenType.Null)
                                                                        {
                                                                            string possibleCausesInstance6 = ((string)possibleCausesValue6);
                                                                            innerHealthErrorInstance3.PossibleCauses = possibleCausesInstance6;
                                                                        }
                                                                        
                                                                        JToken recommendedActionValue6 = innerHealthErrorsValue3["recommendedAction"];
                                                                        if (recommendedActionValue6 != null && recommendedActionValue6.Type != JTokenType.Null)
                                                                        {
                                                                            string recommendedActionInstance6 = ((string)recommendedActionValue6);
                                                                            innerHealthErrorInstance3.RecommendedAction = recommendedActionInstance6;
                                                                        }
                                                                        
                                                                        JToken creationTimeUtcValue6 = innerHealthErrorsValue3["creationTimeUtc"];
                                                                        if (creationTimeUtcValue6 != null && creationTimeUtcValue6.Type != JTokenType.Null)
                                                                        {
                                                                            DateTime creationTimeUtcInstance6 = ((DateTime)creationTimeUtcValue6);
                                                                            innerHealthErrorInstance3.CreationTimeUtc = creationTimeUtcInstance6;
                                                                        }
                                                                        
                                                                        JToken recoveryProviderErrorMessageValue6 = innerHealthErrorsValue3["recoveryProviderErrorMessage"];
                                                                        if (recoveryProviderErrorMessageValue6 != null && recoveryProviderErrorMessageValue6.Type != JTokenType.Null)
                                                                        {
                                                                            string recoveryProviderErrorMessageInstance6 = ((string)recoveryProviderErrorMessageValue6);
                                                                            innerHealthErrorInstance3.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance6;
                                                                        }
                                                                        
                                                                        JToken entityIdValue6 = innerHealthErrorsValue3["entityId"];
                                                                        if (entityIdValue6 != null && entityIdValue6.Type != JTokenType.Null)
                                                                        {
                                                                            string entityIdInstance6 = ((string)entityIdValue6);
                                                                            innerHealthErrorInstance3.EntityId = entityIdInstance6;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        
                                                        JToken diskCountValue = masterTargetServersValue["diskCount"];
                                                        if (diskCountValue != null && diskCountValue.Type != JTokenType.Null)
                                                        {
                                                            int diskCountInstance = ((int)diskCountValue);
                                                            masterTargetServerInstance.DiskCount = diskCountInstance;
                                                        }
                                                        
                                                        JToken osVersionValue2 = masterTargetServersValue["osVersion"];
                                                        if (osVersionValue2 != null && osVersionValue2.Type != JTokenType.Null)
                                                        {
                                                            string osVersionInstance2 = ((string)osVersionValue2);
                                                            masterTargetServerInstance.OsVersion = osVersionInstance2;
                                                        }
                                                        
                                                        JToken agentExpiryDateValue2 = masterTargetServersValue["agentExpiryDate"];
                                                        if (agentExpiryDateValue2 != null && agentExpiryDateValue2.Type != JTokenType.Null)
                                                        {
                                                            DateTime agentExpiryDateInstance2 = ((DateTime)agentExpiryDateValue2);
                                                            masterTargetServerInstance.AgentExpiryDate = agentExpiryDateInstance2;
                                                        }
                                                        
                                                        JToken marsAgentVersionValue = masterTargetServersValue["marsAgentVersion"];
                                                        if (marsAgentVersionValue != null && marsAgentVersionValue.Type != JTokenType.Null)
                                                        {
                                                            string marsAgentVersionInstance = ((string)marsAgentVersionValue);
                                                            masterTargetServerInstance.MarsAgentVersion = marsAgentVersionInstance;
                                                        }
                                                        
                                                        JToken marsAgentExpiryDateValue = masterTargetServersValue["marsAgentExpiryDate"];
                                                        if (marsAgentExpiryDateValue != null && marsAgentExpiryDateValue.Type != JTokenType.Null)
                                                        {
                                                            DateTime marsAgentExpiryDateInstance = ((DateTime)marsAgentExpiryDateValue);
                                                            masterTargetServerInstance.MarsAgentExpiryDate = marsAgentExpiryDateInstance;
                                                        }
                                                        
                                                        JToken agentVersionDetailsValue2 = masterTargetServersValue["agentVersionDetails"];
                                                        if (agentVersionDetailsValue2 != null && agentVersionDetailsValue2.Type != JTokenType.Null)
                                                        {
                                                            VersionDetails agentVersionDetailsInstance2 = new VersionDetails();
                                                            masterTargetServerInstance.AgentVersionDetails = agentVersionDetailsInstance2;
                                                            
                                                            JToken versionValue3 = agentVersionDetailsValue2["version"];
                                                            if (versionValue3 != null && versionValue3.Type != JTokenType.Null)
                                                            {
                                                                string versionInstance3 = ((string)versionValue3);
                                                                agentVersionDetailsInstance2.Version = versionInstance3;
                                                            }
                                                            
                                                            JToken expiryDateValue2 = agentVersionDetailsValue2["expiryDate"];
                                                            if (expiryDateValue2 != null && expiryDateValue2.Type != JTokenType.Null)
                                                            {
                                                                DateTime expiryDateInstance2 = ((DateTime)expiryDateValue2);
                                                                agentVersionDetailsInstance2.ExpiryDate = expiryDateInstance2;
                                                            }
                                                            
                                                            JToken statusValue2 = agentVersionDetailsValue2["status"];
                                                            if (statusValue2 != null && statusValue2.Type != JTokenType.Null)
                                                            {
                                                                string statusInstance2 = ((string)statusValue2);
                                                                agentVersionDetailsInstance2.Status = statusInstance2;
                                                            }
                                                        }
                                                        
                                                        JToken marsAgentVersionDetailsValue = masterTargetServersValue["marsAgentVersionDetails"];
                                                        if (marsAgentVersionDetailsValue != null && marsAgentVersionDetailsValue.Type != JTokenType.Null)
                                                        {
                                                            VersionDetails marsAgentVersionDetailsInstance = new VersionDetails();
                                                            masterTargetServerInstance.MarsAgentVersionDetails = marsAgentVersionDetailsInstance;
                                                            
                                                            JToken versionValue4 = marsAgentVersionDetailsValue["version"];
                                                            if (versionValue4 != null && versionValue4.Type != JTokenType.Null)
                                                            {
                                                                string versionInstance4 = ((string)versionValue4);
                                                                marsAgentVersionDetailsInstance.Version = versionInstance4;
                                                            }
                                                            
                                                            JToken expiryDateValue3 = marsAgentVersionDetailsValue["expiryDate"];
                                                            if (expiryDateValue3 != null && expiryDateValue3.Type != JTokenType.Null)
                                                            {
                                                                DateTime expiryDateInstance3 = ((DateTime)expiryDateValue3);
                                                                marsAgentVersionDetailsInstance.ExpiryDate = expiryDateInstance3;
                                                            }
                                                            
                                                            JToken statusValue3 = marsAgentVersionDetailsValue["status"];
                                                            if (statusValue3 != null && statusValue3.Type != JTokenType.Null)
                                                            {
                                                                string statusInstance3 = ((string)statusValue3);
                                                                marsAgentVersionDetailsInstance.Status = statusInstance3;
                                                            }
                                                        }
                                                    }
                                                }
                                                
                                                JToken runAsAccountsArray = customDetailsValue["runAsAccounts"];
                                                if (runAsAccountsArray != null && runAsAccountsArray.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken runAsAccountsValue in ((JArray)runAsAccountsArray))
                                                    {
                                                        RunAsAccount runAsAccountInstance = new RunAsAccount();
                                                        vMwareFabricDetailsInstance.RunAsAccounts.Add(runAsAccountInstance);
                                                        
                                                        JToken accountIdValue = runAsAccountsValue["accountId"];
                                                        if (accountIdValue != null && accountIdValue.Type != JTokenType.Null)
                                                        {
                                                            string accountIdInstance = ((string)accountIdValue);
                                                            runAsAccountInstance.AccountId = accountIdInstance;
                                                        }
                                                        
                                                        JToken accountNameValue = runAsAccountsValue["accountName"];
                                                        if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                                                        {
                                                            string accountNameInstance = ((string)accountNameValue);
                                                            runAsAccountInstance.AccountName = accountNameInstance;
                                                        }
                                                    }
                                                }
                                                
                                                JToken replicationPairCountValue2 = customDetailsValue["replicationPairCount"];
                                                if (replicationPairCountValue2 != null && replicationPairCountValue2.Type != JTokenType.Null)
                                                {
                                                    string replicationPairCountInstance2 = ((string)replicationPairCountValue2);
                                                    vMwareFabricDetailsInstance.ReplicationPairCount = replicationPairCountInstance2;
                                                }
                                                
                                                JToken processServerCountValue = customDetailsValue["processServerCount"];
                                                if (processServerCountValue != null && processServerCountValue.Type != JTokenType.Null)
                                                {
                                                    string processServerCountInstance = ((string)processServerCountValue);
                                                    vMwareFabricDetailsInstance.ProcessServerCount = processServerCountInstance;
                                                }
                                                
                                                JToken agentCountValue = customDetailsValue["agentCount"];
                                                if (agentCountValue != null && agentCountValue.Type != JTokenType.Null)
                                                {
                                                    string agentCountInstance = ((string)agentCountValue);
                                                    vMwareFabricDetailsInstance.AgentCount = agentCountInstance;
                                                }
                                                
                                                JToken protectedServersValue = customDetailsValue["protectedServers"];
                                                if (protectedServersValue != null && protectedServersValue.Type != JTokenType.Null)
                                                {
                                                    string protectedServersInstance = ((string)protectedServersValue);
                                                    vMwareFabricDetailsInstance.ProtectedServers = protectedServersInstance;
                                                }
                                                
                                                JToken systemLoadValue2 = customDetailsValue["systemLoad"];
                                                if (systemLoadValue2 != null && systemLoadValue2.Type != JTokenType.Null)
                                                {
                                                    string systemLoadInstance2 = ((string)systemLoadValue2);
                                                    vMwareFabricDetailsInstance.SystemLoad = systemLoadInstance2;
                                                }
                                                
                                                JToken systemLoadStatusValue2 = customDetailsValue["systemLoadStatus"];
                                                if (systemLoadStatusValue2 != null && systemLoadStatusValue2.Type != JTokenType.Null)
                                                {
                                                    string systemLoadStatusInstance2 = ((string)systemLoadStatusValue2);
                                                    vMwareFabricDetailsInstance.SystemLoadStatus = systemLoadStatusInstance2;
                                                }
                                                
                                                JToken cpuLoadValue2 = customDetailsValue["cpuLoad"];
                                                if (cpuLoadValue2 != null && cpuLoadValue2.Type != JTokenType.Null)
                                                {
                                                    string cpuLoadInstance2 = ((string)cpuLoadValue2);
                                                    vMwareFabricDetailsInstance.CpuLoad = cpuLoadInstance2;
                                                }
                                                
                                                JToken cpuLoadStatusValue2 = customDetailsValue["cpuLoadStatus"];
                                                if (cpuLoadStatusValue2 != null && cpuLoadStatusValue2.Type != JTokenType.Null)
                                                {
                                                    string cpuLoadStatusInstance2 = ((string)cpuLoadStatusValue2);
                                                    vMwareFabricDetailsInstance.CpuLoadStatus = cpuLoadStatusInstance2;
                                                }
                                                
                                                JToken totalMemoryInBytesValue2 = customDetailsValue["totalMemoryInBytes"];
                                                if (totalMemoryInBytesValue2 != null && totalMemoryInBytesValue2.Type != JTokenType.Null)
                                                {
                                                    long totalMemoryInBytesInstance2 = ((long)totalMemoryInBytesValue2);
                                                    vMwareFabricDetailsInstance.TotalMemoryInBytes = totalMemoryInBytesInstance2;
                                                }
                                                
                                                JToken availableMemoryInBytesValue2 = customDetailsValue["availableMemoryInBytes"];
                                                if (availableMemoryInBytesValue2 != null && availableMemoryInBytesValue2.Type != JTokenType.Null)
                                                {
                                                    long availableMemoryInBytesInstance2 = ((long)availableMemoryInBytesValue2);
                                                    vMwareFabricDetailsInstance.AvailableMemoryInBytes = availableMemoryInBytesInstance2;
                                                }
                                                
                                                JToken memoryUsageStatusValue2 = customDetailsValue["memoryUsageStatus"];
                                                if (memoryUsageStatusValue2 != null && memoryUsageStatusValue2.Type != JTokenType.Null)
                                                {
                                                    string memoryUsageStatusInstance2 = ((string)memoryUsageStatusValue2);
                                                    vMwareFabricDetailsInstance.MemoryUsageStatus = memoryUsageStatusInstance2;
                                                }
                                                
                                                JToken totalSpaceInBytesValue2 = customDetailsValue["totalSpaceInBytes"];
                                                if (totalSpaceInBytesValue2 != null && totalSpaceInBytesValue2.Type != JTokenType.Null)
                                                {
                                                    long totalSpaceInBytesInstance2 = ((long)totalSpaceInBytesValue2);
                                                    vMwareFabricDetailsInstance.TotalSpaceInBytes = totalSpaceInBytesInstance2;
                                                }
                                                
                                                JToken availableSpaceInBytesValue2 = customDetailsValue["availableSpaceInBytes"];
                                                if (availableSpaceInBytesValue2 != null && availableSpaceInBytesValue2.Type != JTokenType.Null)
                                                {
                                                    long availableSpaceInBytesInstance2 = ((long)availableSpaceInBytesValue2);
                                                    vMwareFabricDetailsInstance.AvailableSpaceInBytes = availableSpaceInBytesInstance2;
                                                }
                                                
                                                JToken spaceUsageStatusValue2 = customDetailsValue["spaceUsageStatus"];
                                                if (spaceUsageStatusValue2 != null && spaceUsageStatusValue2.Type != JTokenType.Null)
                                                {
                                                    string spaceUsageStatusInstance2 = ((string)spaceUsageStatusValue2);
                                                    vMwareFabricDetailsInstance.SpaceUsageStatus = spaceUsageStatusInstance2;
                                                }
                                                
                                                JToken webLoadValue = customDetailsValue["webLoad"];
                                                if (webLoadValue != null && webLoadValue.Type != JTokenType.Null)
                                                {
                                                    string webLoadInstance = ((string)webLoadValue);
                                                    vMwareFabricDetailsInstance.WebLoad = webLoadInstance;
                                                }
                                                
                                                JToken webLoadStatusValue = customDetailsValue["webLoadStatus"];
                                                if (webLoadStatusValue != null && webLoadStatusValue.Type != JTokenType.Null)
                                                {
                                                    string webLoadStatusInstance = ((string)webLoadStatusValue);
                                                    vMwareFabricDetailsInstance.WebLoadStatus = webLoadStatusInstance;
                                                }
                                                
                                                JToken databaseServerLoadValue = customDetailsValue["databaseServerLoad"];
                                                if (databaseServerLoadValue != null && databaseServerLoadValue.Type != JTokenType.Null)
                                                {
                                                    string databaseServerLoadInstance = ((string)databaseServerLoadValue);
                                                    vMwareFabricDetailsInstance.DatabaseServerLoad = databaseServerLoadInstance;
                                                }
                                                
                                                JToken databaseServerLoadStatusValue = customDetailsValue["databaseServerLoadStatus"];
                                                if (databaseServerLoadStatusValue != null && databaseServerLoadStatusValue.Type != JTokenType.Null)
                                                {
                                                    string databaseServerLoadStatusInstance = ((string)databaseServerLoadStatusValue);
                                                    vMwareFabricDetailsInstance.DatabaseServerLoadStatus = databaseServerLoadStatusInstance;
                                                }
                                                
                                                JToken csServiceStatusValue = customDetailsValue["csServiceStatus"];
                                                if (csServiceStatusValue != null && csServiceStatusValue.Type != JTokenType.Null)
                                                {
                                                    string csServiceStatusInstance = ((string)csServiceStatusValue);
                                                    vMwareFabricDetailsInstance.CsServiceStatus = csServiceStatusInstance;
                                                }
                                                
                                                JToken ipAddressValue3 = customDetailsValue["ipAddress"];
                                                if (ipAddressValue3 != null && ipAddressValue3.Type != JTokenType.Null)
                                                {
                                                    string ipAddressInstance3 = ((string)ipAddressValue3);
                                                    vMwareFabricDetailsInstance.IpAddress = ipAddressInstance3;
                                                }
                                                
                                                JToken agentVersionValue3 = customDetailsValue["agentVersion"];
                                                if (agentVersionValue3 != null && agentVersionValue3.Type != JTokenType.Null)
                                                {
                                                    string agentVersionInstance3 = ((string)agentVersionValue3);
                                                    vMwareFabricDetailsInstance.AgentVersion = agentVersionInstance3;
                                                }
                                                
                                                JToken hostNameValue = customDetailsValue["hostName"];
                                                if (hostNameValue != null && hostNameValue.Type != JTokenType.Null)
                                                {
                                                    string hostNameInstance = ((string)hostNameValue);
                                                    vMwareFabricDetailsInstance.HostName = hostNameInstance;
                                                }
                                                
                                                JToken lastHeartbeatValue3 = customDetailsValue["lastHeartbeat"];
                                                if (lastHeartbeatValue3 != null && lastHeartbeatValue3.Type != JTokenType.Null)
                                                {
                                                    DateTime lastHeartbeatInstance3 = ((DateTime)lastHeartbeatValue3);
                                                    vMwareFabricDetailsInstance.LastHeartbeat = lastHeartbeatInstance3;
                                                }
                                                
                                                JToken versionStatusValue3 = customDetailsValue["versionStatus"];
                                                if (versionStatusValue3 != null && versionStatusValue3.Type != JTokenType.Null)
                                                {
                                                    string versionStatusInstance3 = ((string)versionStatusValue3);
                                                    vMwareFabricDetailsInstance.VersionStatus = versionStatusInstance3;
                                                }
                                                
                                                JToken sslCertExpiryDateValue2 = customDetailsValue["sslCertExpiryDate"];
                                                if (sslCertExpiryDateValue2 != null && sslCertExpiryDateValue2.Type != JTokenType.Null)
                                                {
                                                    DateTime sslCertExpiryDateInstance2 = ((DateTime)sslCertExpiryDateValue2);
                                                    vMwareFabricDetailsInstance.SslCertExpiryDate = sslCertExpiryDateInstance2;
                                                }
                                                
                                                JToken sslCertExpiryRemainingDaysValue2 = customDetailsValue["sslCertExpiryRemainingDays"];
                                                if (sslCertExpiryRemainingDaysValue2 != null && sslCertExpiryRemainingDaysValue2.Type != JTokenType.Null)
                                                {
                                                    int sslCertExpiryRemainingDaysInstance2 = ((int)sslCertExpiryRemainingDaysValue2);
                                                    vMwareFabricDetailsInstance.SslCertExpiryRemainingDays = sslCertExpiryRemainingDaysInstance2;
                                                }
                                                
                                                JToken psTemplateVersionValue = customDetailsValue["psTemplateVersion"];
                                                if (psTemplateVersionValue != null && psTemplateVersionValue.Type != JTokenType.Null)
                                                {
                                                    string psTemplateVersionInstance = ((string)psTemplateVersionValue);
                                                    vMwareFabricDetailsInstance.PsTemplateVersion = psTemplateVersionInstance;
                                                }
                                                
                                                JToken agentExpiryDateValue3 = customDetailsValue["agentExpiryDate"];
                                                if (agentExpiryDateValue3 != null && agentExpiryDateValue3.Type != JTokenType.Null)
                                                {
                                                    DateTime agentExpiryDateInstance3 = ((DateTime)agentExpiryDateValue3);
                                                    vMwareFabricDetailsInstance.AgentExpiryDate = agentExpiryDateInstance3;
                                                }
                                                
                                                JToken agentVersionDetailsValue3 = customDetailsValue["agentVersionDetails"];
                                                if (agentVersionDetailsValue3 != null && agentVersionDetailsValue3.Type != JTokenType.Null)
                                                {
                                                    VersionDetails agentVersionDetailsInstance3 = new VersionDetails();
                                                    vMwareFabricDetailsInstance.AgentVersionDetails = agentVersionDetailsInstance3;
                                                    
                                                    JToken versionValue5 = agentVersionDetailsValue3["version"];
                                                    if (versionValue5 != null && versionValue5.Type != JTokenType.Null)
                                                    {
                                                        string versionInstance5 = ((string)versionValue5);
                                                        agentVersionDetailsInstance3.Version = versionInstance5;
                                                    }
                                                    
                                                    JToken expiryDateValue4 = agentVersionDetailsValue3["expiryDate"];
                                                    if (expiryDateValue4 != null && expiryDateValue4.Type != JTokenType.Null)
                                                    {
                                                        DateTime expiryDateInstance4 = ((DateTime)expiryDateValue4);
                                                        agentVersionDetailsInstance3.ExpiryDate = expiryDateInstance4;
                                                    }
                                                    
                                                    JToken statusValue4 = agentVersionDetailsValue3["status"];
                                                    if (statusValue4 != null && statusValue4.Type != JTokenType.Null)
                                                    {
                                                        string statusInstance4 = ((string)statusValue4);
                                                        agentVersionDetailsInstance3.Status = statusInstance4;
                                                    }
                                                }
                                                
                                                JToken instanceTypeValue4 = customDetailsValue["instanceType"];
                                                if (instanceTypeValue4 != null && instanceTypeValue4.Type != JTokenType.Null)
                                                {
                                                    string instanceTypeInstance4 = ((string)instanceTypeValue4);
                                                    vMwareFabricDetailsInstance.InstanceType = instanceTypeInstance4;
                                                }
                                                propertiesInstance.CustomDetails = vMwareFabricDetailsInstance;
                                            }
                                            if (typeName == "VMwareV2")
                                            {
                                                VMwareV2FabricSpecificDetails vMwareV2FabricSpecificDetailsInstance = new VMwareV2FabricSpecificDetails();
                                                
                                                JToken vmwareSiteIdValue = customDetailsValue["vmwareSiteId"];
                                                if (vmwareSiteIdValue != null && vmwareSiteIdValue.Type != JTokenType.Null)
                                                {
                                                    string vmwareSiteIdInstance = ((string)vmwareSiteIdValue);
                                                    vMwareV2FabricSpecificDetailsInstance.VMwareSiteId = vmwareSiteIdInstance;
                                                }
                                                
                                                JToken migrationSolutionIdValue = customDetailsValue["migrationSolutionId"];
                                                if (migrationSolutionIdValue != null && migrationSolutionIdValue.Type != JTokenType.Null)
                                                {
                                                    string migrationSolutionIdInstance = ((string)migrationSolutionIdValue);
                                                    vMwareV2FabricSpecificDetailsInstance.MigrationSolutionId = migrationSolutionIdInstance;
                                                }
                                                
                                                JToken serviceEndpointValue = customDetailsValue["serviceEndpoint"];
                                                if (serviceEndpointValue != null && serviceEndpointValue.Type != JTokenType.Null)
                                                {
                                                    string serviceEndpointInstance = ((string)serviceEndpointValue);
                                                    vMwareV2FabricSpecificDetailsInstance.ServiceEndpoint = serviceEndpointInstance;
                                                }
                                                
                                                JToken instanceTypeValue5 = customDetailsValue["instanceType"];
                                                if (instanceTypeValue5 != null && instanceTypeValue5.Type != JTokenType.Null)
                                                {
                                                    string instanceTypeInstance5 = ((string)instanceTypeValue5);
                                                    vMwareV2FabricSpecificDetailsInstance.InstanceType = instanceTypeInstance5;
                                                }
                                                propertiesInstance.CustomDetails = vMwareV2FabricSpecificDetailsInstance;
                                            }
                                        }
                                        
                                        JToken healthErrorDetailsArray = propertiesValue["healthErrorDetails"];
                                        if (healthErrorDetailsArray != null && healthErrorDetailsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken healthErrorDetailsValue in ((JArray)healthErrorDetailsArray))
                                            {
                                                HealthError healthErrorInstance4 = new HealthError();
                                                propertiesInstance.HealthErrorDetails.Add(healthErrorInstance4);
                                                
                                                JToken errorSourceValue7 = healthErrorDetailsValue["errorSource"];
                                                if (errorSourceValue7 != null && errorSourceValue7.Type != JTokenType.Null)
                                                {
                                                    string errorSourceInstance7 = ((string)errorSourceValue7);
                                                    healthErrorInstance4.ErrorSource = errorSourceInstance7;
                                                }
                                                
                                                JToken errorTypeValue7 = healthErrorDetailsValue["errorType"];
                                                if (errorTypeValue7 != null && errorTypeValue7.Type != JTokenType.Null)
                                                {
                                                    string errorTypeInstance7 = ((string)errorTypeValue7);
                                                    healthErrorInstance4.ErrorType = errorTypeInstance7;
                                                }
                                                
                                                JToken errorLevelValue7 = healthErrorDetailsValue["errorLevel"];
                                                if (errorLevelValue7 != null && errorLevelValue7.Type != JTokenType.Null)
                                                {
                                                    string errorLevelInstance7 = ((string)errorLevelValue7);
                                                    healthErrorInstance4.ErrorLevel = errorLevelInstance7;
                                                }
                                                
                                                JToken errorCategoryValue7 = healthErrorDetailsValue["errorCategory"];
                                                if (errorCategoryValue7 != null && errorCategoryValue7.Type != JTokenType.Null)
                                                {
                                                    string errorCategoryInstance7 = ((string)errorCategoryValue7);
                                                    healthErrorInstance4.ErrorCategory = errorCategoryInstance7;
                                                }
                                                
                                                JToken errorCodeValue7 = healthErrorDetailsValue["errorCode"];
                                                if (errorCodeValue7 != null && errorCodeValue7.Type != JTokenType.Null)
                                                {
                                                    string errorCodeInstance7 = ((string)errorCodeValue7);
                                                    healthErrorInstance4.ErrorCode = errorCodeInstance7;
                                                }
                                                
                                                JToken errorMessageValue7 = healthErrorDetailsValue["errorMessage"];
                                                if (errorMessageValue7 != null && errorMessageValue7.Type != JTokenType.Null)
                                                {
                                                    string errorMessageInstance7 = ((string)errorMessageValue7);
                                                    healthErrorInstance4.ErrorMessage = errorMessageInstance7;
                                                }
                                                
                                                JToken summaryMessageValue7 = healthErrorDetailsValue["summaryMessage"];
                                                if (summaryMessageValue7 != null && summaryMessageValue7.Type != JTokenType.Null)
                                                {
                                                    string summaryMessageInstance7 = ((string)summaryMessageValue7);
                                                    healthErrorInstance4.SummaryMessage = summaryMessageInstance7;
                                                }
                                                
                                                JToken possibleCausesValue7 = healthErrorDetailsValue["possibleCauses"];
                                                if (possibleCausesValue7 != null && possibleCausesValue7.Type != JTokenType.Null)
                                                {
                                                    string possibleCausesInstance7 = ((string)possibleCausesValue7);
                                                    healthErrorInstance4.PossibleCauses = possibleCausesInstance7;
                                                }
                                                
                                                JToken recommendedActionValue7 = healthErrorDetailsValue["recommendedAction"];
                                                if (recommendedActionValue7 != null && recommendedActionValue7.Type != JTokenType.Null)
                                                {
                                                    string recommendedActionInstance7 = ((string)recommendedActionValue7);
                                                    healthErrorInstance4.RecommendedAction = recommendedActionInstance7;
                                                }
                                                
                                                JToken creationTimeUtcValue7 = healthErrorDetailsValue["creationTimeUtc"];
                                                if (creationTimeUtcValue7 != null && creationTimeUtcValue7.Type != JTokenType.Null)
                                                {
                                                    DateTime creationTimeUtcInstance7 = ((DateTime)creationTimeUtcValue7);
                                                    healthErrorInstance4.CreationTimeUtc = creationTimeUtcInstance7;
                                                }
                                                
                                                JToken recoveryProviderErrorMessageValue7 = healthErrorDetailsValue["recoveryProviderErrorMessage"];
                                                if (recoveryProviderErrorMessageValue7 != null && recoveryProviderErrorMessageValue7.Type != JTokenType.Null)
                                                {
                                                    string recoveryProviderErrorMessageInstance7 = ((string)recoveryProviderErrorMessageValue7);
                                                    healthErrorInstance4.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance7;
                                                }
                                                
                                                JToken entityIdValue7 = healthErrorDetailsValue["entityId"];
                                                if (entityIdValue7 != null && entityIdValue7.Type != JTokenType.Null)
                                                {
                                                    string entityIdInstance7 = ((string)entityIdValue7);
                                                    healthErrorInstance4.EntityId = entityIdInstance7;
                                                }
                                                
                                                JToken innerHealthErrorsArray4 = healthErrorDetailsValue["innerHealthErrors"];
                                                if (innerHealthErrorsArray4 != null && innerHealthErrorsArray4.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken innerHealthErrorsValue4 in ((JArray)innerHealthErrorsArray4))
                                                    {
                                                        InnerHealthError innerHealthErrorInstance4 = new InnerHealthError();
                                                        healthErrorInstance4.InnerHealthErrors.Add(innerHealthErrorInstance4);
                                                        
                                                        JToken errorSourceValue8 = innerHealthErrorsValue4["errorSource"];
                                                        if (errorSourceValue8 != null && errorSourceValue8.Type != JTokenType.Null)
                                                        {
                                                            string errorSourceInstance8 = ((string)errorSourceValue8);
                                                            innerHealthErrorInstance4.ErrorSource = errorSourceInstance8;
                                                        }
                                                        
                                                        JToken errorTypeValue8 = innerHealthErrorsValue4["errorType"];
                                                        if (errorTypeValue8 != null && errorTypeValue8.Type != JTokenType.Null)
                                                        {
                                                            string errorTypeInstance8 = ((string)errorTypeValue8);
                                                            innerHealthErrorInstance4.ErrorType = errorTypeInstance8;
                                                        }
                                                        
                                                        JToken errorLevelValue8 = innerHealthErrorsValue4["errorLevel"];
                                                        if (errorLevelValue8 != null && errorLevelValue8.Type != JTokenType.Null)
                                                        {
                                                            string errorLevelInstance8 = ((string)errorLevelValue8);
                                                            innerHealthErrorInstance4.ErrorLevel = errorLevelInstance8;
                                                        }
                                                        
                                                        JToken errorCategoryValue8 = innerHealthErrorsValue4["errorCategory"];
                                                        if (errorCategoryValue8 != null && errorCategoryValue8.Type != JTokenType.Null)
                                                        {
                                                            string errorCategoryInstance8 = ((string)errorCategoryValue8);
                                                            innerHealthErrorInstance4.ErrorCategory = errorCategoryInstance8;
                                                        }
                                                        
                                                        JToken errorCodeValue8 = innerHealthErrorsValue4["errorCode"];
                                                        if (errorCodeValue8 != null && errorCodeValue8.Type != JTokenType.Null)
                                                        {
                                                            string errorCodeInstance8 = ((string)errorCodeValue8);
                                                            innerHealthErrorInstance4.ErrorCode = errorCodeInstance8;
                                                        }
                                                        
                                                        JToken errorMessageValue8 = innerHealthErrorsValue4["errorMessage"];
                                                        if (errorMessageValue8 != null && errorMessageValue8.Type != JTokenType.Null)
                                                        {
                                                            string errorMessageInstance8 = ((string)errorMessageValue8);
                                                            innerHealthErrorInstance4.ErrorMessage = errorMessageInstance8;
                                                        }
                                                        
                                                        JToken summaryMessageValue8 = innerHealthErrorsValue4["summaryMessage"];
                                                        if (summaryMessageValue8 != null && summaryMessageValue8.Type != JTokenType.Null)
                                                        {
                                                            string summaryMessageInstance8 = ((string)summaryMessageValue8);
                                                            innerHealthErrorInstance4.SummaryMessage = summaryMessageInstance8;
                                                        }
                                                        
                                                        JToken possibleCausesValue8 = innerHealthErrorsValue4["possibleCauses"];
                                                        if (possibleCausesValue8 != null && possibleCausesValue8.Type != JTokenType.Null)
                                                        {
                                                            string possibleCausesInstance8 = ((string)possibleCausesValue8);
                                                            innerHealthErrorInstance4.PossibleCauses = possibleCausesInstance8;
                                                        }
                                                        
                                                        JToken recommendedActionValue8 = innerHealthErrorsValue4["recommendedAction"];
                                                        if (recommendedActionValue8 != null && recommendedActionValue8.Type != JTokenType.Null)
                                                        {
                                                            string recommendedActionInstance8 = ((string)recommendedActionValue8);
                                                            innerHealthErrorInstance4.RecommendedAction = recommendedActionInstance8;
                                                        }
                                                        
                                                        JToken creationTimeUtcValue8 = innerHealthErrorsValue4["creationTimeUtc"];
                                                        if (creationTimeUtcValue8 != null && creationTimeUtcValue8.Type != JTokenType.Null)
                                                        {
                                                            DateTime creationTimeUtcInstance8 = ((DateTime)creationTimeUtcValue8);
                                                            innerHealthErrorInstance4.CreationTimeUtc = creationTimeUtcInstance8;
                                                        }
                                                        
                                                        JToken recoveryProviderErrorMessageValue8 = innerHealthErrorsValue4["recoveryProviderErrorMessage"];
                                                        if (recoveryProviderErrorMessageValue8 != null && recoveryProviderErrorMessageValue8.Type != JTokenType.Null)
                                                        {
                                                            string recoveryProviderErrorMessageInstance8 = ((string)recoveryProviderErrorMessageValue8);
                                                            innerHealthErrorInstance4.RecoveryProviderErrorMessage = recoveryProviderErrorMessageInstance8;
                                                        }
                                                        
                                                        JToken entityIdValue8 = innerHealthErrorsValue4["entityId"];
                                                        if (entityIdValue8 != null && entityIdValue8.Type != JTokenType.Null)
                                                        {
                                                            string entityIdInstance8 = ((string)entityIdValue8);
                                                            innerHealthErrorInstance4.EntityId = entityIdInstance8;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken healthValue = propertiesValue["health"];
                                        if (healthValue != null && healthValue.Type != JTokenType.Null)
                                        {
                                            string healthInstance = ((string)healthValue);
                                            propertiesInstance.Health = healthInstance;
                                        }
                                    }
                                    
                                    JToken idValue3 = valueValue["id"];
                                    if (idValue3 != null && idValue3.Type != JTokenType.Null)
                                    {
                                        string idInstance3 = ((string)idValue3);
                                        fabricInstance.Id = idInstance3;
                                    }
                                    
                                    JToken nameValue2 = valueValue["name"];
                                    if (nameValue2 != null && nameValue2.Type != JTokenType.Null)
                                    {
                                        string nameInstance2 = ((string)nameValue2);
                                        fabricInstance.Name = nameInstance2;
                                    }
                                    
                                    JToken typeValue2 = valueValue["type"];
                                    if (typeValue2 != null && typeValue2.Type != JTokenType.Null)
                                    {
                                        string typeInstance2 = ((string)typeValue2);
                                        fabricInstance.Type = typeInstance2;
                                    }
                                    
                                    JToken locationValue2 = valueValue["location"];
                                    if (locationValue2 != null && locationValue2.Type != JTokenType.Null)
                                    {
                                        string locationInstance2 = ((string)locationValue2);
                                        fabricInstance.Location = locationInstance2;
                                    }
                                    
                                    JToken tagsSequenceElement = ((JToken)valueValue["tags"]);
                                    if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)
                                    {
                                        foreach (JProperty property in tagsSequenceElement)
                                        {
                                            string tagsKey = ((string)property.Name);
                                            string tagsValue = ((string)property.Value);
                                            fabricInstance.Tags.Add(tagsKey, tagsValue);
                                        }
                                    }
                                }
                            }
                            
                            JToken nextLinkValue = responseDoc["nextLink"];
                            if (nextLinkValue != null && nextLinkValue.Type != JTokenType.Null)
                            {
                                string nextLinkInstance = ((string)nextLinkValue);
                                result.NextLink = nextLinkInstance;
                            }
                            
                            JToken clientRequestIdValue = responseDoc["ClientRequestId"];
                            if (clientRequestIdValue != null && clientRequestIdValue.Type != JTokenType.Null)
                            {
                                string clientRequestIdInstance = ((string)clientRequestIdValue);
                                result.ClientRequestId = clientRequestIdInstance;
                            }
                            
                            JToken correlationRequestIdValue = responseDoc["CorrelationRequestId"];
                            if (correlationRequestIdValue != null && correlationRequestIdValue.Type != JTokenType.Null)
                            {
                                string correlationRequestIdInstance = ((string)correlationRequestIdValue);
                                result.CorrelationRequestId = correlationRequestIdInstance;
                            }
                            
                            JToken dateValue = responseDoc["Date"];
                            if (dateValue != null && dateValue.Type != JTokenType.Null)
                            {
                                string dateInstance = ((string)dateValue);
                                result.Date = dateInstance;
                            }
                            
                            JToken contentTypeValue = responseDoc["ContentType"];
                            if (contentTypeValue != null && contentTypeValue.Type != JTokenType.Null)
                            {
                                string contentTypeInstance = ((string)contentTypeValue);
                                result.ContentType = contentTypeInstance;
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Content != null && httpResponse.Content.Headers.Contains("Content-Type"))
                    {
                        result.ContentType = httpResponse.Content.Headers.GetValues("Content-Type").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = httpResponse.Headers.GetValues("Date").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-client-request-id"))
                    {
                        result.ClientRequestId = httpResponse.Headers.GetValues("x-ms-client-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-correlation-request-id"))
                    {
                        result.CorrelationRequestId = httpResponse.Headers.GetValues("x-ms-correlation-request-id").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Migrates Fabric to AAD.
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> MigrateToAadAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            SiteRecoveryManagementClient client = this.Client;
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "MigrateToAadAsync", tracingParameters);
            }
            
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse response = await client.Fabrics.BeginMigrateToAadAsync(fabricName, customRequestHeaders, cancellationToken).ConfigureAwait(false);
            if (response.Status == OperationStatus.Succeeded)
            {
                return response;
            }
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse result = await client.Fabrics.GetMigrateToAadStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
            int delayInSeconds = 30;
            if (client.LongRunningOperationInitialTimeout >= 0)
            {
                delayInSeconds = client.LongRunningOperationInitialTimeout;
            }
            while (result.Status == OperationStatus.InProgress)
            {
                cancellationToken.ThrowIfCancellationRequested();
                await TaskEx.Delay(delayInSeconds * 1000, cancellationToken).ConfigureAwait(false);
                cancellationToken.ThrowIfCancellationRequested();
                result = await client.Fabrics.GetMigrateToAadStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
                delayInSeconds = 30;
                if (client.LongRunningOperationRetryTimeout >= 0)
                {
                    delayInSeconds = client.LongRunningOperationRetryTimeout;
                }
            }
            
            if (shouldTrace)
            {
                TracingAdapter.Exit(invocationId, result);
            }
            
            return result;
        }
        
        /// <summary>
        /// Purges a fabric
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> PurgeAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            SiteRecoveryManagementClient client = this.Client;
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "PurgeAsync", tracingParameters);
            }
            
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse response = await client.Fabrics.BeginPurgingAsync(fabricName, customRequestHeaders, cancellationToken).ConfigureAwait(false);
            if (response.Status == OperationStatus.Succeeded)
            {
                return response;
            }
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse result = await client.Fabrics.GetPurgeStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
            int delayInSeconds = 30;
            if (client.LongRunningOperationInitialTimeout >= 0)
            {
                delayInSeconds = client.LongRunningOperationInitialTimeout;
            }
            while (result.Status == OperationStatus.InProgress)
            {
                cancellationToken.ThrowIfCancellationRequested();
                await TaskEx.Delay(delayInSeconds * 1000, cancellationToken).ConfigureAwait(false);
                cancellationToken.ThrowIfCancellationRequested();
                result = await client.Fabrics.GetPurgeStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
                delayInSeconds = 30;
                if (client.LongRunningOperationRetryTimeout >= 0)
                {
                    delayInSeconds = client.LongRunningOperationRetryTimeout;
                }
            }
            
            if (shouldTrace)
            {
                TracingAdapter.Exit(invocationId, result);
            }
            
            return result;
        }
        
        /// <summary>
        /// Performs reassociate gateway operation on a fabric.
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='input'>
        /// Required. Input to reassociate a gateway.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> ReassociateGatewayAsync(string fabricName, FailoverProcessServerRequest input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            SiteRecoveryManagementClient client = this.Client;
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("input", input);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "ReassociateGatewayAsync", tracingParameters);
            }
            
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse response = await client.Fabrics.BeginReassociateGatewayAsync(fabricName, input, customRequestHeaders, cancellationToken).ConfigureAwait(false);
            if (response.Status == OperationStatus.Succeeded)
            {
                return response;
            }
            cancellationToken.ThrowIfCancellationRequested();
            ReassociateGatewayOperationResponse result = await client.Fabrics.GetReassociateGatewayStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
            int delayInSeconds = 30;
            if (client.LongRunningOperationInitialTimeout >= 0)
            {
                delayInSeconds = client.LongRunningOperationInitialTimeout;
            }
            while (result.Status == OperationStatus.InProgress)
            {
                cancellationToken.ThrowIfCancellationRequested();
                await TaskEx.Delay(delayInSeconds * 1000, cancellationToken).ConfigureAwait(false);
                cancellationToken.ThrowIfCancellationRequested();
                result = await client.Fabrics.GetReassociateGatewayStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
                delayInSeconds = 30;
                if (client.LongRunningOperationRetryTimeout >= 0)
                {
                    delayInSeconds = client.LongRunningOperationRetryTimeout;
                }
            }
            
            if (shouldTrace)
            {
                TracingAdapter.Exit(invocationId, result);
            }
            
            return result;
        }
        
        /// <summary>
        /// Renews certificates of a Fabric
        /// </summary>
        /// <param name='fabricName'>
        /// Required. Fabric Name.
        /// </param>
        /// <param name='input'>
        /// Required. Renew certificate type.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Optional. Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> RenewCertificateAsync(string fabricName, RenewCertificateInput input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
        {
            SiteRecoveryManagementClient client = this.Client;
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("fabricName", fabricName);
                tracingParameters.Add("input", input);
                tracingParameters.Add("customRequestHeaders", customRequestHeaders);
                TracingAdapter.Enter(invocationId, this, "RenewCertificateAsync", tracingParameters);
            }
            
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse response = await client.Fabrics.BeginRenewCertificateAsync(fabricName, input, customRequestHeaders, cancellationToken).ConfigureAwait(false);
            if (response.Status == OperationStatus.Succeeded)
            {
                return response;
            }
            cancellationToken.ThrowIfCancellationRequested();
            FabricOperationResponse result = await client.Fabrics.GetRenewCertificateStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
            int delayInSeconds = 30;
            if (client.LongRunningOperationInitialTimeout >= 0)
            {
                delayInSeconds = client.LongRunningOperationInitialTimeout;
            }
            while (result.Status == OperationStatus.InProgress)
            {
                cancellationToken.ThrowIfCancellationRequested();
                await TaskEx.Delay(delayInSeconds * 1000, cancellationToken).ConfigureAwait(false);
                cancellationToken.ThrowIfCancellationRequested();
                result = await client.Fabrics.GetRenewCertificateStatusAsync(response.Location, cancellationToken).ConfigureAwait(false);
                delayInSeconds = 30;
                if (client.LongRunningOperationRetryTimeout >= 0)
                {
                    delayInSeconds = client.LongRunningOperationRetryTimeout;
                }
            }
            
            if (shouldTrace)
            {
                TracingAdapter.Exit(invocationId, result);
            }
            
            return result;
        }
    }
}
