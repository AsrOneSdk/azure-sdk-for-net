// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure.Management.SiteRecovery.Models;

namespace Microsoft.Azure.Management.SiteRecovery.Models
{
    /// <summary>
    /// Migration item properties.
    /// </summary>
    public partial class MigrationItemProperties
    {
        private IList<string> _allowedOperations;
        
        /// <summary>
        /// Optional. Allowed operations on the migration item.
        /// </summary>
        public IList<string> AllowedOperations
        {
            get { return this._allowedOperations; }
            set { this._allowedOperations = value; }
        }
        
        private CurrentScenarioDetails _currentScenario;
        
        /// <summary>
        /// Optional. The current scenario.
        /// </summary>
        public CurrentScenarioDetails CurrentScenario
        {
            get { return this._currentScenario; }
            set { this._currentScenario = value; }
        }
        
        private string _friendlyName;
        
        /// <summary>
        /// Optional. Friendly name.
        /// </summary>
        public string FriendlyName
        {
            get { return this._friendlyName; }
            set { this._friendlyName = value; }
        }
        
        private System.DateTime? _lastSuccessfulMigrateTime;
        
        /// <summary>
        /// Optional. Gets or sets the last successful migrate time.
        /// </summary>
        public System.DateTime? LastSuccessfulMigrateTime
        {
            get { return this._lastSuccessfulMigrateTime; }
            set { this._lastSuccessfulMigrateTime = value; }
        }
        
        private System.DateTime? _lastSuccessfulTestMigrateTime;
        
        /// <summary>
        /// Optional. Gets or sets the last successful test migrate time.
        /// </summary>
        public System.DateTime? LastSuccessfulTestMigrateTime
        {
            get { return this._lastSuccessfulTestMigrateTime; }
            set { this._lastSuccessfulTestMigrateTime = value; }
        }
        
        private string _migrationState;
        
        /// <summary>
        /// Optional. Migration state.
        /// </summary>
        public string MigrationState
        {
            get { return this._migrationState; }
            set { this._migrationState = value; }
        }
        
        private string _migrationStateDescription;
        
        /// <summary>
        /// Optional. Migration state description.
        /// </summary>
        public string MigrationStateDescription
        {
            get { return this._migrationStateDescription; }
            set { this._migrationStateDescription = value; }
        }
        
        private string _policyFriendlyName;
        
        /// <summary>
        /// Optional. Name of policy governing this PE.
        /// </summary>
        public string PolicyFriendlyName
        {
            get { return this._policyFriendlyName; }
            set { this._policyFriendlyName = value; }
        }
        
        private string _policyId;
        
        /// <summary>
        /// Optional. ARM Id of policy governing this PE.
        /// </summary>
        public string PolicyId
        {
            get { return this._policyId; }
            set { this._policyId = value; }
        }
        
        private MigrationProviderSpecificSettings _providerSpecificDetails;
        
        /// <summary>
        /// Optional. Migration provider specific settings.
        /// </summary>
        public MigrationProviderSpecificSettings ProviderSpecificDetails
        {
            get { return this._providerSpecificDetails; }
            set { this._providerSpecificDetails = value; }
        }
        
        private string _recoveryServicesProviderId;
        
        /// <summary>
        /// Optional. Recovery services provider ARM Id.
        /// </summary>
        public string RecoveryServicesProviderId
        {
            get { return this._recoveryServicesProviderId; }
            set { this._recoveryServicesProviderId = value; }
        }
        
        private string _testMigrateState;
        
        /// <summary>
        /// Optional. Test migrate state.
        /// </summary>
        public string TestMigrateState
        {
            get { return this._testMigrateState; }
            set { this._testMigrateState = value; }
        }
        
        private string _testMigrateStateDescription;
        
        /// <summary>
        /// Optional. Test migrate state description.
        /// </summary>
        public string TestMigrateStateDescription
        {
            get { return this._testMigrateStateDescription; }
            set { this._testMigrateStateDescription = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the MigrationItemProperties class.
        /// </summary>
        public MigrationItemProperties()
        {
            this.AllowedOperations = new LazyList<string>();
        }
    }
}
