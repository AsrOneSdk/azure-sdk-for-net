// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure.Management.SiteRecovery.Models;

namespace Microsoft.Azure.Management.SiteRecovery.Models
{
    /// <summary>
    /// The definition of a Protection Container properties object.
    /// </summary>
    public partial class ProtectionContainerProperties
    {
        private IList<PairingDetails> _associationDetails;
        
        /// <summary>
        /// Optional. Pairing details.
        /// </summary>
        public IList<PairingDetails> AssociationDetails
        {
            get { return this._associationDetails; }
            set { this._associationDetails = value; }
        }
        
        private IList<ReplicationProviders> _availableReplicationProviders;
        
        /// <summary>
        /// Optional. Avaliable replication providers.
        /// </summary>
        public IList<ReplicationProviders> AvailableReplicationProviders
        {
            get { return this._availableReplicationProviders; }
            set { this._availableReplicationProviders = value; }
        }
        
        private string _blockUnpairingPECount;
        
        /// <summary>
        /// Optional. Number of PEs blocking unpairing.
        /// </summary>
        public string BlockUnpairingPECount
        {
            get { return this._blockUnpairingPECount; }
            set { this._blockUnpairingPECount = value; }
        }
        
        private string _blockUnpairingRGCount;
        
        /// <summary>
        /// Optional. Number of RGs blocking unpairing.
        /// </summary>
        public string BlockUnpairingRGCount
        {
            get { return this._blockUnpairingRGCount; }
            set { this._blockUnpairingRGCount = value; }
        }
        
        private string _fabricBackingStatus;
        
        /// <summary>
        /// Optional. Container fabric backing status.
        /// </summary>
        public string FabricBackingStatus
        {
            get { return this._fabricBackingStatus; }
            set { this._fabricBackingStatus = value; }
        }
        
        private string _fabricFriendlyName;
        
        /// <summary>
        /// Optional. Fabric friendly name.
        /// </summary>
        public string FabricFriendlyName
        {
            get { return this._fabricFriendlyName; }
            set { this._fabricFriendlyName = value; }
        }
        
        private string _friendlyName;
        
        /// <summary>
        /// Optional. Gets or sets the friendly name.
        /// </summary>
        public string FriendlyName
        {
            get { return this._friendlyName; }
            set { this._friendlyName = value; }
        }
        
        private string _protectedPECount;
        
        /// <summary>
        /// Optional. Number of protected PEs.
        /// </summary>
        public string ProtectedPECount
        {
            get { return this._protectedPECount; }
            set { this._protectedPECount = value; }
        }
        
        private string _protectedRGCount;
        
        /// <summary>
        /// Optional. Number of protected RGs
        /// </summary>
        public string ProtectedRGCount
        {
            get { return this._protectedRGCount; }
            set { this._protectedRGCount = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the ProtectionContainerProperties
        /// class.
        /// </summary>
        public ProtectionContainerProperties()
        {
            this.AssociationDetails = new LazyList<PairingDetails>();
            this.AvailableReplicationProviders = new LazyList<ReplicationProviders>();
        }
    }
}
