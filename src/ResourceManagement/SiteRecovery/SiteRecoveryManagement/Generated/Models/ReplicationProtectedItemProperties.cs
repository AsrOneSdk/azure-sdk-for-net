// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure.Management.SiteRecovery.Models;

namespace Microsoft.Azure.Management.SiteRecovery.Models
{
    /// <summary>
    /// The definition of a Fabric properties.
    /// </summary>
    public partial class ReplicationProtectedItemProperties
    {
        private string _activeLocation;
        
        /// <summary>
        /// Optional. Gets or sets the Current active location of the PE.
        /// </summary>
        public string ActiveLocation
        {
            get { return this._activeLocation; }
            set { this._activeLocation = value; }
        }
        
        private IList<AllowedOperations> _allowedOperations;
        
        /// <summary>
        /// Optional. Gets or sets the allowed operations on the Replication
        /// protected item.
        /// </summary>
        public IList<AllowedOperations> AllowedOperations
        {
            get { return this._allowedOperations; }
            set { this._allowedOperations = value; }
        }
        
        private string _currentScenario;
        
        /// <summary>
        /// Optional. Gets or sets the current scenario.
        /// </summary>
        public string CurrentScenario
        {
            get { return this._currentScenario; }
            set { this._currentScenario = value; }
        }
        
        private ReplicationProviderSpecificSettings _customSettings;
        
        /// <summary>
        /// Optional. Gets or sets the Replication provider custom settings.
        /// </summary>
        public ReplicationProviderSpecificSettings CustomSettings
        {
            get { return this._customSettings; }
            set { this._customSettings = value; }
        }
        
        private string _friendlyName;
        
        /// <summary>
        /// Optional. Gets or sets the name.
        /// </summary>
        public string FriendlyName
        {
            get { return this._friendlyName; }
            set { this._friendlyName = value; }
        }
        
        private string _lastSuccessfulFailoverTime;
        
        /// <summary>
        /// Optional. Gets or sets the Last successful failover time.
        /// </summary>
        public string LastSuccessfulFailoverTime
        {
            get { return this._lastSuccessfulFailoverTime; }
            set { this._lastSuccessfulFailoverTime = value; }
        }
        
        private string _lastSuccessfulTestFailoverTime;
        
        /// <summary>
        /// Optional. Gets or sets the Last successful test failover time.
        /// </summary>
        public string LastSuccessfulTestFailoverTime
        {
            get { return this._lastSuccessfulTestFailoverTime; }
            set { this._lastSuccessfulTestFailoverTime = value; }
        }
        
        private string _policyFriendlyName;
        
        /// <summary>
        /// Optional. Gets or sets the name of Policy governing this PE.
        /// </summary>
        public string PolicyFriendlyName
        {
            get { return this._policyFriendlyName; }
            set { this._policyFriendlyName = value; }
        }
        
        private string _policyID;
        
        /// <summary>
        /// Optional. Gets or sets the ID of Policy governing this PE.
        /// </summary>
        public string PolicyID
        {
            get { return this._policyID; }
            set { this._policyID = value; }
        }
        
        private string _protectedItemSourceId;
        
        /// <summary>
        /// Optional. Gets or sets the protected item source Id.
        /// </summary>
        public string ProtectedItemSourceId
        {
            get { return this._protectedItemSourceId; }
            set { this._protectedItemSourceId = value; }
        }
        
        private string _protectedItemType;
        
        /// <summary>
        /// Optional. Gets or sets the type of protected item type.
        /// </summary>
        public string ProtectedItemType
        {
            get { return this._protectedItemType; }
            set { this._protectedItemType = value; }
        }
        
        private string _protectionStatus;
        
        /// <summary>
        /// Optional. Gets or sets the protection status.
        /// </summary>
        public string ProtectionStatus
        {
            get { return this._protectionStatus; }
            set { this._protectionStatus = value; }
        }
        
        private string _recoveryProviderName;
        
        /// <summary>
        /// Optional. Gets or sets the recovery provider name.
        /// </summary>
        public string RecoveryProviderName
        {
            get { return this._recoveryProviderName; }
            set { this._recoveryProviderName = value; }
        }
        
        private string _replicationHealth;
        
        /// <summary>
        /// Optional. Gets or sets the consolidated protection health
        /// </summary>
        public string ReplicationHealth
        {
            get { return this._replicationHealth; }
            set { this._replicationHealth = value; }
        }
        
        private IList<HealthError> _replicationHealthErrors;
        
        /// <summary>
        /// Optional. Gets or sets list of replication health errors.
        /// </summary>
        public IList<HealthError> ReplicationHealthErrors
        {
            get { return this._replicationHealthErrors; }
            set { this._replicationHealthErrors = value; }
        }
        
        private string _replicationProvider;
        
        /// <summary>
        /// Optional.  Gets or sets the Replication provider governing this PE
        /// currently.
        /// </summary>
        public string ReplicationProvider
        {
            get { return this._replicationProvider; }
            set { this._replicationProvider = value; }
        }
        
        private string _testFailoverStateDescription;
        
        /// <summary>
        /// Optional. Gets or sets the Test failover state description.
        /// </summary>
        public string TestFailoverStateDescription
        {
            get { return this._testFailoverStateDescription; }
            set { this._testFailoverStateDescription = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the
        /// ReplicationProtectedItemProperties class.
        /// </summary>
        public ReplicationProtectedItemProperties()
        {
            this.AllowedOperations = new LazyList<AllowedOperations>();
            this.ReplicationHealthErrors = new LazyList<HealthError>();
        }
    }
}
