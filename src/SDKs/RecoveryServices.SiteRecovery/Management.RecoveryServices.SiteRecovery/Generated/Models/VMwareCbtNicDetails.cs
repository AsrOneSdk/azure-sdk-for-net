// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// VMwareCbt NIC details.
    /// </summary>
    public partial class VMwareCbtNicDetails
    {
        /// <summary>
        /// Initializes a new instance of the VMwareCbtNicDetails class.
        /// </summary>
        public VMwareCbtNicDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VMwareCbtNicDetails class.
        /// </summary>
        /// <param name="nicId">The NIC Id.</param>
        /// <param name="isPrimaryNic">A value indicating whether this is the
        /// primary NIC.</param>
        /// <param name="sourceNetworkId">Source network Id.</param>
        /// <param name="targetSubnetName">Target subnet name.</param>
        /// <param name="ipAddressType">IP address type.</param>
        /// <param name="staticIPAddress">The static IP address.</param>
        /// <param name="isSelectedForMigration">A value indicating whether
        /// this NIC is selected for migration.</param>
        public VMwareCbtNicDetails(string nicId = default(string), bool? isPrimaryNic = default(bool?), string sourceNetworkId = default(string), string targetSubnetName = default(string), string ipAddressType = default(string), string staticIPAddress = default(string), bool? isSelectedForMigration = default(bool?))
        {
            NicId = nicId;
            IsPrimaryNic = isPrimaryNic;
            SourceNetworkId = sourceNetworkId;
            TargetSubnetName = targetSubnetName;
            IpAddressType = ipAddressType;
            StaticIPAddress = staticIPAddress;
            IsSelectedForMigration = isSelectedForMigration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the NIC Id.
        /// </summary>
        [JsonProperty(PropertyName = "nicId")]
        public string NicId { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this is the primary NIC.
        /// </summary>
        [JsonProperty(PropertyName = "isPrimaryNic")]
        public bool? IsPrimaryNic { get; set; }

        /// <summary>
        /// Gets or sets source network Id.
        /// </summary>
        [JsonProperty(PropertyName = "sourceNetworkId")]
        public string SourceNetworkId { get; set; }

        /// <summary>
        /// Gets or sets target subnet name.
        /// </summary>
        [JsonProperty(PropertyName = "targetSubnetName")]
        public string TargetSubnetName { get; set; }

        /// <summary>
        /// Gets or sets IP address type.
        /// </summary>
        [JsonProperty(PropertyName = "ipAddressType")]
        public string IpAddressType { get; set; }

        /// <summary>
        /// Gets or sets the static IP address.
        /// </summary>
        [JsonProperty(PropertyName = "staticIPAddress")]
        public string StaticIPAddress { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this NIC is selected for
        /// migration.
        /// </summary>
        [JsonProperty(PropertyName = "isSelectedForMigration")]
        public bool? IsSelectedForMigration { get; set; }

    }
}
